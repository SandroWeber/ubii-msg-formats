/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var proto_devices_topicMux_pb = require('../../proto/devices/topicMux_pb.js');
var proto_devices_topicDemux_pb = require('../../proto/devices/topicDemux_pb.js');
goog.exportSymbol('proto.ubii.sessions.IOMapping', null, global);
goog.exportSymbol('proto.ubii.sessions.IOMappingList', null, global);
goog.exportSymbol('proto.ubii.sessions.TopicInputMapping', null, global);
goog.exportSymbol('proto.ubii.sessions.TopicInputMappingList', null, global);
goog.exportSymbol('proto.ubii.sessions.TopicOutputMapping', null, global);
goog.exportSymbol('proto.ubii.sessions.TopicOutputMappingList', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ubii.sessions.TopicInputMapping = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ubii.sessions.TopicInputMapping.oneofGroups_);
};
goog.inherits(proto.ubii.sessions.TopicInputMapping, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ubii.sessions.TopicInputMapping.displayName = 'proto.ubii.sessions.TopicInputMapping';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ubii.sessions.TopicInputMapping.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.ubii.sessions.TopicInputMapping.TopicSourceCase = {
  TOPIC_SOURCE_NOT_SET: 0,
  TOPIC: 2,
  TOPIC_MUX: 3
};

/**
 * @return {proto.ubii.sessions.TopicInputMapping.TopicSourceCase}
 */
proto.ubii.sessions.TopicInputMapping.prototype.getTopicSourceCase = function() {
  return /** @type {proto.ubii.sessions.TopicInputMapping.TopicSourceCase} */(jspb.Message.computeOneofCase(this, proto.ubii.sessions.TopicInputMapping.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ubii.sessions.TopicInputMapping.prototype.toObject = function(opt_includeInstance) {
  return proto.ubii.sessions.TopicInputMapping.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ubii.sessions.TopicInputMapping} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ubii.sessions.TopicInputMapping.toObject = function(includeInstance, msg) {
  var f, obj = {
    inputName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    topic: jspb.Message.getFieldWithDefault(msg, 2, ""),
    topicMux: (f = msg.getTopicMux()) && proto_devices_topicMux_pb.TopicMux.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ubii.sessions.TopicInputMapping}
 */
proto.ubii.sessions.TopicInputMapping.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ubii.sessions.TopicInputMapping;
  return proto.ubii.sessions.TopicInputMapping.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ubii.sessions.TopicInputMapping} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ubii.sessions.TopicInputMapping}
 */
proto.ubii.sessions.TopicInputMapping.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInputName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTopic(value);
      break;
    case 3:
      var value = new proto_devices_topicMux_pb.TopicMux;
      reader.readMessage(value,proto_devices_topicMux_pb.TopicMux.deserializeBinaryFromReader);
      msg.setTopicMux(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ubii.sessions.TopicInputMapping.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ubii.sessions.TopicInputMapping.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ubii.sessions.TopicInputMapping} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ubii.sessions.TopicInputMapping.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInputName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTopicMux();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto_devices_topicMux_pb.TopicMux.serializeBinaryToWriter
    );
  }
};


/**
 * optional string input_name = 1;
 * @return {string}
 */
proto.ubii.sessions.TopicInputMapping.prototype.getInputName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ubii.sessions.TopicInputMapping.prototype.setInputName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string topic = 2;
 * @return {string}
 */
proto.ubii.sessions.TopicInputMapping.prototype.getTopic = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ubii.sessions.TopicInputMapping.prototype.setTopic = function(value) {
  jspb.Message.setOneofField(this, 2, proto.ubii.sessions.TopicInputMapping.oneofGroups_[0], value);
};


proto.ubii.sessions.TopicInputMapping.prototype.clearTopic = function() {
  jspb.Message.setOneofField(this, 2, proto.ubii.sessions.TopicInputMapping.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ubii.sessions.TopicInputMapping.prototype.hasTopic = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ubii.devices.TopicMux topic_mux = 3;
 * @return {?proto.ubii.devices.TopicMux}
 */
proto.ubii.sessions.TopicInputMapping.prototype.getTopicMux = function() {
  return /** @type{?proto.ubii.devices.TopicMux} */ (
    jspb.Message.getWrapperField(this, proto_devices_topicMux_pb.TopicMux, 3));
};


/** @param {?proto.ubii.devices.TopicMux|undefined} value */
proto.ubii.sessions.TopicInputMapping.prototype.setTopicMux = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.ubii.sessions.TopicInputMapping.oneofGroups_[0], value);
};


proto.ubii.sessions.TopicInputMapping.prototype.clearTopicMux = function() {
  this.setTopicMux(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ubii.sessions.TopicInputMapping.prototype.hasTopicMux = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ubii.sessions.TopicInputMappingList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ubii.sessions.TopicInputMappingList.repeatedFields_, null);
};
goog.inherits(proto.ubii.sessions.TopicInputMappingList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ubii.sessions.TopicInputMappingList.displayName = 'proto.ubii.sessions.TopicInputMappingList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ubii.sessions.TopicInputMappingList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ubii.sessions.TopicInputMappingList.prototype.toObject = function(opt_includeInstance) {
  return proto.ubii.sessions.TopicInputMappingList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ubii.sessions.TopicInputMappingList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ubii.sessions.TopicInputMappingList.toObject = function(includeInstance, msg) {
  var f, obj = {
    elementsList: jspb.Message.toObjectList(msg.getElementsList(),
    proto.ubii.sessions.TopicInputMapping.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ubii.sessions.TopicInputMappingList}
 */
proto.ubii.sessions.TopicInputMappingList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ubii.sessions.TopicInputMappingList;
  return proto.ubii.sessions.TopicInputMappingList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ubii.sessions.TopicInputMappingList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ubii.sessions.TopicInputMappingList}
 */
proto.ubii.sessions.TopicInputMappingList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ubii.sessions.TopicInputMapping;
      reader.readMessage(value,proto.ubii.sessions.TopicInputMapping.deserializeBinaryFromReader);
      msg.addElements(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ubii.sessions.TopicInputMappingList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ubii.sessions.TopicInputMappingList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ubii.sessions.TopicInputMappingList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ubii.sessions.TopicInputMappingList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getElementsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ubii.sessions.TopicInputMapping.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TopicInputMapping elements = 1;
 * @return {!Array<!proto.ubii.sessions.TopicInputMapping>}
 */
proto.ubii.sessions.TopicInputMappingList.prototype.getElementsList = function() {
  return /** @type{!Array<!proto.ubii.sessions.TopicInputMapping>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ubii.sessions.TopicInputMapping, 1));
};


/** @param {!Array<!proto.ubii.sessions.TopicInputMapping>} value */
proto.ubii.sessions.TopicInputMappingList.prototype.setElementsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ubii.sessions.TopicInputMapping=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ubii.sessions.TopicInputMapping}
 */
proto.ubii.sessions.TopicInputMappingList.prototype.addElements = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ubii.sessions.TopicInputMapping, opt_index);
};


proto.ubii.sessions.TopicInputMappingList.prototype.clearElementsList = function() {
  this.setElementsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ubii.sessions.TopicOutputMapping = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ubii.sessions.TopicOutputMapping.oneofGroups_);
};
goog.inherits(proto.ubii.sessions.TopicOutputMapping, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ubii.sessions.TopicOutputMapping.displayName = 'proto.ubii.sessions.TopicOutputMapping';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ubii.sessions.TopicOutputMapping.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.ubii.sessions.TopicOutputMapping.TopicDestinationCase = {
  TOPIC_DESTINATION_NOT_SET: 0,
  TOPIC: 2,
  TOPIC_DEMUX: 3
};

/**
 * @return {proto.ubii.sessions.TopicOutputMapping.TopicDestinationCase}
 */
proto.ubii.sessions.TopicOutputMapping.prototype.getTopicDestinationCase = function() {
  return /** @type {proto.ubii.sessions.TopicOutputMapping.TopicDestinationCase} */(jspb.Message.computeOneofCase(this, proto.ubii.sessions.TopicOutputMapping.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ubii.sessions.TopicOutputMapping.prototype.toObject = function(opt_includeInstance) {
  return proto.ubii.sessions.TopicOutputMapping.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ubii.sessions.TopicOutputMapping} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ubii.sessions.TopicOutputMapping.toObject = function(includeInstance, msg) {
  var f, obj = {
    outputName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    topic: jspb.Message.getFieldWithDefault(msg, 2, ""),
    topicDemux: (f = msg.getTopicDemux()) && proto_devices_topicDemux_pb.TopicDemux.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ubii.sessions.TopicOutputMapping}
 */
proto.ubii.sessions.TopicOutputMapping.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ubii.sessions.TopicOutputMapping;
  return proto.ubii.sessions.TopicOutputMapping.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ubii.sessions.TopicOutputMapping} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ubii.sessions.TopicOutputMapping}
 */
proto.ubii.sessions.TopicOutputMapping.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOutputName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTopic(value);
      break;
    case 3:
      var value = new proto_devices_topicDemux_pb.TopicDemux;
      reader.readMessage(value,proto_devices_topicDemux_pb.TopicDemux.deserializeBinaryFromReader);
      msg.setTopicDemux(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ubii.sessions.TopicOutputMapping.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ubii.sessions.TopicOutputMapping.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ubii.sessions.TopicOutputMapping} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ubii.sessions.TopicOutputMapping.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOutputName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTopicDemux();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto_devices_topicDemux_pb.TopicDemux.serializeBinaryToWriter
    );
  }
};


/**
 * optional string output_name = 1;
 * @return {string}
 */
proto.ubii.sessions.TopicOutputMapping.prototype.getOutputName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ubii.sessions.TopicOutputMapping.prototype.setOutputName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string topic = 2;
 * @return {string}
 */
proto.ubii.sessions.TopicOutputMapping.prototype.getTopic = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ubii.sessions.TopicOutputMapping.prototype.setTopic = function(value) {
  jspb.Message.setOneofField(this, 2, proto.ubii.sessions.TopicOutputMapping.oneofGroups_[0], value);
};


proto.ubii.sessions.TopicOutputMapping.prototype.clearTopic = function() {
  jspb.Message.setOneofField(this, 2, proto.ubii.sessions.TopicOutputMapping.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ubii.sessions.TopicOutputMapping.prototype.hasTopic = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ubii.devices.TopicDemux topic_demux = 3;
 * @return {?proto.ubii.devices.TopicDemux}
 */
proto.ubii.sessions.TopicOutputMapping.prototype.getTopicDemux = function() {
  return /** @type{?proto.ubii.devices.TopicDemux} */ (
    jspb.Message.getWrapperField(this, proto_devices_topicDemux_pb.TopicDemux, 3));
};


/** @param {?proto.ubii.devices.TopicDemux|undefined} value */
proto.ubii.sessions.TopicOutputMapping.prototype.setTopicDemux = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.ubii.sessions.TopicOutputMapping.oneofGroups_[0], value);
};


proto.ubii.sessions.TopicOutputMapping.prototype.clearTopicDemux = function() {
  this.setTopicDemux(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ubii.sessions.TopicOutputMapping.prototype.hasTopicDemux = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ubii.sessions.TopicOutputMappingList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ubii.sessions.TopicOutputMappingList.repeatedFields_, null);
};
goog.inherits(proto.ubii.sessions.TopicOutputMappingList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ubii.sessions.TopicOutputMappingList.displayName = 'proto.ubii.sessions.TopicOutputMappingList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ubii.sessions.TopicOutputMappingList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ubii.sessions.TopicOutputMappingList.prototype.toObject = function(opt_includeInstance) {
  return proto.ubii.sessions.TopicOutputMappingList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ubii.sessions.TopicOutputMappingList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ubii.sessions.TopicOutputMappingList.toObject = function(includeInstance, msg) {
  var f, obj = {
    elementsList: jspb.Message.toObjectList(msg.getElementsList(),
    proto.ubii.sessions.TopicOutputMapping.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ubii.sessions.TopicOutputMappingList}
 */
proto.ubii.sessions.TopicOutputMappingList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ubii.sessions.TopicOutputMappingList;
  return proto.ubii.sessions.TopicOutputMappingList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ubii.sessions.TopicOutputMappingList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ubii.sessions.TopicOutputMappingList}
 */
proto.ubii.sessions.TopicOutputMappingList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ubii.sessions.TopicOutputMapping;
      reader.readMessage(value,proto.ubii.sessions.TopicOutputMapping.deserializeBinaryFromReader);
      msg.addElements(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ubii.sessions.TopicOutputMappingList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ubii.sessions.TopicOutputMappingList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ubii.sessions.TopicOutputMappingList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ubii.sessions.TopicOutputMappingList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getElementsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ubii.sessions.TopicOutputMapping.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TopicOutputMapping elements = 1;
 * @return {!Array<!proto.ubii.sessions.TopicOutputMapping>}
 */
proto.ubii.sessions.TopicOutputMappingList.prototype.getElementsList = function() {
  return /** @type{!Array<!proto.ubii.sessions.TopicOutputMapping>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ubii.sessions.TopicOutputMapping, 1));
};


/** @param {!Array<!proto.ubii.sessions.TopicOutputMapping>} value */
proto.ubii.sessions.TopicOutputMappingList.prototype.setElementsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ubii.sessions.TopicOutputMapping=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ubii.sessions.TopicOutputMapping}
 */
proto.ubii.sessions.TopicOutputMappingList.prototype.addElements = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ubii.sessions.TopicOutputMapping, opt_index);
};


proto.ubii.sessions.TopicOutputMappingList.prototype.clearElementsList = function() {
  this.setElementsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ubii.sessions.IOMapping = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ubii.sessions.IOMapping.repeatedFields_, null);
};
goog.inherits(proto.ubii.sessions.IOMapping, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ubii.sessions.IOMapping.displayName = 'proto.ubii.sessions.IOMapping';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ubii.sessions.IOMapping.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ubii.sessions.IOMapping.prototype.toObject = function(opt_includeInstance) {
  return proto.ubii.sessions.IOMapping.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ubii.sessions.IOMapping} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ubii.sessions.IOMapping.toObject = function(includeInstance, msg) {
  var f, obj = {
    processingModuleId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    inputMappingsList: jspb.Message.toObjectList(msg.getInputMappingsList(),
    proto.ubii.sessions.TopicInputMapping.toObject, includeInstance),
    outputMappingsList: jspb.Message.toObjectList(msg.getOutputMappingsList(),
    proto.ubii.sessions.TopicOutputMapping.toObject, includeInstance),
    processingModuleName: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ubii.sessions.IOMapping}
 */
proto.ubii.sessions.IOMapping.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ubii.sessions.IOMapping;
  return proto.ubii.sessions.IOMapping.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ubii.sessions.IOMapping} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ubii.sessions.IOMapping}
 */
proto.ubii.sessions.IOMapping.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProcessingModuleId(value);
      break;
    case 2:
      var value = new proto.ubii.sessions.TopicInputMapping;
      reader.readMessage(value,proto.ubii.sessions.TopicInputMapping.deserializeBinaryFromReader);
      msg.addInputMappings(value);
      break;
    case 3:
      var value = new proto.ubii.sessions.TopicOutputMapping;
      reader.readMessage(value,proto.ubii.sessions.TopicOutputMapping.deserializeBinaryFromReader);
      msg.addOutputMappings(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setProcessingModuleName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ubii.sessions.IOMapping.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ubii.sessions.IOMapping.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ubii.sessions.IOMapping} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ubii.sessions.IOMapping.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProcessingModuleId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInputMappingsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.ubii.sessions.TopicInputMapping.serializeBinaryToWriter
    );
  }
  f = message.getOutputMappingsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.ubii.sessions.TopicOutputMapping.serializeBinaryToWriter
    );
  }
  f = message.getProcessingModuleName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string processing_module_id = 1;
 * @return {string}
 */
proto.ubii.sessions.IOMapping.prototype.getProcessingModuleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ubii.sessions.IOMapping.prototype.setProcessingModuleId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated TopicInputMapping input_mappings = 2;
 * @return {!Array<!proto.ubii.sessions.TopicInputMapping>}
 */
proto.ubii.sessions.IOMapping.prototype.getInputMappingsList = function() {
  return /** @type{!Array<!proto.ubii.sessions.TopicInputMapping>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ubii.sessions.TopicInputMapping, 2));
};


/** @param {!Array<!proto.ubii.sessions.TopicInputMapping>} value */
proto.ubii.sessions.IOMapping.prototype.setInputMappingsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ubii.sessions.TopicInputMapping=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ubii.sessions.TopicInputMapping}
 */
proto.ubii.sessions.IOMapping.prototype.addInputMappings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ubii.sessions.TopicInputMapping, opt_index);
};


proto.ubii.sessions.IOMapping.prototype.clearInputMappingsList = function() {
  this.setInputMappingsList([]);
};


/**
 * repeated TopicOutputMapping output_mappings = 3;
 * @return {!Array<!proto.ubii.sessions.TopicOutputMapping>}
 */
proto.ubii.sessions.IOMapping.prototype.getOutputMappingsList = function() {
  return /** @type{!Array<!proto.ubii.sessions.TopicOutputMapping>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ubii.sessions.TopicOutputMapping, 3));
};


/** @param {!Array<!proto.ubii.sessions.TopicOutputMapping>} value */
proto.ubii.sessions.IOMapping.prototype.setOutputMappingsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ubii.sessions.TopicOutputMapping=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ubii.sessions.TopicOutputMapping}
 */
proto.ubii.sessions.IOMapping.prototype.addOutputMappings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ubii.sessions.TopicOutputMapping, opt_index);
};


proto.ubii.sessions.IOMapping.prototype.clearOutputMappingsList = function() {
  this.setOutputMappingsList([]);
};


/**
 * optional string processing_module_name = 4;
 * @return {string}
 */
proto.ubii.sessions.IOMapping.prototype.getProcessingModuleName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.ubii.sessions.IOMapping.prototype.setProcessingModuleName = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ubii.sessions.IOMappingList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ubii.sessions.IOMappingList.repeatedFields_, null);
};
goog.inherits(proto.ubii.sessions.IOMappingList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ubii.sessions.IOMappingList.displayName = 'proto.ubii.sessions.IOMappingList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ubii.sessions.IOMappingList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ubii.sessions.IOMappingList.prototype.toObject = function(opt_includeInstance) {
  return proto.ubii.sessions.IOMappingList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ubii.sessions.IOMappingList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ubii.sessions.IOMappingList.toObject = function(includeInstance, msg) {
  var f, obj = {
    elementsList: jspb.Message.toObjectList(msg.getElementsList(),
    proto.ubii.sessions.IOMapping.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ubii.sessions.IOMappingList}
 */
proto.ubii.sessions.IOMappingList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ubii.sessions.IOMappingList;
  return proto.ubii.sessions.IOMappingList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ubii.sessions.IOMappingList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ubii.sessions.IOMappingList}
 */
proto.ubii.sessions.IOMappingList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ubii.sessions.IOMapping;
      reader.readMessage(value,proto.ubii.sessions.IOMapping.deserializeBinaryFromReader);
      msg.addElements(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ubii.sessions.IOMappingList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ubii.sessions.IOMappingList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ubii.sessions.IOMappingList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ubii.sessions.IOMappingList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getElementsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ubii.sessions.IOMapping.serializeBinaryToWriter
    );
  }
};


/**
 * repeated IOMapping elements = 1;
 * @return {!Array<!proto.ubii.sessions.IOMapping>}
 */
proto.ubii.sessions.IOMappingList.prototype.getElementsList = function() {
  return /** @type{!Array<!proto.ubii.sessions.IOMapping>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ubii.sessions.IOMapping, 1));
};


/** @param {!Array<!proto.ubii.sessions.IOMapping>} value */
proto.ubii.sessions.IOMappingList.prototype.setElementsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ubii.sessions.IOMapping=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ubii.sessions.IOMapping}
 */
proto.ubii.sessions.IOMappingList.prototype.addElements = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ubii.sessions.IOMapping, opt_index);
};


proto.ubii.sessions.IOMappingList.prototype.clearElementsList = function() {
  this.setElementsList([]);
};


goog.object.extend(exports, proto.ubii.sessions);
