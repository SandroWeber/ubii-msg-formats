// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/topicData/topicDataRecord/topicDataRecord.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Ubii.TopicData {

  /// <summary>Holder for reflection information generated from proto/topicData/topicDataRecord/topicDataRecord.proto</summary>
  public static partial class TopicDataRecordReflection {

    #region Descriptor
    /// <summary>File descriptor for proto/topicData/topicDataRecord/topicDataRecord.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TopicDataRecordReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjVwcm90by90b3BpY0RhdGEvdG9waWNEYXRhUmVjb3JkL3RvcGljRGF0YVJl",
            "Y29yZC5wcm90bxIOdWJpaS50b3BpY0RhdGEaL3Byb3RvL3RvcGljRGF0YS90",
            "b3BpY0RhdGFSZWNvcmQvdGltZXN0YW1wLnByb3RvGjtwcm90by90b3BpY0Rh",
            "dGEvdG9waWNEYXRhUmVjb3JkL2RhdGFTdHJ1Y3R1cmUvdmVjdG9yMi5wcm90",
            "bxo7cHJvdG8vdG9waWNEYXRhL3RvcGljRGF0YVJlY29yZC9kYXRhU3RydWN0",
            "dXJlL3ZlY3RvcjMucHJvdG8aO3Byb3RvL3RvcGljRGF0YS90b3BpY0RhdGFS",
            "ZWNvcmQvZGF0YVN0cnVjdHVyZS92ZWN0b3I0LnByb3RvGj5wcm90by90b3Bp",
            "Y0RhdGEvdG9waWNEYXRhUmVjb3JkL2RhdGFTdHJ1Y3R1cmUvcXVhdGVybmlv",
            "bi5wcm90bxo9cHJvdG8vdG9waWNEYXRhL3RvcGljRGF0YVJlY29yZC9kYXRh",
            "U3RydWN0dXJlL21hdHJpeDN4Mi5wcm90bxo9cHJvdG8vdG9waWNEYXRhL3Rv",
            "cGljRGF0YVJlY29yZC9kYXRhU3RydWN0dXJlL21hdHJpeDR4NC5wcm90bxo5",
            "cHJvdG8vdG9waWNEYXRhL3RvcGljRGF0YVJlY29yZC9kYXRhU3RydWN0dXJl",
            "L2NvbG9yLnByb3RvGj5wcm90by90b3BpY0RhdGEvdG9waWNEYXRhUmVjb3Jk",
            "L2RhdGFTdHJ1Y3R1cmUvdG91Y2hFdmVudC5wcm90bxo8cHJvdG8vdG9waWNE",
            "YXRhL3RvcGljRGF0YVJlY29yZC9kYXRhU3RydWN0dXJlL2tleUV2ZW50LnBy",
            "b3RvGj5wcm90by90b3BpY0RhdGEvdG9waWNEYXRhUmVjb3JkL2RhdGFTdHJ1",
            "Y3R1cmUvbW91c2VFdmVudC5wcm90bxo8cHJvdG8vdG9waWNEYXRhL3RvcGlj",
            "RGF0YVJlY29yZC9kYXRhU3RydWN0dXJlL215b0V2ZW50LnByb3RvGjhwcm90",
            "by90b3BpY0RhdGEvdG9waWNEYXRhUmVjb3JkL2RhdGFTdHJ1Y3R1cmUvcG9z",
            "ZS5wcm90bxo8cHJvdG8vdG9waWNEYXRhL3RvcGljRGF0YVJlY29yZC9kYXRh",
            "U3RydWN0dXJlL29iamVjdDNkLnByb3RvIpQGCg9Ub3BpY0RhdGFSZWNvcmQS",
            "DQoFdG9waWMYASABKAkSLAoJdGltZXN0YW1wGAIgASgLMhkudWJpaS50b3Bp",
            "Y0RhdGEuVGltZXN0YW1wEhAKBmRvdWJsZRgDIAEoAUgAEg4KBGJvb2wYBCAB",
            "KAhIABIQCgZzdHJpbmcYBSABKAlIABIuCgd2ZWN0b3IyGAYgASgLMhsudWJp",
            "aS5kYXRhU3RydWN0dXJlLlZlY3RvcjJIABIuCgd2ZWN0b3IzGAcgASgLMhsu",
            "dWJpaS5kYXRhU3RydWN0dXJlLlZlY3RvcjNIABIuCgd2ZWN0b3I0GAggASgL",
            "MhsudWJpaS5kYXRhU3RydWN0dXJlLlZlY3RvcjRIABI0CgpxdWF0ZXJuaW9u",
            "GAkgASgLMh4udWJpaS5kYXRhU3RydWN0dXJlLlF1YXRlcm5pb25IABIyCglt",
            "YXRyaXgzeDIYCiABKAsyHS51YmlpLmRhdGFTdHJ1Y3R1cmUuTWF0cml4M3gy",
            "SAASMgoJbWF0cml4NHg0GAsgASgLMh0udWJpaS5kYXRhU3RydWN0dXJlLk1h",
            "dHJpeDR4NEgAEioKBWNvbG9yGAwgASgLMhkudWJpaS5kYXRhU3RydWN0dXJl",
            "LkNvbG9ySAASNQoLdG91Y2hfZXZlbnQYDSABKAsyHi51YmlpLmRhdGFTdHJ1",
            "Y3R1cmUuVG91Y2hFdmVudEgAEjEKCWtleV9ldmVudBgOIAEoCzIcLnViaWku",
            "ZGF0YVN0cnVjdHVyZS5LZXlFdmVudEgAEjUKC21vdXNlX2V2ZW50GA8gASgL",
            "Mh4udWJpaS5kYXRhU3RydWN0dXJlLk1vdXNlRXZlbnRIABIxCglteW9fZXZl",
            "bnQYECABKAsyHC51YmlpLmRhdGFTdHJ1Y3R1cmUuTXlvRXZlbnRIABIoCgRw",
            "b3NlGBEgASgLMhgudWJpaS5kYXRhU3RydWN0dXJlLlBvc2VIABIwCghvYmpl",
            "Y3QzRBgSIAEoCzIcLnViaWkuZGF0YVN0cnVjdHVyZS5PYmplY3QzREgAQgYK",
            "BHR5cGUiSAoTVG9waWNEYXRhUmVjb3JkTGlzdBIxCghlbGVtZW50cxgBIAMo",
            "CzIfLnViaWkudG9waWNEYXRhLlRvcGljRGF0YVJlY29yZGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Ubii.TopicData.TimestampReflection.Descriptor, global::Ubii.DataStructure.Vector2Reflection.Descriptor, global::Ubii.DataStructure.Vector3Reflection.Descriptor, global::Ubii.DataStructure.Vector4Reflection.Descriptor, global::Ubii.DataStructure.QuaternionReflection.Descriptor, global::Ubii.DataStructure.Matrix3X2Reflection.Descriptor, global::Ubii.DataStructure.Matrix4X4Reflection.Descriptor, global::Ubii.DataStructure.ColorReflection.Descriptor, global::Ubii.DataStructure.TouchEventReflection.Descriptor, global::Ubii.DataStructure.KeyEventReflection.Descriptor, global::Ubii.DataStructure.MouseEventReflection.Descriptor, global::Ubii.DataStructure.MyoEventReflection.Descriptor, global::Ubii.DataStructure.PoseReflection.Descriptor, global::Ubii.DataStructure.Object3DReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Ubii.TopicData.TopicDataRecord), global::Ubii.TopicData.TopicDataRecord.Parser, new[]{ "Topic", "Timestamp", "Double", "Bool", "String", "Vector2", "Vector3", "Vector4", "Quaternion", "Matrix3X2", "Matrix4X4", "Color", "TouchEvent", "KeyEvent", "MouseEvent", "MyoEvent", "Pose", "Object3D" }, new[]{ "Type" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ubii.TopicData.TopicDataRecordList), global::Ubii.TopicData.TopicDataRecordList.Parser, new[]{ "Elements" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class TopicDataRecord : pb::IMessage<TopicDataRecord> {
    private static readonly pb::MessageParser<TopicDataRecord> _parser = new pb::MessageParser<TopicDataRecord>(() => new TopicDataRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TopicDataRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ubii.TopicData.TopicDataRecordReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TopicDataRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TopicDataRecord(TopicDataRecord other) : this() {
      topic_ = other.topic_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      switch (other.TypeCase) {
        case TypeOneofCase.Double:
          Double = other.Double;
          break;
        case TypeOneofCase.Bool:
          Bool = other.Bool;
          break;
        case TypeOneofCase.String:
          String = other.String;
          break;
        case TypeOneofCase.Vector2:
          Vector2 = other.Vector2.Clone();
          break;
        case TypeOneofCase.Vector3:
          Vector3 = other.Vector3.Clone();
          break;
        case TypeOneofCase.Vector4:
          Vector4 = other.Vector4.Clone();
          break;
        case TypeOneofCase.Quaternion:
          Quaternion = other.Quaternion.Clone();
          break;
        case TypeOneofCase.Matrix3X2:
          Matrix3X2 = other.Matrix3X2.Clone();
          break;
        case TypeOneofCase.Matrix4X4:
          Matrix4X4 = other.Matrix4X4.Clone();
          break;
        case TypeOneofCase.Color:
          Color = other.Color.Clone();
          break;
        case TypeOneofCase.TouchEvent:
          TouchEvent = other.TouchEvent.Clone();
          break;
        case TypeOneofCase.KeyEvent:
          KeyEvent = other.KeyEvent.Clone();
          break;
        case TypeOneofCase.MouseEvent:
          MouseEvent = other.MouseEvent.Clone();
          break;
        case TypeOneofCase.MyoEvent:
          MyoEvent = other.MyoEvent.Clone();
          break;
        case TypeOneofCase.Pose:
          Pose = other.Pose.Clone();
          break;
        case TypeOneofCase.Object3D:
          Object3D = other.Object3D.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TopicDataRecord Clone() {
      return new TopicDataRecord(this);
    }

    /// <summary>Field number for the "topic" field.</summary>
    public const int TopicFieldNumber = 1;
    private string topic_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Topic {
      get { return topic_; }
      set {
        topic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private global::Ubii.TopicData.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ubii.TopicData.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "double" field.</summary>
    public const int DoubleFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Double {
      get { return typeCase_ == TypeOneofCase.Double ? (double) type_ : 0D; }
      set {
        type_ = value;
        typeCase_ = TypeOneofCase.Double;
      }
    }

    /// <summary>Field number for the "bool" field.</summary>
    public const int BoolFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Bool {
      get { return typeCase_ == TypeOneofCase.Bool ? (bool) type_ : false; }
      set {
        type_ = value;
        typeCase_ = TypeOneofCase.Bool;
      }
    }

    /// <summary>Field number for the "string" field.</summary>
    public const int StringFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string String {
      get { return typeCase_ == TypeOneofCase.String ? (string) type_ : ""; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        typeCase_ = TypeOneofCase.String;
      }
    }

    /// <summary>Field number for the "vector2" field.</summary>
    public const int Vector2FieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ubii.DataStructure.Vector2 Vector2 {
      get { return typeCase_ == TypeOneofCase.Vector2 ? (global::Ubii.DataStructure.Vector2) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Vector2;
      }
    }

    /// <summary>Field number for the "vector3" field.</summary>
    public const int Vector3FieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ubii.DataStructure.Vector3 Vector3 {
      get { return typeCase_ == TypeOneofCase.Vector3 ? (global::Ubii.DataStructure.Vector3) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Vector3;
      }
    }

    /// <summary>Field number for the "vector4" field.</summary>
    public const int Vector4FieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ubii.DataStructure.Vector4 Vector4 {
      get { return typeCase_ == TypeOneofCase.Vector4 ? (global::Ubii.DataStructure.Vector4) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Vector4;
      }
    }

    /// <summary>Field number for the "quaternion" field.</summary>
    public const int QuaternionFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ubii.DataStructure.Quaternion Quaternion {
      get { return typeCase_ == TypeOneofCase.Quaternion ? (global::Ubii.DataStructure.Quaternion) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Quaternion;
      }
    }

    /// <summary>Field number for the "matrix3x2" field.</summary>
    public const int Matrix3X2FieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ubii.DataStructure.Matrix3x2 Matrix3X2 {
      get { return typeCase_ == TypeOneofCase.Matrix3X2 ? (global::Ubii.DataStructure.Matrix3x2) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Matrix3X2;
      }
    }

    /// <summary>Field number for the "matrix4x4" field.</summary>
    public const int Matrix4X4FieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ubii.DataStructure.Matrix4x4 Matrix4X4 {
      get { return typeCase_ == TypeOneofCase.Matrix4X4 ? (global::Ubii.DataStructure.Matrix4x4) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Matrix4X4;
      }
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ubii.DataStructure.Color Color {
      get { return typeCase_ == TypeOneofCase.Color ? (global::Ubii.DataStructure.Color) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Color;
      }
    }

    /// <summary>Field number for the "touch_event" field.</summary>
    public const int TouchEventFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ubii.DataStructure.TouchEvent TouchEvent {
      get { return typeCase_ == TypeOneofCase.TouchEvent ? (global::Ubii.DataStructure.TouchEvent) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.TouchEvent;
      }
    }

    /// <summary>Field number for the "key_event" field.</summary>
    public const int KeyEventFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ubii.DataStructure.KeyEvent KeyEvent {
      get { return typeCase_ == TypeOneofCase.KeyEvent ? (global::Ubii.DataStructure.KeyEvent) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.KeyEvent;
      }
    }

    /// <summary>Field number for the "mouse_event" field.</summary>
    public const int MouseEventFieldNumber = 15;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ubii.DataStructure.MouseEvent MouseEvent {
      get { return typeCase_ == TypeOneofCase.MouseEvent ? (global::Ubii.DataStructure.MouseEvent) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.MouseEvent;
      }
    }

    /// <summary>Field number for the "myo_event" field.</summary>
    public const int MyoEventFieldNumber = 16;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ubii.DataStructure.MyoEvent MyoEvent {
      get { return typeCase_ == TypeOneofCase.MyoEvent ? (global::Ubii.DataStructure.MyoEvent) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.MyoEvent;
      }
    }

    /// <summary>Field number for the "pose" field.</summary>
    public const int PoseFieldNumber = 17;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ubii.DataStructure.Pose Pose {
      get { return typeCase_ == TypeOneofCase.Pose ? (global::Ubii.DataStructure.Pose) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Pose;
      }
    }

    /// <summary>Field number for the "object3D" field.</summary>
    public const int Object3DFieldNumber = 18;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ubii.DataStructure.Object3D Object3D {
      get { return typeCase_ == TypeOneofCase.Object3D ? (global::Ubii.DataStructure.Object3D) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Object3D;
      }
    }

    private object type_;
    /// <summary>Enum of possible cases for the "type" oneof.</summary>
    public enum TypeOneofCase {
      None = 0,
      Double = 3,
      Bool = 4,
      String = 5,
      Vector2 = 6,
      Vector3 = 7,
      Vector4 = 8,
      Quaternion = 9,
      Matrix3X2 = 10,
      Matrix4X4 = 11,
      Color = 12,
      TouchEvent = 13,
      KeyEvent = 14,
      MouseEvent = 15,
      MyoEvent = 16,
      Pose = 17,
      Object3D = 18,
    }
    private TypeOneofCase typeCase_ = TypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofCase TypeCase {
      get { return typeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      typeCase_ = TypeOneofCase.None;
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TopicDataRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TopicDataRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Topic != other.Topic) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Double, other.Double)) return false;
      if (Bool != other.Bool) return false;
      if (String != other.String) return false;
      if (!object.Equals(Vector2, other.Vector2)) return false;
      if (!object.Equals(Vector3, other.Vector3)) return false;
      if (!object.Equals(Vector4, other.Vector4)) return false;
      if (!object.Equals(Quaternion, other.Quaternion)) return false;
      if (!object.Equals(Matrix3X2, other.Matrix3X2)) return false;
      if (!object.Equals(Matrix4X4, other.Matrix4X4)) return false;
      if (!object.Equals(Color, other.Color)) return false;
      if (!object.Equals(TouchEvent, other.TouchEvent)) return false;
      if (!object.Equals(KeyEvent, other.KeyEvent)) return false;
      if (!object.Equals(MouseEvent, other.MouseEvent)) return false;
      if (!object.Equals(MyoEvent, other.MyoEvent)) return false;
      if (!object.Equals(Pose, other.Pose)) return false;
      if (!object.Equals(Object3D, other.Object3D)) return false;
      if (TypeCase != other.TypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Topic.Length != 0) hash ^= Topic.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (typeCase_ == TypeOneofCase.Double) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Double);
      if (typeCase_ == TypeOneofCase.Bool) hash ^= Bool.GetHashCode();
      if (typeCase_ == TypeOneofCase.String) hash ^= String.GetHashCode();
      if (typeCase_ == TypeOneofCase.Vector2) hash ^= Vector2.GetHashCode();
      if (typeCase_ == TypeOneofCase.Vector3) hash ^= Vector3.GetHashCode();
      if (typeCase_ == TypeOneofCase.Vector4) hash ^= Vector4.GetHashCode();
      if (typeCase_ == TypeOneofCase.Quaternion) hash ^= Quaternion.GetHashCode();
      if (typeCase_ == TypeOneofCase.Matrix3X2) hash ^= Matrix3X2.GetHashCode();
      if (typeCase_ == TypeOneofCase.Matrix4X4) hash ^= Matrix4X4.GetHashCode();
      if (typeCase_ == TypeOneofCase.Color) hash ^= Color.GetHashCode();
      if (typeCase_ == TypeOneofCase.TouchEvent) hash ^= TouchEvent.GetHashCode();
      if (typeCase_ == TypeOneofCase.KeyEvent) hash ^= KeyEvent.GetHashCode();
      if (typeCase_ == TypeOneofCase.MouseEvent) hash ^= MouseEvent.GetHashCode();
      if (typeCase_ == TypeOneofCase.MyoEvent) hash ^= MyoEvent.GetHashCode();
      if (typeCase_ == TypeOneofCase.Pose) hash ^= Pose.GetHashCode();
      if (typeCase_ == TypeOneofCase.Object3D) hash ^= Object3D.GetHashCode();
      hash ^= (int) typeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Topic.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Topic);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Timestamp);
      }
      if (typeCase_ == TypeOneofCase.Double) {
        output.WriteRawTag(25);
        output.WriteDouble(Double);
      }
      if (typeCase_ == TypeOneofCase.Bool) {
        output.WriteRawTag(32);
        output.WriteBool(Bool);
      }
      if (typeCase_ == TypeOneofCase.String) {
        output.WriteRawTag(42);
        output.WriteString(String);
      }
      if (typeCase_ == TypeOneofCase.Vector2) {
        output.WriteRawTag(50);
        output.WriteMessage(Vector2);
      }
      if (typeCase_ == TypeOneofCase.Vector3) {
        output.WriteRawTag(58);
        output.WriteMessage(Vector3);
      }
      if (typeCase_ == TypeOneofCase.Vector4) {
        output.WriteRawTag(66);
        output.WriteMessage(Vector4);
      }
      if (typeCase_ == TypeOneofCase.Quaternion) {
        output.WriteRawTag(74);
        output.WriteMessage(Quaternion);
      }
      if (typeCase_ == TypeOneofCase.Matrix3X2) {
        output.WriteRawTag(82);
        output.WriteMessage(Matrix3X2);
      }
      if (typeCase_ == TypeOneofCase.Matrix4X4) {
        output.WriteRawTag(90);
        output.WriteMessage(Matrix4X4);
      }
      if (typeCase_ == TypeOneofCase.Color) {
        output.WriteRawTag(98);
        output.WriteMessage(Color);
      }
      if (typeCase_ == TypeOneofCase.TouchEvent) {
        output.WriteRawTag(106);
        output.WriteMessage(TouchEvent);
      }
      if (typeCase_ == TypeOneofCase.KeyEvent) {
        output.WriteRawTag(114);
        output.WriteMessage(KeyEvent);
      }
      if (typeCase_ == TypeOneofCase.MouseEvent) {
        output.WriteRawTag(122);
        output.WriteMessage(MouseEvent);
      }
      if (typeCase_ == TypeOneofCase.MyoEvent) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(MyoEvent);
      }
      if (typeCase_ == TypeOneofCase.Pose) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(Pose);
      }
      if (typeCase_ == TypeOneofCase.Object3D) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(Object3D);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Topic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Topic);
      }
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (typeCase_ == TypeOneofCase.Double) {
        size += 1 + 8;
      }
      if (typeCase_ == TypeOneofCase.Bool) {
        size += 1 + 1;
      }
      if (typeCase_ == TypeOneofCase.String) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(String);
      }
      if (typeCase_ == TypeOneofCase.Vector2) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Vector2);
      }
      if (typeCase_ == TypeOneofCase.Vector3) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Vector3);
      }
      if (typeCase_ == TypeOneofCase.Vector4) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Vector4);
      }
      if (typeCase_ == TypeOneofCase.Quaternion) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Quaternion);
      }
      if (typeCase_ == TypeOneofCase.Matrix3X2) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Matrix3X2);
      }
      if (typeCase_ == TypeOneofCase.Matrix4X4) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Matrix4X4);
      }
      if (typeCase_ == TypeOneofCase.Color) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Color);
      }
      if (typeCase_ == TypeOneofCase.TouchEvent) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TouchEvent);
      }
      if (typeCase_ == TypeOneofCase.KeyEvent) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(KeyEvent);
      }
      if (typeCase_ == TypeOneofCase.MouseEvent) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MouseEvent);
      }
      if (typeCase_ == TypeOneofCase.MyoEvent) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MyoEvent);
      }
      if (typeCase_ == TypeOneofCase.Pose) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Pose);
      }
      if (typeCase_ == TypeOneofCase.Object3D) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Object3D);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TopicDataRecord other) {
      if (other == null) {
        return;
      }
      if (other.Topic.Length != 0) {
        Topic = other.Topic;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          timestamp_ = new global::Ubii.TopicData.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      switch (other.TypeCase) {
        case TypeOneofCase.Double:
          Double = other.Double;
          break;
        case TypeOneofCase.Bool:
          Bool = other.Bool;
          break;
        case TypeOneofCase.String:
          String = other.String;
          break;
        case TypeOneofCase.Vector2:
          if (Vector2 == null) {
            Vector2 = new global::Ubii.DataStructure.Vector2();
          }
          Vector2.MergeFrom(other.Vector2);
          break;
        case TypeOneofCase.Vector3:
          if (Vector3 == null) {
            Vector3 = new global::Ubii.DataStructure.Vector3();
          }
          Vector3.MergeFrom(other.Vector3);
          break;
        case TypeOneofCase.Vector4:
          if (Vector4 == null) {
            Vector4 = new global::Ubii.DataStructure.Vector4();
          }
          Vector4.MergeFrom(other.Vector4);
          break;
        case TypeOneofCase.Quaternion:
          if (Quaternion == null) {
            Quaternion = new global::Ubii.DataStructure.Quaternion();
          }
          Quaternion.MergeFrom(other.Quaternion);
          break;
        case TypeOneofCase.Matrix3X2:
          if (Matrix3X2 == null) {
            Matrix3X2 = new global::Ubii.DataStructure.Matrix3x2();
          }
          Matrix3X2.MergeFrom(other.Matrix3X2);
          break;
        case TypeOneofCase.Matrix4X4:
          if (Matrix4X4 == null) {
            Matrix4X4 = new global::Ubii.DataStructure.Matrix4x4();
          }
          Matrix4X4.MergeFrom(other.Matrix4X4);
          break;
        case TypeOneofCase.Color:
          if (Color == null) {
            Color = new global::Ubii.DataStructure.Color();
          }
          Color.MergeFrom(other.Color);
          break;
        case TypeOneofCase.TouchEvent:
          if (TouchEvent == null) {
            TouchEvent = new global::Ubii.DataStructure.TouchEvent();
          }
          TouchEvent.MergeFrom(other.TouchEvent);
          break;
        case TypeOneofCase.KeyEvent:
          if (KeyEvent == null) {
            KeyEvent = new global::Ubii.DataStructure.KeyEvent();
          }
          KeyEvent.MergeFrom(other.KeyEvent);
          break;
        case TypeOneofCase.MouseEvent:
          if (MouseEvent == null) {
            MouseEvent = new global::Ubii.DataStructure.MouseEvent();
          }
          MouseEvent.MergeFrom(other.MouseEvent);
          break;
        case TypeOneofCase.MyoEvent:
          if (MyoEvent == null) {
            MyoEvent = new global::Ubii.DataStructure.MyoEvent();
          }
          MyoEvent.MergeFrom(other.MyoEvent);
          break;
        case TypeOneofCase.Pose:
          if (Pose == null) {
            Pose = new global::Ubii.DataStructure.Pose();
          }
          Pose.MergeFrom(other.Pose);
          break;
        case TypeOneofCase.Object3D:
          if (Object3D == null) {
            Object3D = new global::Ubii.DataStructure.Object3D();
          }
          Object3D.MergeFrom(other.Object3D);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Topic = input.ReadString();
            break;
          }
          case 18: {
            if (timestamp_ == null) {
              timestamp_ = new global::Ubii.TopicData.Timestamp();
            }
            input.ReadMessage(timestamp_);
            break;
          }
          case 25: {
            Double = input.ReadDouble();
            break;
          }
          case 32: {
            Bool = input.ReadBool();
            break;
          }
          case 42: {
            String = input.ReadString();
            break;
          }
          case 50: {
            global::Ubii.DataStructure.Vector2 subBuilder = new global::Ubii.DataStructure.Vector2();
            if (typeCase_ == TypeOneofCase.Vector2) {
              subBuilder.MergeFrom(Vector2);
            }
            input.ReadMessage(subBuilder);
            Vector2 = subBuilder;
            break;
          }
          case 58: {
            global::Ubii.DataStructure.Vector3 subBuilder = new global::Ubii.DataStructure.Vector3();
            if (typeCase_ == TypeOneofCase.Vector3) {
              subBuilder.MergeFrom(Vector3);
            }
            input.ReadMessage(subBuilder);
            Vector3 = subBuilder;
            break;
          }
          case 66: {
            global::Ubii.DataStructure.Vector4 subBuilder = new global::Ubii.DataStructure.Vector4();
            if (typeCase_ == TypeOneofCase.Vector4) {
              subBuilder.MergeFrom(Vector4);
            }
            input.ReadMessage(subBuilder);
            Vector4 = subBuilder;
            break;
          }
          case 74: {
            global::Ubii.DataStructure.Quaternion subBuilder = new global::Ubii.DataStructure.Quaternion();
            if (typeCase_ == TypeOneofCase.Quaternion) {
              subBuilder.MergeFrom(Quaternion);
            }
            input.ReadMessage(subBuilder);
            Quaternion = subBuilder;
            break;
          }
          case 82: {
            global::Ubii.DataStructure.Matrix3x2 subBuilder = new global::Ubii.DataStructure.Matrix3x2();
            if (typeCase_ == TypeOneofCase.Matrix3X2) {
              subBuilder.MergeFrom(Matrix3X2);
            }
            input.ReadMessage(subBuilder);
            Matrix3X2 = subBuilder;
            break;
          }
          case 90: {
            global::Ubii.DataStructure.Matrix4x4 subBuilder = new global::Ubii.DataStructure.Matrix4x4();
            if (typeCase_ == TypeOneofCase.Matrix4X4) {
              subBuilder.MergeFrom(Matrix4X4);
            }
            input.ReadMessage(subBuilder);
            Matrix4X4 = subBuilder;
            break;
          }
          case 98: {
            global::Ubii.DataStructure.Color subBuilder = new global::Ubii.DataStructure.Color();
            if (typeCase_ == TypeOneofCase.Color) {
              subBuilder.MergeFrom(Color);
            }
            input.ReadMessage(subBuilder);
            Color = subBuilder;
            break;
          }
          case 106: {
            global::Ubii.DataStructure.TouchEvent subBuilder = new global::Ubii.DataStructure.TouchEvent();
            if (typeCase_ == TypeOneofCase.TouchEvent) {
              subBuilder.MergeFrom(TouchEvent);
            }
            input.ReadMessage(subBuilder);
            TouchEvent = subBuilder;
            break;
          }
          case 114: {
            global::Ubii.DataStructure.KeyEvent subBuilder = new global::Ubii.DataStructure.KeyEvent();
            if (typeCase_ == TypeOneofCase.KeyEvent) {
              subBuilder.MergeFrom(KeyEvent);
            }
            input.ReadMessage(subBuilder);
            KeyEvent = subBuilder;
            break;
          }
          case 122: {
            global::Ubii.DataStructure.MouseEvent subBuilder = new global::Ubii.DataStructure.MouseEvent();
            if (typeCase_ == TypeOneofCase.MouseEvent) {
              subBuilder.MergeFrom(MouseEvent);
            }
            input.ReadMessage(subBuilder);
            MouseEvent = subBuilder;
            break;
          }
          case 130: {
            global::Ubii.DataStructure.MyoEvent subBuilder = new global::Ubii.DataStructure.MyoEvent();
            if (typeCase_ == TypeOneofCase.MyoEvent) {
              subBuilder.MergeFrom(MyoEvent);
            }
            input.ReadMessage(subBuilder);
            MyoEvent = subBuilder;
            break;
          }
          case 138: {
            global::Ubii.DataStructure.Pose subBuilder = new global::Ubii.DataStructure.Pose();
            if (typeCase_ == TypeOneofCase.Pose) {
              subBuilder.MergeFrom(Pose);
            }
            input.ReadMessage(subBuilder);
            Pose = subBuilder;
            break;
          }
          case 146: {
            global::Ubii.DataStructure.Object3D subBuilder = new global::Ubii.DataStructure.Object3D();
            if (typeCase_ == TypeOneofCase.Object3D) {
              subBuilder.MergeFrom(Object3D);
            }
            input.ReadMessage(subBuilder);
            Object3D = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class TopicDataRecordList : pb::IMessage<TopicDataRecordList> {
    private static readonly pb::MessageParser<TopicDataRecordList> _parser = new pb::MessageParser<TopicDataRecordList>(() => new TopicDataRecordList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TopicDataRecordList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ubii.TopicData.TopicDataRecordReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TopicDataRecordList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TopicDataRecordList(TopicDataRecordList other) : this() {
      elements_ = other.elements_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TopicDataRecordList Clone() {
      return new TopicDataRecordList(this);
    }

    /// <summary>Field number for the "elements" field.</summary>
    public const int ElementsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Ubii.TopicData.TopicDataRecord> _repeated_elements_codec
        = pb::FieldCodec.ForMessage(10, global::Ubii.TopicData.TopicDataRecord.Parser);
    private readonly pbc::RepeatedField<global::Ubii.TopicData.TopicDataRecord> elements_ = new pbc::RepeatedField<global::Ubii.TopicData.TopicDataRecord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ubii.TopicData.TopicDataRecord> Elements {
      get { return elements_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TopicDataRecordList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TopicDataRecordList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!elements_.Equals(other.elements_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= elements_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      elements_.WriteTo(output, _repeated_elements_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += elements_.CalculateSize(_repeated_elements_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TopicDataRecordList other) {
      if (other == null) {
        return;
      }
      elements_.Add(other.elements_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            elements_.AddEntriesFrom(input, _repeated_elements_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
