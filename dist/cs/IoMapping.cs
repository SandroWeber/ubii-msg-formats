// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/sessions/ioMapping.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Ubii.Sessions {

  /// <summary>Holder for reflection information generated from proto/sessions/ioMapping.proto</summary>
  public static partial class IoMappingReflection {

    #region Descriptor
    /// <summary>File descriptor for proto/sessions/ioMapping.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static IoMappingReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5wcm90by9zZXNzaW9ucy9pb01hcHBpbmcucHJvdG8SDXViaWkuc2Vzc2lv",
            "bnMaIXByb3RvL2ludGVyYWN0aW9ucy9pb0Zvcm1hdC5wcm90byKvAQoJSU9N",
            "YXBwaW5nEhYKDmludGVyYWN0aW9uX2lkGAEgASgJEjgKEWludGVyYWN0aW9u",
            "X2lucHV0GAIgASgLMhsudWJpaS5pbnRlcmFjdGlvbnMuSU9Gb3JtYXRIABI5",
            "ChJpbnRlcmFjdGlvbl9vdXRwdXQYAyABKAsyGy51YmlpLmludGVyYWN0aW9u",
            "cy5JT0Zvcm1hdEgAEg0KBXRvcGljGAQgASgJQgYKBHR5cGViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Ubii.Interactions.IoFormatReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Ubii.Sessions.IOMapping), global::Ubii.Sessions.IOMapping.Parser, new[]{ "InteractionId", "InteractionInput", "InteractionOutput", "Topic" }, new[]{ "Type" }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class IOMapping : pb::IMessage<IOMapping> {
    private static readonly pb::MessageParser<IOMapping> _parser = new pb::MessageParser<IOMapping>(() => new IOMapping());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IOMapping> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ubii.Sessions.IoMappingReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IOMapping() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IOMapping(IOMapping other) : this() {
      interactionId_ = other.interactionId_;
      topic_ = other.topic_;
      switch (other.TypeCase) {
        case TypeOneofCase.InteractionInput:
          InteractionInput = other.InteractionInput.Clone();
          break;
        case TypeOneofCase.InteractionOutput:
          InteractionOutput = other.InteractionOutput.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IOMapping Clone() {
      return new IOMapping(this);
    }

    /// <summary>Field number for the "interaction_id" field.</summary>
    public const int InteractionIdFieldNumber = 1;
    private string interactionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InteractionId {
      get { return interactionId_; }
      set {
        interactionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "interaction_input" field.</summary>
    public const int InteractionInputFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ubii.Interactions.IOFormat InteractionInput {
      get { return typeCase_ == TypeOneofCase.InteractionInput ? (global::Ubii.Interactions.IOFormat) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.InteractionInput;
      }
    }

    /// <summary>Field number for the "interaction_output" field.</summary>
    public const int InteractionOutputFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ubii.Interactions.IOFormat InteractionOutput {
      get { return typeCase_ == TypeOneofCase.InteractionOutput ? (global::Ubii.Interactions.IOFormat) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.InteractionOutput;
      }
    }

    /// <summary>Field number for the "topic" field.</summary>
    public const int TopicFieldNumber = 4;
    private string topic_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Topic {
      get { return topic_; }
      set {
        topic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private object type_;
    /// <summary>Enum of possible cases for the "type" oneof.</summary>
    public enum TypeOneofCase {
      None = 0,
      InteractionInput = 2,
      InteractionOutput = 3,
    }
    private TypeOneofCase typeCase_ = TypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofCase TypeCase {
      get { return typeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      typeCase_ = TypeOneofCase.None;
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IOMapping);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IOMapping other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InteractionId != other.InteractionId) return false;
      if (!object.Equals(InteractionInput, other.InteractionInput)) return false;
      if (!object.Equals(InteractionOutput, other.InteractionOutput)) return false;
      if (Topic != other.Topic) return false;
      if (TypeCase != other.TypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InteractionId.Length != 0) hash ^= InteractionId.GetHashCode();
      if (typeCase_ == TypeOneofCase.InteractionInput) hash ^= InteractionInput.GetHashCode();
      if (typeCase_ == TypeOneofCase.InteractionOutput) hash ^= InteractionOutput.GetHashCode();
      if (Topic.Length != 0) hash ^= Topic.GetHashCode();
      hash ^= (int) typeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InteractionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(InteractionId);
      }
      if (typeCase_ == TypeOneofCase.InteractionInput) {
        output.WriteRawTag(18);
        output.WriteMessage(InteractionInput);
      }
      if (typeCase_ == TypeOneofCase.InteractionOutput) {
        output.WriteRawTag(26);
        output.WriteMessage(InteractionOutput);
      }
      if (Topic.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Topic);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InteractionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InteractionId);
      }
      if (typeCase_ == TypeOneofCase.InteractionInput) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InteractionInput);
      }
      if (typeCase_ == TypeOneofCase.InteractionOutput) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InteractionOutput);
      }
      if (Topic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Topic);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IOMapping other) {
      if (other == null) {
        return;
      }
      if (other.InteractionId.Length != 0) {
        InteractionId = other.InteractionId;
      }
      if (other.Topic.Length != 0) {
        Topic = other.Topic;
      }
      switch (other.TypeCase) {
        case TypeOneofCase.InteractionInput:
          if (InteractionInput == null) {
            InteractionInput = new global::Ubii.Interactions.IOFormat();
          }
          InteractionInput.MergeFrom(other.InteractionInput);
          break;
        case TypeOneofCase.InteractionOutput:
          if (InteractionOutput == null) {
            InteractionOutput = new global::Ubii.Interactions.IOFormat();
          }
          InteractionOutput.MergeFrom(other.InteractionOutput);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            InteractionId = input.ReadString();
            break;
          }
          case 18: {
            global::Ubii.Interactions.IOFormat subBuilder = new global::Ubii.Interactions.IOFormat();
            if (typeCase_ == TypeOneofCase.InteractionInput) {
              subBuilder.MergeFrom(InteractionInput);
            }
            input.ReadMessage(subBuilder);
            InteractionInput = subBuilder;
            break;
          }
          case 26: {
            global::Ubii.Interactions.IOFormat subBuilder = new global::Ubii.Interactions.IOFormat();
            if (typeCase_ == TypeOneofCase.InteractionOutput) {
              subBuilder.MergeFrom(InteractionOutput);
            }
            input.ReadMessage(subBuilder);
            InteractionOutput = subBuilder;
            break;
          }
          case 34: {
            Topic = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
