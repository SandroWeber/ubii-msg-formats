// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/services/serviceRequest.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Ubii.Services {

  /// <summary>Holder for reflection information generated from proto/services/serviceRequest.proto</summary>
  public static partial class ServiceRequestReflection {

    #region Descriptor
    /// <summary>File descriptor for proto/services/serviceRequest.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServiceRequestReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNwcm90by9zZXJ2aWNlcy9zZXJ2aWNlUmVxdWVzdC5wcm90bxINdWJpaS5z",
            "ZXJ2aWNlcxoacHJvdG8vY2xpZW50cy9jbGllbnQucHJvdG8aGnByb3RvL2Rl",
            "dmljZXMvZGV2aWNlLnByb3RvGhxwcm90by9zZXNzaW9ucy9zZXNzaW9uLnBy",
            "b3RvGiRwcm90by9pbnRlcmFjdGlvbnMvaW50ZXJhY3Rpb24ucHJvdG8aLnBy",
            "b3RvL3NlcnZpY2VzL3JlcXVlc3QvdG9waWNTdWJzY3JpcHRpb24ucHJvdG8i",
            "mwIKDlNlcnZpY2VSZXF1ZXN0Eg0KBXRvcGljGAEgASgJEiYKBmNsaWVudBgC",
            "IAEoCzIULnViaWkuY2xpZW50cy5DbGllbnRIABImCgZkZXZpY2UYAyABKAsy",
            "FC51YmlpLmRldmljZXMuRGV2aWNlSAASRgoSdG9waWNfc3Vic2NyaXB0aW9u",
            "GAQgASgLMigudWJpaS5zZXJ2aWNlcy5yZXF1ZXN0LlRvcGljU3Vic2NyaXB0",
            "aW9uSAASKQoHc2Vzc2lvbhgFIAEoCzIWLnViaWkuc2Vzc2lvbnMuU2Vzc2lv",
            "bkgAEi8KBWFiY2RlGAYgASgLMh4udWJpaS5pbnRlcmFjdGlvbnMuSW50ZXJh",
            "Y3Rpb25IAEIGCgR0eXBlYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Ubii.Clients.ClientReflection.Descriptor, global::Ubii.Devices.DeviceReflection.Descriptor, global::Ubii.Sessions.SessionReflection.Descriptor, global::Ubii.Interactions.InteractionReflection.Descriptor, global::Ubii.Services.Request.TopicSubscriptionReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Ubii.Services.ServiceRequest), global::Ubii.Services.ServiceRequest.Parser, new[]{ "Topic", "Client", "Device", "TopicSubscription", "Session", "Abcde" }, new[]{ "Type" }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ServiceRequest : pb::IMessage<ServiceRequest> {
    private static readonly pb::MessageParser<ServiceRequest> _parser = new pb::MessageParser<ServiceRequest>(() => new ServiceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServiceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ubii.Services.ServiceRequestReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceRequest(ServiceRequest other) : this() {
      topic_ = other.topic_;
      switch (other.TypeCase) {
        case TypeOneofCase.Client:
          Client = other.Client.Clone();
          break;
        case TypeOneofCase.Device:
          Device = other.Device.Clone();
          break;
        case TypeOneofCase.TopicSubscription:
          TopicSubscription = other.TopicSubscription.Clone();
          break;
        case TypeOneofCase.Session:
          Session = other.Session.Clone();
          break;
        case TypeOneofCase.Abcde:
          Abcde = other.Abcde.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceRequest Clone() {
      return new ServiceRequest(this);
    }

    /// <summary>Field number for the "topic" field.</summary>
    public const int TopicFieldNumber = 1;
    private string topic_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Topic {
      get { return topic_; }
      set {
        topic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client" field.</summary>
    public const int ClientFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ubii.Clients.Client Client {
      get { return typeCase_ == TypeOneofCase.Client ? (global::Ubii.Clients.Client) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Client;
      }
    }

    /// <summary>Field number for the "device" field.</summary>
    public const int DeviceFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ubii.Devices.Device Device {
      get { return typeCase_ == TypeOneofCase.Device ? (global::Ubii.Devices.Device) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Device;
      }
    }

    /// <summary>Field number for the "topic_subscription" field.</summary>
    public const int TopicSubscriptionFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ubii.Services.Request.TopicSubscription TopicSubscription {
      get { return typeCase_ == TypeOneofCase.TopicSubscription ? (global::Ubii.Services.Request.TopicSubscription) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.TopicSubscription;
      }
    }

    /// <summary>Field number for the "session" field.</summary>
    public const int SessionFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ubii.Sessions.Session Session {
      get { return typeCase_ == TypeOneofCase.Session ? (global::Ubii.Sessions.Session) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Session;
      }
    }

    /// <summary>Field number for the "abcde" field.</summary>
    public const int AbcdeFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ubii.Interactions.Interaction Abcde {
      get { return typeCase_ == TypeOneofCase.Abcde ? (global::Ubii.Interactions.Interaction) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Abcde;
      }
    }

    private object type_;
    /// <summary>Enum of possible cases for the "type" oneof.</summary>
    public enum TypeOneofCase {
      None = 0,
      Client = 2,
      Device = 3,
      TopicSubscription = 4,
      Session = 5,
      Abcde = 6,
    }
    private TypeOneofCase typeCase_ = TypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofCase TypeCase {
      get { return typeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      typeCase_ = TypeOneofCase.None;
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServiceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServiceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Topic != other.Topic) return false;
      if (!object.Equals(Client, other.Client)) return false;
      if (!object.Equals(Device, other.Device)) return false;
      if (!object.Equals(TopicSubscription, other.TopicSubscription)) return false;
      if (!object.Equals(Session, other.Session)) return false;
      if (!object.Equals(Abcde, other.Abcde)) return false;
      if (TypeCase != other.TypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Topic.Length != 0) hash ^= Topic.GetHashCode();
      if (typeCase_ == TypeOneofCase.Client) hash ^= Client.GetHashCode();
      if (typeCase_ == TypeOneofCase.Device) hash ^= Device.GetHashCode();
      if (typeCase_ == TypeOneofCase.TopicSubscription) hash ^= TopicSubscription.GetHashCode();
      if (typeCase_ == TypeOneofCase.Session) hash ^= Session.GetHashCode();
      if (typeCase_ == TypeOneofCase.Abcde) hash ^= Abcde.GetHashCode();
      hash ^= (int) typeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Topic.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Topic);
      }
      if (typeCase_ == TypeOneofCase.Client) {
        output.WriteRawTag(18);
        output.WriteMessage(Client);
      }
      if (typeCase_ == TypeOneofCase.Device) {
        output.WriteRawTag(26);
        output.WriteMessage(Device);
      }
      if (typeCase_ == TypeOneofCase.TopicSubscription) {
        output.WriteRawTag(34);
        output.WriteMessage(TopicSubscription);
      }
      if (typeCase_ == TypeOneofCase.Session) {
        output.WriteRawTag(42);
        output.WriteMessage(Session);
      }
      if (typeCase_ == TypeOneofCase.Abcde) {
        output.WriteRawTag(50);
        output.WriteMessage(Abcde);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Topic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Topic);
      }
      if (typeCase_ == TypeOneofCase.Client) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Client);
      }
      if (typeCase_ == TypeOneofCase.Device) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Device);
      }
      if (typeCase_ == TypeOneofCase.TopicSubscription) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TopicSubscription);
      }
      if (typeCase_ == TypeOneofCase.Session) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Session);
      }
      if (typeCase_ == TypeOneofCase.Abcde) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Abcde);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServiceRequest other) {
      if (other == null) {
        return;
      }
      if (other.Topic.Length != 0) {
        Topic = other.Topic;
      }
      switch (other.TypeCase) {
        case TypeOneofCase.Client:
          if (Client == null) {
            Client = new global::Ubii.Clients.Client();
          }
          Client.MergeFrom(other.Client);
          break;
        case TypeOneofCase.Device:
          if (Device == null) {
            Device = new global::Ubii.Devices.Device();
          }
          Device.MergeFrom(other.Device);
          break;
        case TypeOneofCase.TopicSubscription:
          if (TopicSubscription == null) {
            TopicSubscription = new global::Ubii.Services.Request.TopicSubscription();
          }
          TopicSubscription.MergeFrom(other.TopicSubscription);
          break;
        case TypeOneofCase.Session:
          if (Session == null) {
            Session = new global::Ubii.Sessions.Session();
          }
          Session.MergeFrom(other.Session);
          break;
        case TypeOneofCase.Abcde:
          if (Abcde == null) {
            Abcde = new global::Ubii.Interactions.Interaction();
          }
          Abcde.MergeFrom(other.Abcde);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Topic = input.ReadString();
            break;
          }
          case 18: {
            global::Ubii.Clients.Client subBuilder = new global::Ubii.Clients.Client();
            if (typeCase_ == TypeOneofCase.Client) {
              subBuilder.MergeFrom(Client);
            }
            input.ReadMessage(subBuilder);
            Client = subBuilder;
            break;
          }
          case 26: {
            global::Ubii.Devices.Device subBuilder = new global::Ubii.Devices.Device();
            if (typeCase_ == TypeOneofCase.Device) {
              subBuilder.MergeFrom(Device);
            }
            input.ReadMessage(subBuilder);
            Device = subBuilder;
            break;
          }
          case 34: {
            global::Ubii.Services.Request.TopicSubscription subBuilder = new global::Ubii.Services.Request.TopicSubscription();
            if (typeCase_ == TypeOneofCase.TopicSubscription) {
              subBuilder.MergeFrom(TopicSubscription);
            }
            input.ReadMessage(subBuilder);
            TopicSubscription = subBuilder;
            break;
          }
          case 42: {
            global::Ubii.Sessions.Session subBuilder = new global::Ubii.Sessions.Session();
            if (typeCase_ == TypeOneofCase.Session) {
              subBuilder.MergeFrom(Session);
            }
            input.ReadMessage(subBuilder);
            Session = subBuilder;
            break;
          }
          case 50: {
            global::Ubii.Interactions.Interaction subBuilder = new global::Ubii.Interactions.Interaction();
            if (typeCase_ == TypeOneofCase.Abcde) {
              subBuilder.MergeFrom(Abcde);
            }
            input.ReadMessage(subBuilder);
            Abcde = subBuilder;
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
