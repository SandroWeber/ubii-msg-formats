// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace ubii.interactions
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct Interaction : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static Interaction GetRootAsInteraction(ByteBuffer _bb) { return GetRootAsInteraction(_bb, new Interaction()); }
  public static Interaction GetRootAsInteraction(ByteBuffer _bb, Interaction obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Interaction __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Id { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetIdArray() { return __p.__vector_as_array<byte>(4); }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(6); }
  public string Authors(int j) { int o = __p.__offset(8); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int AuthorsLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
  public string Tags(int j) { int o = __p.__offset(10); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int TagsLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
  public string Description { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDescriptionBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetDescriptionBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetDescriptionArray() { return __p.__vector_as_array<byte>(12); }
  public ubii.interactions.InteractionStatus Status { get { int o = __p.__offset(14); return o != 0 ? (ubii.interactions.InteractionStatus)__p.bb.GetSbyte(o + __p.bb_pos) : ubii.interactions.InteractionStatus.CREATED; } }
  public ubii.interactions.IOFormat? InputFormats(int j) { int o = __p.__offset(16); return o != 0 ? (ubii.interactions.IOFormat?)(new ubii.interactions.IOFormat()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int InputFormatsLength { get { int o = __p.__offset(16); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ubii.interactions.IOFormat? OutputFormats(int j) { int o = __p.__offset(18); return o != 0 ? (ubii.interactions.IOFormat?)(new ubii.interactions.IOFormat()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int OutputFormatsLength { get { int o = __p.__offset(18); return o != 0 ? __p.__vector_len(o) : 0; } }
  public string OnCreated { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOnCreatedBytes() { return __p.__vector_as_span<byte>(20, 1); }
#else
  public ArraySegment<byte>? GetOnCreatedBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetOnCreatedArray() { return __p.__vector_as_array<byte>(20); }
  public string ProcessingCallback { get { int o = __p.__offset(22); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetProcessingCallbackBytes() { return __p.__vector_as_span<byte>(22, 1); }
#else
  public ArraySegment<byte>? GetProcessingCallbackBytes() { return __p.__vector_as_arraysegment(22); }
#endif
  public byte[] GetProcessingCallbackArray() { return __p.__vector_as_array<byte>(22); }
  public float ProcessFrequency { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }

  public static Offset<ubii.interactions.Interaction> CreateInteraction(FlatBufferBuilder builder,
      StringOffset idOffset = default(StringOffset),
      StringOffset nameOffset = default(StringOffset),
      VectorOffset authorsOffset = default(VectorOffset),
      VectorOffset tagsOffset = default(VectorOffset),
      StringOffset descriptionOffset = default(StringOffset),
      ubii.interactions.InteractionStatus status = ubii.interactions.InteractionStatus.CREATED,
      VectorOffset input_formatsOffset = default(VectorOffset),
      VectorOffset output_formatsOffset = default(VectorOffset),
      StringOffset on_createdOffset = default(StringOffset),
      StringOffset processing_callbackOffset = default(StringOffset),
      float process_frequency = 0.0f) {
    builder.StartTable(11);
    Interaction.AddProcessFrequency(builder, process_frequency);
    Interaction.AddProcessingCallback(builder, processing_callbackOffset);
    Interaction.AddOnCreated(builder, on_createdOffset);
    Interaction.AddOutputFormats(builder, output_formatsOffset);
    Interaction.AddInputFormats(builder, input_formatsOffset);
    Interaction.AddDescription(builder, descriptionOffset);
    Interaction.AddTags(builder, tagsOffset);
    Interaction.AddAuthors(builder, authorsOffset);
    Interaction.AddName(builder, nameOffset);
    Interaction.AddId(builder, idOffset);
    Interaction.AddStatus(builder, status);
    return Interaction.EndInteraction(builder);
  }

  public static void StartInteraction(FlatBufferBuilder builder) { builder.StartTable(11); }
  public static void AddId(FlatBufferBuilder builder, StringOffset idOffset) { builder.AddOffset(0, idOffset.Value, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(1, nameOffset.Value, 0); }
  public static void AddAuthors(FlatBufferBuilder builder, VectorOffset authorsOffset) { builder.AddOffset(2, authorsOffset.Value, 0); }
  public static VectorOffset CreateAuthorsVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateAuthorsVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartAuthorsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddTags(FlatBufferBuilder builder, VectorOffset tagsOffset) { builder.AddOffset(3, tagsOffset.Value, 0); }
  public static VectorOffset CreateTagsVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateTagsVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartTagsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddDescription(FlatBufferBuilder builder, StringOffset descriptionOffset) { builder.AddOffset(4, descriptionOffset.Value, 0); }
  public static void AddStatus(FlatBufferBuilder builder, ubii.interactions.InteractionStatus status) { builder.AddSbyte(5, (sbyte)status, 0); }
  public static void AddInputFormats(FlatBufferBuilder builder, VectorOffset inputFormatsOffset) { builder.AddOffset(6, inputFormatsOffset.Value, 0); }
  public static VectorOffset CreateInputFormatsVector(FlatBufferBuilder builder, Offset<ubii.interactions.IOFormat>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateInputFormatsVectorBlock(FlatBufferBuilder builder, Offset<ubii.interactions.IOFormat>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartInputFormatsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddOutputFormats(FlatBufferBuilder builder, VectorOffset outputFormatsOffset) { builder.AddOffset(7, outputFormatsOffset.Value, 0); }
  public static VectorOffset CreateOutputFormatsVector(FlatBufferBuilder builder, Offset<ubii.interactions.IOFormat>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateOutputFormatsVectorBlock(FlatBufferBuilder builder, Offset<ubii.interactions.IOFormat>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartOutputFormatsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddOnCreated(FlatBufferBuilder builder, StringOffset onCreatedOffset) { builder.AddOffset(8, onCreatedOffset.Value, 0); }
  public static void AddProcessingCallback(FlatBufferBuilder builder, StringOffset processingCallbackOffset) { builder.AddOffset(9, processingCallbackOffset.Value, 0); }
  public static void AddProcessFrequency(FlatBufferBuilder builder, float processFrequency) { builder.AddFloat(10, processFrequency, 0.0f); }
  public static Offset<ubii.interactions.Interaction> EndInteraction(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<ubii.interactions.Interaction>(o);
  }
  public static void FinishInteractionBuffer(FlatBufferBuilder builder, Offset<ubii.interactions.Interaction> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedInteractionBuffer(FlatBufferBuilder builder, Offset<ubii.interactions.Interaction> offset) { builder.FinishSizePrefixed(offset.Value); }
  public InteractionT UnPack() {
    var _o = new InteractionT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(InteractionT _o) {
    _o.Id = this.Id;
    _o.Name = this.Name;
    _o.Authors = new List<string>();
    for (var _j = 0; _j < this.AuthorsLength; ++_j) {_o.Authors.Add(this.Authors(_j));}
    _o.Tags = new List<string>();
    for (var _j = 0; _j < this.TagsLength; ++_j) {_o.Tags.Add(this.Tags(_j));}
    _o.Description = this.Description;
    _o.Status = this.Status;
    _o.InputFormats = new List<ubii.interactions.IOFormatT>();
    for (var _j = 0; _j < this.InputFormatsLength; ++_j) {_o.InputFormats.Add(this.InputFormats(_j).HasValue ? this.InputFormats(_j).Value.UnPack() : null);}
    _o.OutputFormats = new List<ubii.interactions.IOFormatT>();
    for (var _j = 0; _j < this.OutputFormatsLength; ++_j) {_o.OutputFormats.Add(this.OutputFormats(_j).HasValue ? this.OutputFormats(_j).Value.UnPack() : null);}
    _o.OnCreated = this.OnCreated;
    _o.ProcessingCallback = this.ProcessingCallback;
    _o.ProcessFrequency = this.ProcessFrequency;
  }
  public static Offset<ubii.interactions.Interaction> Pack(FlatBufferBuilder builder, InteractionT _o) {
    if (_o == null) return default(Offset<ubii.interactions.Interaction>);
    var _id = _o.Id == null ? default(StringOffset) : builder.CreateString(_o.Id);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    var _authors = default(VectorOffset);
    if (_o.Authors != null) {
      var __authors = new StringOffset[_o.Authors.Count];
      for (var _j = 0; _j < __authors.Length; ++_j) { __authors[_j] = builder.CreateString(_o.Authors[_j]); }
      _authors = CreateAuthorsVector(builder, __authors);
    }
    var _tags = default(VectorOffset);
    if (_o.Tags != null) {
      var __tags = new StringOffset[_o.Tags.Count];
      for (var _j = 0; _j < __tags.Length; ++_j) { __tags[_j] = builder.CreateString(_o.Tags[_j]); }
      _tags = CreateTagsVector(builder, __tags);
    }
    var _description = _o.Description == null ? default(StringOffset) : builder.CreateString(_o.Description);
    var _input_formats = default(VectorOffset);
    if (_o.InputFormats != null) {
      var __input_formats = new Offset<ubii.interactions.IOFormat>[_o.InputFormats.Count];
      for (var _j = 0; _j < __input_formats.Length; ++_j) { __input_formats[_j] = ubii.interactions.IOFormat.Pack(builder, _o.InputFormats[_j]); }
      _input_formats = CreateInputFormatsVector(builder, __input_formats);
    }
    var _output_formats = default(VectorOffset);
    if (_o.OutputFormats != null) {
      var __output_formats = new Offset<ubii.interactions.IOFormat>[_o.OutputFormats.Count];
      for (var _j = 0; _j < __output_formats.Length; ++_j) { __output_formats[_j] = ubii.interactions.IOFormat.Pack(builder, _o.OutputFormats[_j]); }
      _output_formats = CreateOutputFormatsVector(builder, __output_formats);
    }
    var _on_created = _o.OnCreated == null ? default(StringOffset) : builder.CreateString(_o.OnCreated);
    var _processing_callback = _o.ProcessingCallback == null ? default(StringOffset) : builder.CreateString(_o.ProcessingCallback);
    return CreateInteraction(
      builder,
      _id,
      _name,
      _authors,
      _tags,
      _description,
      _o.Status,
      _input_formats,
      _output_formats,
      _on_created,
      _processing_callback,
      _o.ProcessFrequency);
  }
};

public class InteractionT
{
  public string Id { get; set; }
  public string Name { get; set; }
  public List<string> Authors { get; set; }
  public List<string> Tags { get; set; }
  public string Description { get; set; }
  public ubii.interactions.InteractionStatus Status { get; set; }
  public List<ubii.interactions.IOFormatT> InputFormats { get; set; }
  public List<ubii.interactions.IOFormatT> OutputFormats { get; set; }
  public string OnCreated { get; set; }
  public string ProcessingCallback { get; set; }
  public float ProcessFrequency { get; set; }

  public InteractionT() {
    this.Id = null;
    this.Name = null;
    this.Authors = null;
    this.Tags = null;
    this.Description = null;
    this.Status = ubii.interactions.InteractionStatus.CREATED;
    this.InputFormats = null;
    this.OutputFormats = null;
    this.OnCreated = null;
    this.ProcessingCallback = null;
    this.ProcessFrequency = 0.0f;
  }
  public static InteractionT DeserializeFromBinary(byte[] fbBuffer) {
    return Interaction.GetRootAsInteraction(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    fbb.Finish(Interaction.Pack(fbb, this).Value);
    return fbb.DataBuffer.ToSizedArray();
  }
}


}
