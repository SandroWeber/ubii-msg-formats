// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace ubii.servers
{

using global::System;
using global::FlatBuffers;

public struct Server : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static Server GetRootAsServer(ByteBuffer _bb) { return GetRootAsServer(_bb, new Server()); }
  public static Server GetRootAsServer(ByteBuffer _bb, Server obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public Server __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Id { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetIdArray() { return __p.__vector_as_array<byte>(4); }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(6); }
  public string IpEthernet { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIpEthernetBytes() { return __p.__vector_as_span(8); }
#else
  public ArraySegment<byte>? GetIpEthernetBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetIpEthernetArray() { return __p.__vector_as_array<byte>(8); }
  public string IpWlan { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIpWlanBytes() { return __p.__vector_as_span(10); }
#else
  public ArraySegment<byte>? GetIpWlanBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetIpWlanArray() { return __p.__vector_as_array<byte>(10); }
  public string PortServiceZmq { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPortServiceZmqBytes() { return __p.__vector_as_span(12); }
#else
  public ArraySegment<byte>? GetPortServiceZmqBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetPortServiceZmqArray() { return __p.__vector_as_array<byte>(12); }
  public string PortServiceRest { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPortServiceRestBytes() { return __p.__vector_as_span(14); }
#else
  public ArraySegment<byte>? GetPortServiceRestBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetPortServiceRestArray() { return __p.__vector_as_array<byte>(14); }
  public string PortTopicDataZmq { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPortTopicDataZmqBytes() { return __p.__vector_as_span(16); }
#else
  public ArraySegment<byte>? GetPortTopicDataZmqBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetPortTopicDataZmqArray() { return __p.__vector_as_array<byte>(16); }
  public string PortTopicDataWs { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPortTopicDataWsBytes() { return __p.__vector_as_span(18); }
#else
  public ArraySegment<byte>? GetPortTopicDataWsBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetPortTopicDataWsArray() { return __p.__vector_as_array<byte>(18); }
  public string ConstantsJson { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetConstantsJsonBytes() { return __p.__vector_as_span(20); }
#else
  public ArraySegment<byte>? GetConstantsJsonBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetConstantsJsonArray() { return __p.__vector_as_array<byte>(20); }

  public static Offset<Server> CreateServer(FlatBufferBuilder builder,
      StringOffset idOffset = default(StringOffset),
      StringOffset nameOffset = default(StringOffset),
      StringOffset ip_ethernetOffset = default(StringOffset),
      StringOffset ip_wlanOffset = default(StringOffset),
      StringOffset port_service_zmqOffset = default(StringOffset),
      StringOffset port_service_restOffset = default(StringOffset),
      StringOffset port_topic_data_zmqOffset = default(StringOffset),
      StringOffset port_topic_data_wsOffset = default(StringOffset),
      StringOffset constants_jsonOffset = default(StringOffset)) {
    builder.StartObject(9);
    Server.AddConstantsJson(builder, constants_jsonOffset);
    Server.AddPortTopicDataWs(builder, port_topic_data_wsOffset);
    Server.AddPortTopicDataZmq(builder, port_topic_data_zmqOffset);
    Server.AddPortServiceRest(builder, port_service_restOffset);
    Server.AddPortServiceZmq(builder, port_service_zmqOffset);
    Server.AddIpWlan(builder, ip_wlanOffset);
    Server.AddIpEthernet(builder, ip_ethernetOffset);
    Server.AddName(builder, nameOffset);
    Server.AddId(builder, idOffset);
    return Server.EndServer(builder);
  }

  public static void StartServer(FlatBufferBuilder builder) { builder.StartObject(9); }
  public static void AddId(FlatBufferBuilder builder, StringOffset idOffset) { builder.AddOffset(0, idOffset.Value, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(1, nameOffset.Value, 0); }
  public static void AddIpEthernet(FlatBufferBuilder builder, StringOffset ipEthernetOffset) { builder.AddOffset(2, ipEthernetOffset.Value, 0); }
  public static void AddIpWlan(FlatBufferBuilder builder, StringOffset ipWlanOffset) { builder.AddOffset(3, ipWlanOffset.Value, 0); }
  public static void AddPortServiceZmq(FlatBufferBuilder builder, StringOffset portServiceZmqOffset) { builder.AddOffset(4, portServiceZmqOffset.Value, 0); }
  public static void AddPortServiceRest(FlatBufferBuilder builder, StringOffset portServiceRestOffset) { builder.AddOffset(5, portServiceRestOffset.Value, 0); }
  public static void AddPortTopicDataZmq(FlatBufferBuilder builder, StringOffset portTopicDataZmqOffset) { builder.AddOffset(6, portTopicDataZmqOffset.Value, 0); }
  public static void AddPortTopicDataWs(FlatBufferBuilder builder, StringOffset portTopicDataWsOffset) { builder.AddOffset(7, portTopicDataWsOffset.Value, 0); }
  public static void AddConstantsJson(FlatBufferBuilder builder, StringOffset constantsJsonOffset) { builder.AddOffset(8, constantsJsonOffset.Value, 0); }
  public static Offset<Server> EndServer(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<Server>(o);
  }
  public static void FinishServerBuffer(FlatBufferBuilder builder, Offset<Server> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedServerBuffer(FlatBufferBuilder builder, Offset<Server> offset) { builder.FinishSizePrefixed(offset.Value); }
};


}
