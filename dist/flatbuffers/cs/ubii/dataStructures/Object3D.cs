// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace ubii.dataStructures
{

using global::System;
using global::FlatBuffers;

public struct Object3D : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static Object3D GetRootAsObject3D(ByteBuffer _bb) { return GetRootAsObject3D(_bb, new Object3D()); }
  public static Object3D GetRootAsObject3D(ByteBuffer _bb, Object3D obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public Object3D __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Id { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetIdArray() { return __p.__vector_as_array<byte>(4); }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(6); }
  public Pose3D? Pose { get { int o = __p.__offset(8); return o != 0 ? (Pose3D?)(new Pose3D()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public Vector3? Size { get { int o = __p.__offset(10); return o != 0 ? (Vector3?)(new Vector3()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public string UserDataJson { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetUserDataJsonBytes() { return __p.__vector_as_span(12); }
#else
  public ArraySegment<byte>? GetUserDataJsonBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetUserDataJsonArray() { return __p.__vector_as_array<byte>(12); }

  public static void StartObject3D(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddId(FlatBufferBuilder builder, StringOffset idOffset) { builder.AddOffset(0, idOffset.Value, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(1, nameOffset.Value, 0); }
  public static void AddPose(FlatBufferBuilder builder, Offset<Pose3D> poseOffset) { builder.AddOffset(2, poseOffset.Value, 0); }
  public static void AddSize(FlatBufferBuilder builder, Offset<Vector3> sizeOffset) { builder.AddStruct(3, sizeOffset.Value, 0); }
  public static void AddUserDataJson(FlatBufferBuilder builder, StringOffset userDataJsonOffset) { builder.AddOffset(4, userDataJsonOffset.Value, 0); }
  public static Offset<Object3D> EndObject3D(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<Object3D>(o);
  }
  public static void FinishObject3DBuffer(FlatBufferBuilder builder, Offset<Object3D> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedObject3DBuffer(FlatBufferBuilder builder, Offset<Object3D> offset) { builder.FinishSizePrefixed(offset.Value); }
};


}
