// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace ubii.dataStructures
{

using global::System;
using global::FlatBuffers;

public struct Vector8 : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public Vector8 __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float V0 { get { return __p.bb.GetFloat(__p.bb_pos + 0); } }
  public float V1 { get { return __p.bb.GetFloat(__p.bb_pos + 4); } }
  public float V2 { get { return __p.bb.GetFloat(__p.bb_pos + 8); } }
  public float V3 { get { return __p.bb.GetFloat(__p.bb_pos + 12); } }
  public float V4 { get { return __p.bb.GetFloat(__p.bb_pos + 16); } }
  public float V5 { get { return __p.bb.GetFloat(__p.bb_pos + 20); } }
  public float V6 { get { return __p.bb.GetFloat(__p.bb_pos + 24); } }
  public float V7 { get { return __p.bb.GetFloat(__p.bb_pos + 28); } }

  public static Offset<Vector8> CreateVector8(FlatBufferBuilder builder, float V0, float V1, float V2, float V3, float V4, float V5, float V6, float V7) {
    builder.Prep(4, 32);
    builder.PutFloat(V7);
    builder.PutFloat(V6);
    builder.PutFloat(V5);
    builder.PutFloat(V4);
    builder.PutFloat(V3);
    builder.PutFloat(V2);
    builder.PutFloat(V1);
    builder.PutFloat(V0);
    return new Offset<Vector8>(builder.Offset);
  }
};


}
