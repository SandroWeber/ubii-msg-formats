// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace ubii.dataStructures
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct MyoEvent : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static MyoEvent GetRootAsMyoEvent(ByteBuffer _bb) { return GetRootAsMyoEvent(_bb, new MyoEvent()); }
  public static MyoEvent GetRootAsMyoEvent(ByteBuffer _bb, MyoEvent obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public MyoEvent __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ubii.dataStructures.Vector8? Emg { get { int o = __p.__offset(4); return o != 0 ? (ubii.dataStructures.Vector8?)(new ubii.dataStructures.Vector8()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public ubii.dataStructures.Quaternion? Orientation { get { int o = __p.__offset(6); return o != 0 ? (ubii.dataStructures.Quaternion?)(new ubii.dataStructures.Quaternion()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public ubii.dataStructures.Vector3? Gyroscope { get { int o = __p.__offset(8); return o != 0 ? (ubii.dataStructures.Vector3?)(new ubii.dataStructures.Vector3()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public ubii.dataStructures.Vector3? Accelerometer { get { int o = __p.__offset(10); return o != 0 ? (ubii.dataStructures.Vector3?)(new ubii.dataStructures.Vector3()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public ubii.dataStructures.HandGestureType Gesture { get { int o = __p.__offset(12); return o != 0 ? (ubii.dataStructures.HandGestureType)__p.bb.GetSbyte(o + __p.bb_pos) : ubii.dataStructures.HandGestureType.REST; } }

  public static void StartMyoEvent(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddEmg(FlatBufferBuilder builder, Offset<ubii.dataStructures.Vector8> emgOffset) { builder.AddStruct(0, emgOffset.Value, 0); }
  public static void AddOrientation(FlatBufferBuilder builder, Offset<ubii.dataStructures.Quaternion> orientationOffset) { builder.AddStruct(1, orientationOffset.Value, 0); }
  public static void AddGyroscope(FlatBufferBuilder builder, Offset<ubii.dataStructures.Vector3> gyroscopeOffset) { builder.AddStruct(2, gyroscopeOffset.Value, 0); }
  public static void AddAccelerometer(FlatBufferBuilder builder, Offset<ubii.dataStructures.Vector3> accelerometerOffset) { builder.AddStruct(3, accelerometerOffset.Value, 0); }
  public static void AddGesture(FlatBufferBuilder builder, ubii.dataStructures.HandGestureType gesture) { builder.AddSbyte(4, (sbyte)gesture, 0); }
  public static Offset<ubii.dataStructures.MyoEvent> EndMyoEvent(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<ubii.dataStructures.MyoEvent>(o);
  }
  public static void FinishMyoEventBuffer(FlatBufferBuilder builder, Offset<ubii.dataStructures.MyoEvent> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedMyoEventBuffer(FlatBufferBuilder builder, Offset<ubii.dataStructures.MyoEvent> offset) { builder.FinishSizePrefixed(offset.Value); }
  public MyoEventT UnPack() {
    var _o = new MyoEventT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(MyoEventT _o) {
    _o.Emg = this.Emg.HasValue ? this.Emg.Value.UnPack() : null;
    _o.Orientation = this.Orientation.HasValue ? this.Orientation.Value.UnPack() : null;
    _o.Gyroscope = this.Gyroscope.HasValue ? this.Gyroscope.Value.UnPack() : null;
    _o.Accelerometer = this.Accelerometer.HasValue ? this.Accelerometer.Value.UnPack() : null;
    _o.Gesture = this.Gesture;
  }
  public static Offset<ubii.dataStructures.MyoEvent> Pack(FlatBufferBuilder builder, MyoEventT _o) {
    if (_o == null) return default(Offset<ubii.dataStructures.MyoEvent>);
    StartMyoEvent(builder);
    AddEmg(builder, ubii.dataStructures.Vector8.Pack(builder, _o.Emg));
    AddOrientation(builder, ubii.dataStructures.Quaternion.Pack(builder, _o.Orientation));
    AddGyroscope(builder, ubii.dataStructures.Vector3.Pack(builder, _o.Gyroscope));
    AddAccelerometer(builder, ubii.dataStructures.Vector3.Pack(builder, _o.Accelerometer));
    AddGesture(builder, _o.Gesture);
    return EndMyoEvent(builder);
  }
};

public class MyoEventT
{
  public ubii.dataStructures.Vector8T Emg { get; set; }
  public ubii.dataStructures.QuaternionT Orientation { get; set; }
  public ubii.dataStructures.Vector3T Gyroscope { get; set; }
  public ubii.dataStructures.Vector3T Accelerometer { get; set; }
  public ubii.dataStructures.HandGestureType Gesture { get; set; }

  public MyoEventT() {
    this.Emg = new ubii.dataStructures.Vector8T();
    this.Orientation = new ubii.dataStructures.QuaternionT();
    this.Gyroscope = new ubii.dataStructures.Vector3T();
    this.Accelerometer = new ubii.dataStructures.Vector3T();
    this.Gesture = ubii.dataStructures.HandGestureType.REST;
  }
  public static MyoEventT DeserializeFromBinary(byte[] fbBuffer) {
    return MyoEvent.GetRootAsMyoEvent(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    fbb.Finish(MyoEvent.Pack(fbb, this).Value);
    return fbb.DataBuffer.ToSizedArray();
  }
}


}
