// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace ubii.dataStructures
{

using global::System;
using global::FlatBuffers;

public struct Pose2D : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static Pose2D GetRootAsPose2D(ByteBuffer _bb) { return GetRootAsPose2D(_bb, new Pose2D()); }
  public static Pose2D GetRootAsPose2D(ByteBuffer _bb, Pose2D obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public Pose2D __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Vector2? Position { get { int o = __p.__offset(4); return o != 0 ? (Vector2?)(new Vector2()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public Orientation2D? Orientation { get { int o = __p.__offset(6); return o != 0 ? (Orientation2D?)(new Orientation2D()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static void StartPose2D(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddPosition(FlatBufferBuilder builder, Offset<Vector2> positionOffset) { builder.AddStruct(0, positionOffset.Value, 0); }
  public static void AddOrientation(FlatBufferBuilder builder, Offset<Orientation2D> orientationOffset) { builder.AddOffset(1, orientationOffset.Value, 0); }
  public static Offset<Pose2D> EndPose2D(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<Pose2D>(o);
  }
  public static void FinishPose2DBuffer(FlatBufferBuilder builder, Offset<Pose2D> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedPose2DBuffer(FlatBufferBuilder builder, Offset<Pose2D> offset) { builder.FinishSizePrefixed(offset.Value); }
};


}
