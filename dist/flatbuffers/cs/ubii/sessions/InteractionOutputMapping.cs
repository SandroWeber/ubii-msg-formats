// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace ubii.sessions
{

using global::System;
using global::FlatBuffers;

public struct InteractionOutputMapping : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static InteractionOutputMapping GetRootAsInteractionOutputMapping(ByteBuffer _bb) { return GetRootAsInteractionOutputMapping(_bb, new InteractionOutputMapping()); }
  public static InteractionOutputMapping GetRootAsInteractionOutputMapping(ByteBuffer _bb, InteractionOutputMapping obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public InteractionOutputMapping __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Name { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(4); }
  public TopicDestination TopicDestinationType { get { int o = __p.__offset(6); return o != 0 ? (TopicDestination)__p.bb.Get(o + __p.bb_pos) : TopicDestination.NONE; } }
  public TTable? TopicDestination<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(8); return o != 0 ? (TTable?)__p.__union<TTable>(o) : null; }

  public static Offset<InteractionOutputMapping> CreateInteractionOutputMapping(FlatBufferBuilder builder,
      StringOffset nameOffset = default(StringOffset),
      TopicDestination topic_destination_type = TopicDestination.NONE,
      int topic_destinationOffset = 0) {
    builder.StartObject(3);
    InteractionOutputMapping.AddTopicDestination(builder, topic_destinationOffset);
    InteractionOutputMapping.AddName(builder, nameOffset);
    InteractionOutputMapping.AddTopicDestinationType(builder, topic_destination_type);
    return InteractionOutputMapping.EndInteractionOutputMapping(builder);
  }

  public static void StartInteractionOutputMapping(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddTopicDestinationType(FlatBufferBuilder builder, TopicDestination topicDestinationType) { builder.AddByte(1, (byte)topicDestinationType, 0); }
  public static void AddTopicDestination(FlatBufferBuilder builder, int topicDestinationOffset) { builder.AddOffset(2, topicDestinationOffset, 0); }
  public static Offset<InteractionOutputMapping> EndInteractionOutputMapping(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<InteractionOutputMapping>(o);
  }
  public static void FinishInteractionOutputMappingBuffer(FlatBufferBuilder builder, Offset<InteractionOutputMapping> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedInteractionOutputMappingBuffer(FlatBufferBuilder builder, Offset<InteractionOutputMapping> offset) { builder.FinishSizePrefixed(offset.Value); }
};


}
