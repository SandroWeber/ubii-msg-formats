// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace ubii.topicData
{

using global::System;
using global::FlatBuffers;

public struct TopicDataRecord : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static TopicDataRecord GetRootAsTopicDataRecord(ByteBuffer _bb) { return GetRootAsTopicDataRecord(_bb, new TopicDataRecord()); }
  public static TopicDataRecord GetRootAsTopicDataRecord(ByteBuffer _bb, TopicDataRecord obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public TopicDataRecord __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Topic { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTopicBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetTopicBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetTopicArray() { return __p.__vector_as_array<byte>(4); }
  public ubii.dataStructures.Timestamp? Timestamp { get { int o = __p.__offset(6); return o != 0 ? (ubii.dataStructures.Timestamp?)(new ubii.dataStructures.Timestamp()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public ubii.dataStructures.DataStructure? Data { get { int o = __p.__offset(8); return o != 0 ? (ubii.dataStructures.DataStructure?)(new ubii.dataStructures.DataStructure()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static void StartTopicDataRecord(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddTopic(FlatBufferBuilder builder, StringOffset topicOffset) { builder.AddOffset(0, topicOffset.Value, 0); }
  public static void AddTimestamp(FlatBufferBuilder builder, Offset<ubii.dataStructures.Timestamp> timestampOffset) { builder.AddStruct(1, timestampOffset.Value, 0); }
  public static void AddData(FlatBufferBuilder builder, Offset<ubii.dataStructures.DataStructure> dataOffset) { builder.AddOffset(2, dataOffset.Value, 0); }
  public static Offset<TopicDataRecord> EndTopicDataRecord(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<TopicDataRecord>(o);
  }
  public static void FinishTopicDataRecordBuffer(FlatBufferBuilder builder, Offset<TopicDataRecord> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedTopicDataRecordBuffer(FlatBufferBuilder builder, Offset<TopicDataRecord> offset) { builder.FinishSizePrefixed(offset.Value); }
};


}
