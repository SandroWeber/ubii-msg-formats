# automatically generated by the FlatBuffers compiler, do not modify

# namespace: dataStructures

import flatbuffers

class Orientation2D(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsOrientation2D(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Orientation2D()
        x.Init(buf, n + offset)
        return x

    # Orientation2D
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Orientation2D
    def Angle(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from .AngleOrientation import AngleOrientation
            obj = AngleOrientation()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # Orientation2D
    def Direction(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = o + self._tab.Pos
            from .Vector2 import Vector2
            obj = Vector2()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def Orientation2DStart(builder): builder.StartObject(2)
def Orientation2DAddAngle(builder, angle): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(angle), 0)
def Orientation2DAddDirection(builder, direction): builder.PrependStructSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(direction), 0)
def Orientation2DEnd(builder): return builder.EndObject()
