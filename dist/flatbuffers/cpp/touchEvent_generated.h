// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_TOUCHEVENT_UBII_DATASTRUCTURES_H_
#define FLATBUFFERS_GENERATED_TOUCHEVENT_UBII_DATASTRUCTURES_H_

#include "flatbuffers/flatbuffers.h"

#include "buttonEventType_generated.h"
#include "vector2_generated.h"

namespace ubii {
namespace dataStructures {

struct TouchEvent;

struct TouchEvent FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_TYPE = 4,
    VT_POSITION = 6
  };
  ButtonEventType type() const {
    return static_cast<ButtonEventType>(GetField<int8_t>(VT_TYPE, 0));
  }
  const Vector2 *position() const {
    return GetStruct<const Vector2 *>(VT_POSITION);
  }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyField<int8_t>(verifier, VT_TYPE) &&
           VerifyField<Vector2>(verifier, VT_POSITION) &&
           verifier.EndTable();
  }
};

struct TouchEventBuilder {
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_type(ButtonEventType type) {
    fbb_.AddElement<int8_t>(TouchEvent::VT_TYPE, static_cast<int8_t>(type), 0);
  }
  void add_position(const Vector2 *position) {
    fbb_.AddStruct(TouchEvent::VT_POSITION, position);
  }
  explicit TouchEventBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  TouchEventBuilder &operator=(const TouchEventBuilder &);
  flatbuffers::Offset<TouchEvent> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<TouchEvent>(end);
    return o;
  }
};

inline flatbuffers::Offset<TouchEvent> CreateTouchEvent(
    flatbuffers::FlatBufferBuilder &_fbb,
    ButtonEventType type = ButtonEventType_UP,
    const Vector2 *position = 0) {
  TouchEventBuilder builder_(_fbb);
  builder_.add_position(position);
  builder_.add_type(type);
  return builder_.Finish();
}

inline const ubii::dataStructures::TouchEvent *GetTouchEvent(const void *buf) {
  return flatbuffers::GetRoot<ubii::dataStructures::TouchEvent>(buf);
}

inline const ubii::dataStructures::TouchEvent *GetSizePrefixedTouchEvent(const void *buf) {
  return flatbuffers::GetSizePrefixedRoot<ubii::dataStructures::TouchEvent>(buf);
}

inline bool VerifyTouchEventBuffer(
    flatbuffers::Verifier &verifier) {
  return verifier.VerifyBuffer<ubii::dataStructures::TouchEvent>(nullptr);
}

inline bool VerifySizePrefixedTouchEventBuffer(
    flatbuffers::Verifier &verifier) {
  return verifier.VerifySizePrefixedBuffer<ubii::dataStructures::TouchEvent>(nullptr);
}

inline void FinishTouchEventBuffer(
    flatbuffers::FlatBufferBuilder &fbb,
    flatbuffers::Offset<ubii::dataStructures::TouchEvent> root) {
  fbb.Finish(root);
}

inline void FinishSizePrefixedTouchEventBuffer(
    flatbuffers::FlatBufferBuilder &fbb,
    flatbuffers::Offset<ubii::dataStructures::TouchEvent> root) {
  fbb.FinishSizePrefixed(root);
}

}  // namespace dataStructures
}  // namespace ubii

#endif  // FLATBUFFERS_GENERATED_TOUCHEVENT_UBII_DATASTRUCTURES_H_
