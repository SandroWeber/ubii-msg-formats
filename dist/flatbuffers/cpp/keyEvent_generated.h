// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_KEYEVENT_UBII_DATASTRUCTURES_H_
#define FLATBUFFERS_GENERATED_KEYEVENT_UBII_DATASTRUCTURES_H_

#include "flatbuffers/flatbuffers.h"

#include "buttonEventType_generated.h"

namespace ubii {
namespace dataStructures {

struct KeyEvent;

struct KeyEvent FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_TYPE = 4,
    VT_KEY = 6
  };
  ButtonEventType type() const {
    return static_cast<ButtonEventType>(GetField<int8_t>(VT_TYPE, 0));
  }
  const flatbuffers::String *key() const {
    return GetPointer<const flatbuffers::String *>(VT_KEY);
  }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyField<int8_t>(verifier, VT_TYPE) &&
           VerifyOffset(verifier, VT_KEY) &&
           verifier.VerifyString(key()) &&
           verifier.EndTable();
  }
};

struct KeyEventBuilder {
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_type(ButtonEventType type) {
    fbb_.AddElement<int8_t>(KeyEvent::VT_TYPE, static_cast<int8_t>(type), 0);
  }
  void add_key(flatbuffers::Offset<flatbuffers::String> key) {
    fbb_.AddOffset(KeyEvent::VT_KEY, key);
  }
  explicit KeyEventBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  KeyEventBuilder &operator=(const KeyEventBuilder &);
  flatbuffers::Offset<KeyEvent> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<KeyEvent>(end);
    return o;
  }
};

inline flatbuffers::Offset<KeyEvent> CreateKeyEvent(
    flatbuffers::FlatBufferBuilder &_fbb,
    ButtonEventType type = ButtonEventType_UP,
    flatbuffers::Offset<flatbuffers::String> key = 0) {
  KeyEventBuilder builder_(_fbb);
  builder_.add_key(key);
  builder_.add_type(type);
  return builder_.Finish();
}

inline flatbuffers::Offset<KeyEvent> CreateKeyEventDirect(
    flatbuffers::FlatBufferBuilder &_fbb,
    ButtonEventType type = ButtonEventType_UP,
    const char *key = nullptr) {
  auto key__ = key ? _fbb.CreateString(key) : 0;
  return ubii::dataStructures::CreateKeyEvent(
      _fbb,
      type,
      key__);
}

inline const ubii::dataStructures::KeyEvent *GetKeyEvent(const void *buf) {
  return flatbuffers::GetRoot<ubii::dataStructures::KeyEvent>(buf);
}

inline const ubii::dataStructures::KeyEvent *GetSizePrefixedKeyEvent(const void *buf) {
  return flatbuffers::GetSizePrefixedRoot<ubii::dataStructures::KeyEvent>(buf);
}

inline bool VerifyKeyEventBuffer(
    flatbuffers::Verifier &verifier) {
  return verifier.VerifyBuffer<ubii::dataStructures::KeyEvent>(nullptr);
}

inline bool VerifySizePrefixedKeyEventBuffer(
    flatbuffers::Verifier &verifier) {
  return verifier.VerifySizePrefixedBuffer<ubii::dataStructures::KeyEvent>(nullptr);
}

inline void FinishKeyEventBuffer(
    flatbuffers::FlatBufferBuilder &fbb,
    flatbuffers::Offset<ubii::dataStructures::KeyEvent> root) {
  fbb.Finish(root);
}

inline void FinishSizePrefixedKeyEventBuffer(
    flatbuffers::FlatBufferBuilder &fbb,
    flatbuffers::Offset<ubii::dataStructures::KeyEvent> root) {
  fbb.FinishSizePrefixed(root);
}

}  // namespace dataStructures
}  // namespace ubii

#endif  // FLATBUFFERS_GENERATED_KEYEVENT_UBII_DATASTRUCTURES_H_
