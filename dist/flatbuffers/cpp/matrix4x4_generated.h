// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_MATRIX4X4_UBII_DATASTRUCTURES_H_
#define FLATBUFFERS_GENERATED_MATRIX4X4_UBII_DATASTRUCTURES_H_

#include "flatbuffers/flatbuffers.h"

namespace ubii {
namespace dataStructures {

struct Matrix4x4;

FLATBUFFERS_MANUALLY_ALIGNED_STRUCT(4) Matrix4x4 FLATBUFFERS_FINAL_CLASS {
 private:
  float m00_;
  float m01_;
  float m02_;
  float m03_;
  float m10_;
  float m11_;
  float m12_;
  float m13_;
  float m20_;
  float m21_;
  float m22_;
  float m23_;
  float m30_;
  float m31_;
  float m32_;
  float m33_;

 public:
  Matrix4x4() {
    memset(static_cast<void *>(this), 0, sizeof(Matrix4x4));
  }
  Matrix4x4(float _m00, float _m01, float _m02, float _m03, float _m10, float _m11, float _m12, float _m13, float _m20, float _m21, float _m22, float _m23, float _m30, float _m31, float _m32, float _m33)
      : m00_(flatbuffers::EndianScalar(_m00)),
        m01_(flatbuffers::EndianScalar(_m01)),
        m02_(flatbuffers::EndianScalar(_m02)),
        m03_(flatbuffers::EndianScalar(_m03)),
        m10_(flatbuffers::EndianScalar(_m10)),
        m11_(flatbuffers::EndianScalar(_m11)),
        m12_(flatbuffers::EndianScalar(_m12)),
        m13_(flatbuffers::EndianScalar(_m13)),
        m20_(flatbuffers::EndianScalar(_m20)),
        m21_(flatbuffers::EndianScalar(_m21)),
        m22_(flatbuffers::EndianScalar(_m22)),
        m23_(flatbuffers::EndianScalar(_m23)),
        m30_(flatbuffers::EndianScalar(_m30)),
        m31_(flatbuffers::EndianScalar(_m31)),
        m32_(flatbuffers::EndianScalar(_m32)),
        m33_(flatbuffers::EndianScalar(_m33)) {
  }
  float m00() const {
    return flatbuffers::EndianScalar(m00_);
  }
  float m01() const {
    return flatbuffers::EndianScalar(m01_);
  }
  float m02() const {
    return flatbuffers::EndianScalar(m02_);
  }
  float m03() const {
    return flatbuffers::EndianScalar(m03_);
  }
  float m10() const {
    return flatbuffers::EndianScalar(m10_);
  }
  float m11() const {
    return flatbuffers::EndianScalar(m11_);
  }
  float m12() const {
    return flatbuffers::EndianScalar(m12_);
  }
  float m13() const {
    return flatbuffers::EndianScalar(m13_);
  }
  float m20() const {
    return flatbuffers::EndianScalar(m20_);
  }
  float m21() const {
    return flatbuffers::EndianScalar(m21_);
  }
  float m22() const {
    return flatbuffers::EndianScalar(m22_);
  }
  float m23() const {
    return flatbuffers::EndianScalar(m23_);
  }
  float m30() const {
    return flatbuffers::EndianScalar(m30_);
  }
  float m31() const {
    return flatbuffers::EndianScalar(m31_);
  }
  float m32() const {
    return flatbuffers::EndianScalar(m32_);
  }
  float m33() const {
    return flatbuffers::EndianScalar(m33_);
  }
};
FLATBUFFERS_STRUCT_END(Matrix4x4, 64);

}  // namespace dataStructures
}  // namespace ubii

#endif  // FLATBUFFERS_GENERATED_MATRIX4X4_UBII_DATASTRUCTURES_H_
