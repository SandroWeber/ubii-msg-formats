// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_HANDGESTURETYPE_UBII_DATASTRUCTURES_H_
#define FLATBUFFERS_GENERATED_HANDGESTURETYPE_UBII_DATASTRUCTURES_H_

#include "flatbuffers/flatbuffers.h"

namespace ubii {
namespace dataStructures {

enum HandGestureType {
  HandGestureType_REST = 0,
  HandGestureType_FINGERS_SPREAD = 1,
  HandGestureType_WAVE_IN = 2,
  HandGestureType_WAVE_OUT = 3,
  HandGestureType_FIST = 4,
  HandGestureType_DOUBLE_TAP = 5,
  HandGestureType_MIN = HandGestureType_REST,
  HandGestureType_MAX = HandGestureType_DOUBLE_TAP
};

inline const HandGestureType (&EnumValuesHandGestureType())[6] {
  static const HandGestureType values[] = {
    HandGestureType_REST,
    HandGestureType_FINGERS_SPREAD,
    HandGestureType_WAVE_IN,
    HandGestureType_WAVE_OUT,
    HandGestureType_FIST,
    HandGestureType_DOUBLE_TAP
  };
  return values;
}

inline const char * const *EnumNamesHandGestureType() {
  static const char * const names[7] = {
    "REST",
    "FINGERS_SPREAD",
    "WAVE_IN",
    "WAVE_OUT",
    "FIST",
    "DOUBLE_TAP",
    nullptr
  };
  return names;
}

inline const char *EnumNameHandGestureType(HandGestureType e) {
  if (flatbuffers::IsOutRange(e, HandGestureType_REST, HandGestureType_DOUBLE_TAP)) return "";
  const size_t index = static_cast<size_t>(e);
  return EnumNamesHandGestureType()[index];
}

}  // namespace dataStructures
}  // namespace ubii

#endif  // FLATBUFFERS_GENERATED_HANDGESTURETYPE_UBII_DATASTRUCTURES_H_
