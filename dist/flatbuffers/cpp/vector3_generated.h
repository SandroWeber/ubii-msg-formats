// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_VECTOR3_UBII_DATASTRUCTURES_H_
#define FLATBUFFERS_GENERATED_VECTOR3_UBII_DATASTRUCTURES_H_

#include "flatbuffers/flatbuffers.h"

namespace ubii {
namespace dataStructures {

struct Vector3;

FLATBUFFERS_MANUALLY_ALIGNED_STRUCT(4) Vector3 FLATBUFFERS_FINAL_CLASS {
 private:
  float x_;
  float y_;
  float z_;

 public:
  Vector3() {
    memset(static_cast<void *>(this), 0, sizeof(Vector3));
  }
  Vector3(float _x, float _y, float _z)
      : x_(flatbuffers::EndianScalar(_x)),
        y_(flatbuffers::EndianScalar(_y)),
        z_(flatbuffers::EndianScalar(_z)) {
  }
  float x() const {
    return flatbuffers::EndianScalar(x_);
  }
  float y() const {
    return flatbuffers::EndianScalar(y_);
  }
  float z() const {
    return flatbuffers::EndianScalar(z_);
  }
};
FLATBUFFERS_STRUCT_END(Vector3, 12);

}  // namespace dataStructures
}  // namespace ubii

#endif  // FLATBUFFERS_GENERATED_VECTOR3_UBII_DATASTRUCTURES_H_
