// automatically generated by the FlatBuffers compiler, do not modify

package ubii.services;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class ServiceData extends Table {
  public static ServiceData getRootAsServiceData(ByteBuffer _bb) { return getRootAsServiceData(_bb, new ServiceData()); }
  public static ServiceData getRootAsServiceData(ByteBuffer _bb, ServiceData obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public ServiceData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ubii.clients.Client client() { return client(new ubii.clients.Client()); }
  public ubii.clients.Client client(ubii.clients.Client obj) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public ubii.clients.Client clientList(int j) { return clientList(new ubii.clients.Client(), j); }
  public ubii.clients.Client clientList(ubii.clients.Client obj, int j) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int clientListLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }
  public ubii.devices.Device device() { return device(new ubii.devices.Device()); }
  public ubii.devices.Device device(ubii.devices.Device obj) { int o = __offset(8); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public ubii.devices.Device deviceList(int j) { return deviceList(new ubii.devices.Device(), j); }
  public ubii.devices.Device deviceList(ubii.devices.Device obj, int j) { int o = __offset(10); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int deviceListLength() { int o = __offset(10); return o != 0 ? __vector_len(o) : 0; }
  public ubii.devices.TopicMux topicMux() { return topicMux(new ubii.devices.TopicMux()); }
  public ubii.devices.TopicMux topicMux(ubii.devices.TopicMux obj) { int o = __offset(12); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public ubii.devices.TopicMux topicMuxList(int j) { return topicMuxList(new ubii.devices.TopicMux(), j); }
  public ubii.devices.TopicMux topicMuxList(ubii.devices.TopicMux obj, int j) { int o = __offset(14); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int topicMuxListLength() { int o = __offset(14); return o != 0 ? __vector_len(o) : 0; }
  public ubii.devices.TopicDemux topicDemux() { return topicDemux(new ubii.devices.TopicDemux()); }
  public ubii.devices.TopicDemux topicDemux(ubii.devices.TopicDemux obj) { int o = __offset(16); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public ubii.devices.TopicDemux topicDemuxList(int j) { return topicDemuxList(new ubii.devices.TopicDemux(), j); }
  public ubii.devices.TopicDemux topicDemuxList(ubii.devices.TopicDemux obj, int j) { int o = __offset(18); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int topicDemuxListLength() { int o = __offset(18); return o != 0 ? __vector_len(o) : 0; }
  public ubii.sessions.Session session() { return session(new ubii.sessions.Session()); }
  public ubii.sessions.Session session(ubii.sessions.Session obj) { int o = __offset(20); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public ubii.sessions.Session sessionList(int j) { return sessionList(new ubii.sessions.Session(), j); }
  public ubii.sessions.Session sessionList(ubii.sessions.Session obj, int j) { int o = __offset(22); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int sessionListLength() { int o = __offset(22); return o != 0 ? __vector_len(o) : 0; }
  public ubii.interactions.Interaction interaction() { return interaction(new ubii.interactions.Interaction()); }
  public ubii.interactions.Interaction interaction(ubii.interactions.Interaction obj) { int o = __offset(24); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public ubii.interactions.Interaction interactionList(int j) { return interactionList(new ubii.interactions.Interaction(), j); }
  public ubii.interactions.Interaction interactionList(ubii.interactions.Interaction obj, int j) { int o = __offset(26); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int interactionListLength() { int o = __offset(26); return o != 0 ? __vector_len(o) : 0; }
  public ubii.services.requests.TopicSubscription topicSubscription() { return topicSubscription(new ubii.services.requests.TopicSubscription()); }
  public ubii.services.requests.TopicSubscription topicSubscription(ubii.services.requests.TopicSubscription obj) { int o = __offset(28); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static int createServiceData(FlatBufferBuilder builder,
      int clientOffset,
      int client_listOffset,
      int deviceOffset,
      int device_listOffset,
      int topic_muxOffset,
      int topic_mux_listOffset,
      int topic_demuxOffset,
      int topic_demux_listOffset,
      int sessionOffset,
      int session_listOffset,
      int interactionOffset,
      int interaction_listOffset,
      int topic_subscriptionOffset) {
    builder.startObject(13);
    ServiceData.addTopicSubscription(builder, topic_subscriptionOffset);
    ServiceData.addInteractionList(builder, interaction_listOffset);
    ServiceData.addInteraction(builder, interactionOffset);
    ServiceData.addSessionList(builder, session_listOffset);
    ServiceData.addSession(builder, sessionOffset);
    ServiceData.addTopicDemuxList(builder, topic_demux_listOffset);
    ServiceData.addTopicDemux(builder, topic_demuxOffset);
    ServiceData.addTopicMuxList(builder, topic_mux_listOffset);
    ServiceData.addTopicMux(builder, topic_muxOffset);
    ServiceData.addDeviceList(builder, device_listOffset);
    ServiceData.addDevice(builder, deviceOffset);
    ServiceData.addClientList(builder, client_listOffset);
    ServiceData.addClient(builder, clientOffset);
    return ServiceData.endServiceData(builder);
  }

  public static void startServiceData(FlatBufferBuilder builder) { builder.startObject(13); }
  public static void addClient(FlatBufferBuilder builder, int clientOffset) { builder.addOffset(0, clientOffset, 0); }
  public static void addClientList(FlatBufferBuilder builder, int clientListOffset) { builder.addOffset(1, clientListOffset, 0); }
  public static int createClientListVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startClientListVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addDevice(FlatBufferBuilder builder, int deviceOffset) { builder.addOffset(2, deviceOffset, 0); }
  public static void addDeviceList(FlatBufferBuilder builder, int deviceListOffset) { builder.addOffset(3, deviceListOffset, 0); }
  public static int createDeviceListVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startDeviceListVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addTopicMux(FlatBufferBuilder builder, int topicMuxOffset) { builder.addOffset(4, topicMuxOffset, 0); }
  public static void addTopicMuxList(FlatBufferBuilder builder, int topicMuxListOffset) { builder.addOffset(5, topicMuxListOffset, 0); }
  public static int createTopicMuxListVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startTopicMuxListVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addTopicDemux(FlatBufferBuilder builder, int topicDemuxOffset) { builder.addOffset(6, topicDemuxOffset, 0); }
  public static void addTopicDemuxList(FlatBufferBuilder builder, int topicDemuxListOffset) { builder.addOffset(7, topicDemuxListOffset, 0); }
  public static int createTopicDemuxListVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startTopicDemuxListVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addSession(FlatBufferBuilder builder, int sessionOffset) { builder.addOffset(8, sessionOffset, 0); }
  public static void addSessionList(FlatBufferBuilder builder, int sessionListOffset) { builder.addOffset(9, sessionListOffset, 0); }
  public static int createSessionListVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startSessionListVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addInteraction(FlatBufferBuilder builder, int interactionOffset) { builder.addOffset(10, interactionOffset, 0); }
  public static void addInteractionList(FlatBufferBuilder builder, int interactionListOffset) { builder.addOffset(11, interactionListOffset, 0); }
  public static int createInteractionListVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startInteractionListVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addTopicSubscription(FlatBufferBuilder builder, int topicSubscriptionOffset) { builder.addOffset(12, topicSubscriptionOffset, 0); }
  public static int endServiceData(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
  public static void finishServiceDataBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedServiceDataBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }
}

