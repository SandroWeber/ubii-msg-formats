// automatically generated by the FlatBuffers compiler, do not modify

package ubii.dataStructures;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Object3D extends Table {
  public static Object3D getRootAsObject3D(ByteBuffer _bb) { return getRootAsObject3D(_bb, new Object3D()); }
  public static Object3D getRootAsObject3D(ByteBuffer _bb, Object3D obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public Object3D __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String id() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer idAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer idInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public String name() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer nameAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer nameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public Pose3D pose() { return pose(new Pose3D()); }
  public Pose3D pose(Pose3D obj) { int o = __offset(8); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public Vector3 size() { return size(new Vector3()); }
  public Vector3 size(Vector3 obj) { int o = __offset(10); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }
  public String userDataJson() { int o = __offset(12); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer userDataJsonAsByteBuffer() { return __vector_as_bytebuffer(12, 1); }
  public ByteBuffer userDataJsonInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 12, 1); }

  public static void startObject3D(FlatBufferBuilder builder) { builder.startObject(5); }
  public static void addId(FlatBufferBuilder builder, int idOffset) { builder.addOffset(0, idOffset, 0); }
  public static void addName(FlatBufferBuilder builder, int nameOffset) { builder.addOffset(1, nameOffset, 0); }
  public static void addPose(FlatBufferBuilder builder, int poseOffset) { builder.addOffset(2, poseOffset, 0); }
  public static void addSize(FlatBufferBuilder builder, int sizeOffset) { builder.addStruct(3, sizeOffset, 0); }
  public static void addUserDataJson(FlatBufferBuilder builder, int userDataJsonOffset) { builder.addOffset(4, userDataJsonOffset, 0); }
  public static int endObject3D(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
  public static void finishObject3DBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedObject3DBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }
}

