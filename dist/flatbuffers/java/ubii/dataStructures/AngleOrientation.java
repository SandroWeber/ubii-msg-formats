// automatically generated by the FlatBuffers compiler, do not modify

package ubii.dataStructures;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class AngleOrientation extends Table {
  public static AngleOrientation getRootAsAngleOrientation(ByteBuffer _bb) { return getRootAsAngleOrientation(_bb, new AngleOrientation()); }
  public static AngleOrientation getRootAsAngleOrientation(ByteBuffer _bb, AngleOrientation obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public AngleOrientation __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Vector2 zeroDirection() { return zeroDirection(new Vector2()); }
  public Vector2 zeroDirection(Vector2 obj) { int o = __offset(4); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }
  public float angle() { int o = __offset(6); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }

  public static void startAngleOrientation(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addZeroDirection(FlatBufferBuilder builder, int zeroDirectionOffset) { builder.addStruct(0, zeroDirectionOffset, 0); }
  public static void addAngle(FlatBufferBuilder builder, float angle) { builder.addFloat(1, angle, 0.0f); }
  public static int endAngleOrientation(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

