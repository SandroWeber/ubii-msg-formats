// automatically generated by the FlatBuffers compiler, do not modify

package ubii.interactions;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Interaction extends Table {
  public static Interaction getRootAsInteraction(ByteBuffer _bb) { return getRootAsInteraction(_bb, new Interaction()); }
  public static Interaction getRootAsInteraction(ByteBuffer _bb, Interaction obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public Interaction __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String id() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer idAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer idInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public String name() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer nameAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer nameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public String authors(int j) { int o = __offset(8); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int authorsLength() { int o = __offset(8); return o != 0 ? __vector_len(o) : 0; }
  public String tags(int j) { int o = __offset(10); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int tagsLength() { int o = __offset(10); return o != 0 ? __vector_len(o) : 0; }
  public String description() { int o = __offset(12); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer descriptionAsByteBuffer() { return __vector_as_bytebuffer(12, 1); }
  public ByteBuffer descriptionInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 12, 1); }
  public byte status() { int o = __offset(14); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public IOFormat inputFormats(int j) { return inputFormats(new IOFormat(), j); }
  public IOFormat inputFormats(IOFormat obj, int j) { int o = __offset(16); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int inputFormatsLength() { int o = __offset(16); return o != 0 ? __vector_len(o) : 0; }
  public IOFormat outputFormats(int j) { return outputFormats(new IOFormat(), j); }
  public IOFormat outputFormats(IOFormat obj, int j) { int o = __offset(18); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int outputFormatsLength() { int o = __offset(18); return o != 0 ? __vector_len(o) : 0; }
  public String onCreated() { int o = __offset(20); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer onCreatedAsByteBuffer() { return __vector_as_bytebuffer(20, 1); }
  public ByteBuffer onCreatedInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 20, 1); }
  public String processingCallback() { int o = __offset(22); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer processingCallbackAsByteBuffer() { return __vector_as_bytebuffer(22, 1); }
  public ByteBuffer processingCallbackInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 22, 1); }
  public float processFrequency() { int o = __offset(24); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }

  public static int createInteraction(FlatBufferBuilder builder,
      int idOffset,
      int nameOffset,
      int authorsOffset,
      int tagsOffset,
      int descriptionOffset,
      byte status,
      int input_formatsOffset,
      int output_formatsOffset,
      int on_createdOffset,
      int processing_callbackOffset,
      float process_frequency) {
    builder.startObject(11);
    Interaction.addProcessFrequency(builder, process_frequency);
    Interaction.addProcessingCallback(builder, processing_callbackOffset);
    Interaction.addOnCreated(builder, on_createdOffset);
    Interaction.addOutputFormats(builder, output_formatsOffset);
    Interaction.addInputFormats(builder, input_formatsOffset);
    Interaction.addDescription(builder, descriptionOffset);
    Interaction.addTags(builder, tagsOffset);
    Interaction.addAuthors(builder, authorsOffset);
    Interaction.addName(builder, nameOffset);
    Interaction.addId(builder, idOffset);
    Interaction.addStatus(builder, status);
    return Interaction.endInteraction(builder);
  }

  public static void startInteraction(FlatBufferBuilder builder) { builder.startObject(11); }
  public static void addId(FlatBufferBuilder builder, int idOffset) { builder.addOffset(0, idOffset, 0); }
  public static void addName(FlatBufferBuilder builder, int nameOffset) { builder.addOffset(1, nameOffset, 0); }
  public static void addAuthors(FlatBufferBuilder builder, int authorsOffset) { builder.addOffset(2, authorsOffset, 0); }
  public static int createAuthorsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startAuthorsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addTags(FlatBufferBuilder builder, int tagsOffset) { builder.addOffset(3, tagsOffset, 0); }
  public static int createTagsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startTagsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addDescription(FlatBufferBuilder builder, int descriptionOffset) { builder.addOffset(4, descriptionOffset, 0); }
  public static void addStatus(FlatBufferBuilder builder, byte status) { builder.addByte(5, status, 0); }
  public static void addInputFormats(FlatBufferBuilder builder, int inputFormatsOffset) { builder.addOffset(6, inputFormatsOffset, 0); }
  public static int createInputFormatsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startInputFormatsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addOutputFormats(FlatBufferBuilder builder, int outputFormatsOffset) { builder.addOffset(7, outputFormatsOffset, 0); }
  public static int createOutputFormatsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startOutputFormatsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addOnCreated(FlatBufferBuilder builder, int onCreatedOffset) { builder.addOffset(8, onCreatedOffset, 0); }
  public static void addProcessingCallback(FlatBufferBuilder builder, int processingCallbackOffset) { builder.addOffset(9, processingCallbackOffset, 0); }
  public static void addProcessFrequency(FlatBufferBuilder builder, float processFrequency) { builder.addFloat(10, processFrequency, 0.0f); }
  public static int endInteraction(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
  public static void finishInteractionBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedInteractionBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }
}

