// automatically generated by the FlatBuffers compiler, do not modify

package ubii.interactions;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class IOFormat extends Table {
  public static IOFormat getRootAsIOFormat(ByteBuffer _bb) { return getRootAsIOFormat(_bb, new IOFormat()); }
  public static IOFormat getRootAsIOFormat(ByteBuffer _bb, IOFormat obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public IOFormat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String internalName() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer internalNameAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer internalNameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public String messageFormat() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer messageFormatAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer messageFormatInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }

  public static int createIOFormat(FlatBufferBuilder builder,
      int internal_nameOffset,
      int message_formatOffset) {
    builder.startObject(2);
    IOFormat.addMessageFormat(builder, message_formatOffset);
    IOFormat.addInternalName(builder, internal_nameOffset);
    return IOFormat.endIOFormat(builder);
  }

  public static void startIOFormat(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addInternalName(FlatBufferBuilder builder, int internalNameOffset) { builder.addOffset(0, internalNameOffset, 0); }
  public static void addMessageFormat(FlatBufferBuilder builder, int messageFormatOffset) { builder.addOffset(1, messageFormatOffset, 0); }
  public static int endIOFormat(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
  public static void finishIOFormatBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedIOFormatBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }
}

