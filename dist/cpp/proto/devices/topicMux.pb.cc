// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/devices/topicMux.proto

#include "proto/devices/topicMux.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_proto_2fdevices_2ftopicMux_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fdevices_2ftopicMux_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TopicMux;
}  // namespace protobuf_proto_2fdevices_2ftopicMux_2eproto
namespace ubii {
namespace devices {
class TopicMuxDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TopicMux>
      _instance;
} _TopicMux_default_instance_;
class TopicMuxListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TopicMuxList>
      _instance;
} _TopicMuxList_default_instance_;
}  // namespace devices
}  // namespace ubii
namespace protobuf_proto_2fdevices_2ftopicMux_2eproto {
static void InitDefaultsTopicMux() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ubii::devices::_TopicMux_default_instance_;
    new (ptr) ::ubii::devices::TopicMux();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ubii::devices::TopicMux::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TopicMux =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTopicMux}, {}};

static void InitDefaultsTopicMuxList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ubii::devices::_TopicMuxList_default_instance_;
    new (ptr) ::ubii::devices::TopicMuxList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ubii::devices::TopicMuxList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TopicMuxList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTopicMuxList}, {
      &protobuf_proto_2fdevices_2ftopicMux_2eproto::scc_info_TopicMux.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TopicMux.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TopicMuxList.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ubii::devices::TopicMux, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ubii::devices::TopicMux, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ubii::devices::TopicMux, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ubii::devices::TopicMux, data_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ubii::devices::TopicMux, topic_selector_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ubii::devices::TopicMux, identity_match_pattern_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ubii::devices::TopicMuxList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ubii::devices::TopicMuxList, elements_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ubii::devices::TopicMux)},
  { 10, -1, sizeof(::ubii::devices::TopicMuxList)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ubii::devices::_TopicMux_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ubii::devices::_TopicMuxList_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "proto/devices/topicMux.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\034proto/devices/topicMux.proto\022\014ubii.dev"
      "ices\"o\n\010TopicMux\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001"
      "(\t\022\021\n\tdata_type\030\003 \001(\t\022\026\n\016topic_selector\030"
      "\004 \001(\t\022\036\n\026identity_match_pattern\030\005 \001(\t\"8\n"
      "\014TopicMuxList\022(\n\010elements\030\001 \003(\0132\026.ubii.d"
      "evices.TopicMuxb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 223);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proto/devices/topicMux.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_proto_2fdevices_2ftopicMux_2eproto
namespace ubii {
namespace devices {

// ===================================================================

void TopicMux::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TopicMux::kIdFieldNumber;
const int TopicMux::kNameFieldNumber;
const int TopicMux::kDataTypeFieldNumber;
const int TopicMux::kTopicSelectorFieldNumber;
const int TopicMux::kIdentityMatchPatternFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TopicMux::TopicMux()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fdevices_2ftopicMux_2eproto::scc_info_TopicMux.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ubii.devices.TopicMux)
}
TopicMux::TopicMux(const TopicMux& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  data_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data_type().size() > 0) {
    data_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_type_);
  }
  topic_selector_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.topic_selector().size() > 0) {
    topic_selector_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_selector_);
  }
  identity_match_pattern_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.identity_match_pattern().size() > 0) {
    identity_match_pattern_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.identity_match_pattern_);
  }
  // @@protoc_insertion_point(copy_constructor:ubii.devices.TopicMux)
}

void TopicMux::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  topic_selector_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identity_match_pattern_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TopicMux::~TopicMux() {
  // @@protoc_insertion_point(destructor:ubii.devices.TopicMux)
  SharedDtor();
}

void TopicMux::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  topic_selector_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identity_match_pattern_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TopicMux::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TopicMux::descriptor() {
  ::protobuf_proto_2fdevices_2ftopicMux_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fdevices_2ftopicMux_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TopicMux& TopicMux::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fdevices_2ftopicMux_2eproto::scc_info_TopicMux.base);
  return *internal_default_instance();
}


void TopicMux::Clear() {
// @@protoc_insertion_point(message_clear_start:ubii.devices.TopicMux)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  topic_selector_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identity_match_pattern_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool TopicMux::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ubii.devices.TopicMux)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.devices.TopicMux.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.devices.TopicMux.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string data_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data_type().data(), static_cast<int>(this->data_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.devices.TopicMux.data_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string topic_selector = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_topic_selector()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->topic_selector().data(), static_cast<int>(this->topic_selector().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.devices.TopicMux.topic_selector"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string identity_match_pattern = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_identity_match_pattern()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->identity_match_pattern().data(), static_cast<int>(this->identity_match_pattern().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.devices.TopicMux.identity_match_pattern"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ubii.devices.TopicMux)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ubii.devices.TopicMux)
  return false;
#undef DO_
}

void TopicMux::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ubii.devices.TopicMux)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.devices.TopicMux.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.devices.TopicMux.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string data_type = 3;
  if (this->data_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data_type().data(), static_cast<int>(this->data_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.devices.TopicMux.data_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->data_type(), output);
  }

  // string topic_selector = 4;
  if (this->topic_selector().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic_selector().data(), static_cast<int>(this->topic_selector().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.devices.TopicMux.topic_selector");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->topic_selector(), output);
  }

  // string identity_match_pattern = 5;
  if (this->identity_match_pattern().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->identity_match_pattern().data(), static_cast<int>(this->identity_match_pattern().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.devices.TopicMux.identity_match_pattern");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->identity_match_pattern(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ubii.devices.TopicMux)
}

::google::protobuf::uint8* TopicMux::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ubii.devices.TopicMux)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.devices.TopicMux.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.devices.TopicMux.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string data_type = 3;
  if (this->data_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data_type().data(), static_cast<int>(this->data_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.devices.TopicMux.data_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->data_type(), target);
  }

  // string topic_selector = 4;
  if (this->topic_selector().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic_selector().data(), static_cast<int>(this->topic_selector().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.devices.TopicMux.topic_selector");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->topic_selector(), target);
  }

  // string identity_match_pattern = 5;
  if (this->identity_match_pattern().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->identity_match_pattern().data(), static_cast<int>(this->identity_match_pattern().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.devices.TopicMux.identity_match_pattern");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->identity_match_pattern(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ubii.devices.TopicMux)
  return target;
}

size_t TopicMux::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ubii.devices.TopicMux)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string data_type = 3;
  if (this->data_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data_type());
  }

  // string topic_selector = 4;
  if (this->topic_selector().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->topic_selector());
  }

  // string identity_match_pattern = 5;
  if (this->identity_match_pattern().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->identity_match_pattern());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TopicMux::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ubii.devices.TopicMux)
  GOOGLE_DCHECK_NE(&from, this);
  const TopicMux* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TopicMux>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ubii.devices.TopicMux)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ubii.devices.TopicMux)
    MergeFrom(*source);
  }
}

void TopicMux::MergeFrom(const TopicMux& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ubii.devices.TopicMux)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.data_type().size() > 0) {

    data_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_type_);
  }
  if (from.topic_selector().size() > 0) {

    topic_selector_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_selector_);
  }
  if (from.identity_match_pattern().size() > 0) {

    identity_match_pattern_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.identity_match_pattern_);
  }
}

void TopicMux::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ubii.devices.TopicMux)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopicMux::CopyFrom(const TopicMux& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ubii.devices.TopicMux)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopicMux::IsInitialized() const {
  return true;
}

void TopicMux::Swap(TopicMux* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TopicMux::InternalSwap(TopicMux* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_type_.Swap(&other->data_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  topic_selector_.Swap(&other->topic_selector_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  identity_match_pattern_.Swap(&other->identity_match_pattern_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TopicMux::GetMetadata() const {
  protobuf_proto_2fdevices_2ftopicMux_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fdevices_2ftopicMux_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TopicMuxList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TopicMuxList::kElementsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TopicMuxList::TopicMuxList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fdevices_2ftopicMux_2eproto::scc_info_TopicMuxList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ubii.devices.TopicMuxList)
}
TopicMuxList::TopicMuxList(const TopicMuxList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      elements_(from.elements_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ubii.devices.TopicMuxList)
}

void TopicMuxList::SharedCtor() {
}

TopicMuxList::~TopicMuxList() {
  // @@protoc_insertion_point(destructor:ubii.devices.TopicMuxList)
  SharedDtor();
}

void TopicMuxList::SharedDtor() {
}

void TopicMuxList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TopicMuxList::descriptor() {
  ::protobuf_proto_2fdevices_2ftopicMux_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fdevices_2ftopicMux_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TopicMuxList& TopicMuxList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fdevices_2ftopicMux_2eproto::scc_info_TopicMuxList.base);
  return *internal_default_instance();
}


void TopicMuxList::Clear() {
// @@protoc_insertion_point(message_clear_start:ubii.devices.TopicMuxList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  elements_.Clear();
  _internal_metadata_.Clear();
}

bool TopicMuxList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ubii.devices.TopicMuxList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ubii.devices.TopicMux elements = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_elements()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ubii.devices.TopicMuxList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ubii.devices.TopicMuxList)
  return false;
#undef DO_
}

void TopicMuxList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ubii.devices.TopicMuxList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ubii.devices.TopicMux elements = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->elements_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->elements(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ubii.devices.TopicMuxList)
}

::google::protobuf::uint8* TopicMuxList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ubii.devices.TopicMuxList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ubii.devices.TopicMux elements = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->elements_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->elements(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ubii.devices.TopicMuxList)
  return target;
}

size_t TopicMuxList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ubii.devices.TopicMuxList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ubii.devices.TopicMux elements = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->elements_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->elements(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TopicMuxList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ubii.devices.TopicMuxList)
  GOOGLE_DCHECK_NE(&from, this);
  const TopicMuxList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TopicMuxList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ubii.devices.TopicMuxList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ubii.devices.TopicMuxList)
    MergeFrom(*source);
  }
}

void TopicMuxList::MergeFrom(const TopicMuxList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ubii.devices.TopicMuxList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  elements_.MergeFrom(from.elements_);
}

void TopicMuxList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ubii.devices.TopicMuxList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopicMuxList::CopyFrom(const TopicMuxList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ubii.devices.TopicMuxList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopicMuxList::IsInitialized() const {
  return true;
}

void TopicMuxList::Swap(TopicMuxList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TopicMuxList::InternalSwap(TopicMuxList* other) {
  using std::swap;
  CastToBase(&elements_)->InternalSwap(CastToBase(&other->elements_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TopicMuxList::GetMetadata() const {
  protobuf_proto_2fdevices_2ftopicMux_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fdevices_2ftopicMux_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace devices
}  // namespace ubii
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ubii::devices::TopicMux* Arena::CreateMaybeMessage< ::ubii::devices::TopicMux >(Arena* arena) {
  return Arena::CreateInternal< ::ubii::devices::TopicMux >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ubii::devices::TopicMuxList* Arena::CreateMaybeMessage< ::ubii::devices::TopicMuxList >(Arena* arena) {
  return Arena::CreateInternal< ::ubii::devices::TopicMuxList >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
