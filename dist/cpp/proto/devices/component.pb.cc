// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/devices/component.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "proto/devices/component.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ubii {
namespace devices {

namespace {

const ::google::protobuf::Descriptor* Component_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Component_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Component_IOType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ComponentList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ComponentList_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_proto_2fdevices_2fcomponent_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_proto_2fdevices_2fcomponent_2eproto() {
  protobuf_AddDesc_proto_2fdevices_2fcomponent_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "proto/devices/component.proto");
  GOOGLE_CHECK(file != NULL);
  Component_descriptor_ = file->message_type(0);
  static const int Component_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Component, topic_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Component, message_format_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Component, io_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Component, device_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Component, tags_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Component, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Component, id_),
  };
  Component_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Component_descriptor_,
      Component::default_instance_,
      Component_offsets_,
      -1,
      -1,
      -1,
      sizeof(Component),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Component, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Component, _is_default_instance_));
  Component_IOType_descriptor_ = Component_descriptor_->enum_type(0);
  ComponentList_descriptor_ = file->message_type(1);
  static const int ComponentList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentList, elements_),
  };
  ComponentList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ComponentList_descriptor_,
      ComponentList::default_instance_,
      ComponentList_offsets_,
      -1,
      -1,
      -1,
      sizeof(ComponentList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentList, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_proto_2fdevices_2fcomponent_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Component_descriptor_, &Component::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ComponentList_descriptor_, &ComponentList::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_proto_2fdevices_2fcomponent_2eproto() {
  delete Component::default_instance_;
  delete Component_reflection_;
  delete ComponentList::default_instance_;
  delete ComponentList_reflection_;
}

void protobuf_AddDesc_proto_2fdevices_2fcomponent_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_proto_2fdevices_2fcomponent_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\035proto/devices/component.proto\022\014ubii.de"
    "vices\"\316\001\n\tComponent\022\r\n\005topic\030\001 \001(\t\022\026\n\016me"
    "ssage_format\030\002 \001(\t\022/\n\007io_type\030\003 \001(\0162\036.ub"
    "ii.devices.Component.IOType\022\021\n\tdevice_id"
    "\030\004 \001(\t\022\014\n\004tags\030\005 \003(\t\022\023\n\013description\030\006 \001("
    "\t\022\n\n\002id\030\007 \001(\t\"\'\n\006IOType\022\r\n\tPUBLISHER\020\000\022\016"
    "\n\nSUBSCRIBER\020\001\":\n\rComponentList\022)\n\010eleme"
    "nts\030\001 \003(\0132\027.ubii.devices.Componentb\006prot"
    "o3", 322);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proto/devices/component.proto", &protobuf_RegisterTypes);
  Component::default_instance_ = new Component();
  ComponentList::default_instance_ = new ComponentList();
  Component::default_instance_->InitAsDefaultInstance();
  ComponentList::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_proto_2fdevices_2fcomponent_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_proto_2fdevices_2fcomponent_2eproto {
  StaticDescriptorInitializer_proto_2fdevices_2fcomponent_2eproto() {
    protobuf_AddDesc_proto_2fdevices_2fcomponent_2eproto();
  }
} static_descriptor_initializer_proto_2fdevices_2fcomponent_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* Component_IOType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Component_IOType_descriptor_;
}
bool Component_IOType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Component_IOType Component::PUBLISHER;
const Component_IOType Component::SUBSCRIBER;
const Component_IOType Component::IOType_MIN;
const Component_IOType Component::IOType_MAX;
const int Component::IOType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Component::kTopicFieldNumber;
const int Component::kMessageFormatFieldNumber;
const int Component::kIoTypeFieldNumber;
const int Component::kDeviceIdFieldNumber;
const int Component::kTagsFieldNumber;
const int Component::kDescriptionFieldNumber;
const int Component::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Component::Component()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ubii.devices.Component)
}

void Component::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Component::Component(const Component& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ubii.devices.Component)
}

void Component::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_format_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  io_type_ = 0;
  device_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Component::~Component() {
  // @@protoc_insertion_point(destructor:ubii.devices.Component)
  SharedDtor();
}

void Component::SharedDtor() {
  topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_format_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Component::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Component::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Component_descriptor_;
}

const Component& Component::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fdevices_2fcomponent_2eproto();
  return *default_instance_;
}

Component* Component::default_instance_ = NULL;

Component* Component::New(::google::protobuf::Arena* arena) const {
  Component* n = new Component;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Component::Clear() {
// @@protoc_insertion_point(message_clear_start:ubii.devices.Component)
  topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_format_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  io_type_ = 0;
  device_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tags_.Clear();
}

bool Component::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ubii.devices.Component)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string topic = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_topic()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->topic().data(), this->topic().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.devices.Component.topic"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_message_format;
        break;
      }

      // optional string message_format = 2;
      case 2: {
        if (tag == 18) {
         parse_message_format:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message_format()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message_format().data(), this->message_format().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.devices.Component.message_format"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_io_type;
        break;
      }

      // optional .ubii.devices.Component.IOType io_type = 3;
      case 3: {
        if (tag == 24) {
         parse_io_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_io_type(static_cast< ::ubii::devices::Component_IOType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_device_id;
        break;
      }

      // optional string device_id = 4;
      case 4: {
        if (tag == 34) {
         parse_device_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_id().data(), this->device_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.devices.Component.device_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_tags;
        break;
      }

      // repeated string tags = 5;
      case 5: {
        if (tag == 42) {
         parse_tags:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_tags()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tags(this->tags_size() - 1).data(),
            this->tags(this->tags_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.devices.Component.tags"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_tags;
        if (input->ExpectTag(50)) goto parse_description;
        break;
      }

      // optional string description = 6;
      case 6: {
        if (tag == 50) {
         parse_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.devices.Component.description"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_id;
        break;
      }

      // optional string id = 7;
      case 7: {
        if (tag == 58) {
         parse_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.devices.Component.id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ubii.devices.Component)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ubii.devices.Component)
  return false;
#undef DO_
}

void Component::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ubii.devices.Component)
  // optional string topic = 1;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), this->topic().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.devices.Component.topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->topic(), output);
  }

  // optional string message_format = 2;
  if (this->message_format().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message_format().data(), this->message_format().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.devices.Component.message_format");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message_format(), output);
  }

  // optional .ubii.devices.Component.IOType io_type = 3;
  if (this->io_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->io_type(), output);
  }

  // optional string device_id = 4;
  if (this->device_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_id().data(), this->device_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.devices.Component.device_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->device_id(), output);
  }

  // repeated string tags = 5;
  for (int i = 0; i < this->tags_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tags(i).data(), this->tags(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.devices.Component.tags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->tags(i), output);
  }

  // optional string description = 6;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.devices.Component.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->description(), output);
  }

  // optional string id = 7;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.devices.Component.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ubii.devices.Component)
}

::google::protobuf::uint8* Component::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ubii.devices.Component)
  // optional string topic = 1;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), this->topic().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.devices.Component.topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->topic(), target);
  }

  // optional string message_format = 2;
  if (this->message_format().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message_format().data(), this->message_format().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.devices.Component.message_format");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message_format(), target);
  }

  // optional .ubii.devices.Component.IOType io_type = 3;
  if (this->io_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->io_type(), target);
  }

  // optional string device_id = 4;
  if (this->device_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_id().data(), this->device_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.devices.Component.device_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->device_id(), target);
  }

  // repeated string tags = 5;
  for (int i = 0; i < this->tags_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tags(i).data(), this->tags(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.devices.Component.tags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->tags(i), target);
  }

  // optional string description = 6;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.devices.Component.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->description(), target);
  }

  // optional string id = 7;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.devices.Component.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ubii.devices.Component)
  return target;
}

int Component::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ubii.devices.Component)
  int total_size = 0;

  // optional string topic = 1;
  if (this->topic().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->topic());
  }

  // optional string message_format = 2;
  if (this->message_format().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message_format());
  }

  // optional .ubii.devices.Component.IOType io_type = 3;
  if (this->io_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->io_type());
  }

  // optional string device_id = 4;
  if (this->device_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_id());
  }

  // optional string description = 6;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // optional string id = 7;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // repeated string tags = 5;
  total_size += 1 * this->tags_size();
  for (int i = 0; i < this->tags_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->tags(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Component::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ubii.devices.Component)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Component* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Component>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ubii.devices.Component)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ubii.devices.Component)
    MergeFrom(*source);
  }
}

void Component::MergeFrom(const Component& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ubii.devices.Component)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  tags_.MergeFrom(from.tags_);
  if (from.topic().size() > 0) {

    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  if (from.message_format().size() > 0) {

    message_format_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_format_);
  }
  if (from.io_type() != 0) {
    set_io_type(from.io_type());
  }
  if (from.device_id().size() > 0) {

    device_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_id_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void Component::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ubii.devices.Component)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Component::CopyFrom(const Component& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ubii.devices.Component)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Component::IsInitialized() const {

  return true;
}

void Component::Swap(Component* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Component::InternalSwap(Component* other) {
  topic_.Swap(&other->topic_);
  message_format_.Swap(&other->message_format_);
  std::swap(io_type_, other->io_type_);
  device_id_.Swap(&other->device_id_);
  tags_.UnsafeArenaSwap(&other->tags_);
  description_.Swap(&other->description_);
  id_.Swap(&other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Component::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Component_descriptor_;
  metadata.reflection = Component_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Component

// optional string topic = 1;
void Component::clear_topic() {
  topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Component::topic() const {
  // @@protoc_insertion_point(field_get:ubii.devices.Component.topic)
  return topic_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Component::set_topic(const ::std::string& value) {
  
  topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ubii.devices.Component.topic)
}
 void Component::set_topic(const char* value) {
  
  topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ubii.devices.Component.topic)
}
 void Component::set_topic(const char* value, size_t size) {
  
  topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ubii.devices.Component.topic)
}
 ::std::string* Component::mutable_topic() {
  
  // @@protoc_insertion_point(field_mutable:ubii.devices.Component.topic)
  return topic_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Component::release_topic() {
  // @@protoc_insertion_point(field_release:ubii.devices.Component.topic)
  
  return topic_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Component::set_allocated_topic(::std::string* topic) {
  if (topic != NULL) {
    
  } else {
    
  }
  topic_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), topic);
  // @@protoc_insertion_point(field_set_allocated:ubii.devices.Component.topic)
}

// optional string message_format = 2;
void Component::clear_message_format() {
  message_format_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Component::message_format() const {
  // @@protoc_insertion_point(field_get:ubii.devices.Component.message_format)
  return message_format_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Component::set_message_format(const ::std::string& value) {
  
  message_format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ubii.devices.Component.message_format)
}
 void Component::set_message_format(const char* value) {
  
  message_format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ubii.devices.Component.message_format)
}
 void Component::set_message_format(const char* value, size_t size) {
  
  message_format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ubii.devices.Component.message_format)
}
 ::std::string* Component::mutable_message_format() {
  
  // @@protoc_insertion_point(field_mutable:ubii.devices.Component.message_format)
  return message_format_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Component::release_message_format() {
  // @@protoc_insertion_point(field_release:ubii.devices.Component.message_format)
  
  return message_format_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Component::set_allocated_message_format(::std::string* message_format) {
  if (message_format != NULL) {
    
  } else {
    
  }
  message_format_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message_format);
  // @@protoc_insertion_point(field_set_allocated:ubii.devices.Component.message_format)
}

// optional .ubii.devices.Component.IOType io_type = 3;
void Component::clear_io_type() {
  io_type_ = 0;
}
 ::ubii::devices::Component_IOType Component::io_type() const {
  // @@protoc_insertion_point(field_get:ubii.devices.Component.io_type)
  return static_cast< ::ubii::devices::Component_IOType >(io_type_);
}
 void Component::set_io_type(::ubii::devices::Component_IOType value) {
  
  io_type_ = value;
  // @@protoc_insertion_point(field_set:ubii.devices.Component.io_type)
}

// optional string device_id = 4;
void Component::clear_device_id() {
  device_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Component::device_id() const {
  // @@protoc_insertion_point(field_get:ubii.devices.Component.device_id)
  return device_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Component::set_device_id(const ::std::string& value) {
  
  device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ubii.devices.Component.device_id)
}
 void Component::set_device_id(const char* value) {
  
  device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ubii.devices.Component.device_id)
}
 void Component::set_device_id(const char* value, size_t size) {
  
  device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ubii.devices.Component.device_id)
}
 ::std::string* Component::mutable_device_id() {
  
  // @@protoc_insertion_point(field_mutable:ubii.devices.Component.device_id)
  return device_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Component::release_device_id() {
  // @@protoc_insertion_point(field_release:ubii.devices.Component.device_id)
  
  return device_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Component::set_allocated_device_id(::std::string* device_id) {
  if (device_id != NULL) {
    
  } else {
    
  }
  device_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_id);
  // @@protoc_insertion_point(field_set_allocated:ubii.devices.Component.device_id)
}

// repeated string tags = 5;
int Component::tags_size() const {
  return tags_.size();
}
void Component::clear_tags() {
  tags_.Clear();
}
 const ::std::string& Component::tags(int index) const {
  // @@protoc_insertion_point(field_get:ubii.devices.Component.tags)
  return tags_.Get(index);
}
 ::std::string* Component::mutable_tags(int index) {
  // @@protoc_insertion_point(field_mutable:ubii.devices.Component.tags)
  return tags_.Mutable(index);
}
 void Component::set_tags(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ubii.devices.Component.tags)
  tags_.Mutable(index)->assign(value);
}
 void Component::set_tags(int index, const char* value) {
  tags_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ubii.devices.Component.tags)
}
 void Component::set_tags(int index, const char* value, size_t size) {
  tags_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ubii.devices.Component.tags)
}
 ::std::string* Component::add_tags() {
  // @@protoc_insertion_point(field_add_mutable:ubii.devices.Component.tags)
  return tags_.Add();
}
 void Component::add_tags(const ::std::string& value) {
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ubii.devices.Component.tags)
}
 void Component::add_tags(const char* value) {
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ubii.devices.Component.tags)
}
 void Component::add_tags(const char* value, size_t size) {
  tags_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ubii.devices.Component.tags)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
Component::tags() const {
  // @@protoc_insertion_point(field_list:ubii.devices.Component.tags)
  return tags_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
Component::mutable_tags() {
  // @@protoc_insertion_point(field_mutable_list:ubii.devices.Component.tags)
  return &tags_;
}

// optional string description = 6;
void Component::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Component::description() const {
  // @@protoc_insertion_point(field_get:ubii.devices.Component.description)
  return description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Component::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ubii.devices.Component.description)
}
 void Component::set_description(const char* value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ubii.devices.Component.description)
}
 void Component::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ubii.devices.Component.description)
}
 ::std::string* Component::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:ubii.devices.Component.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Component::release_description() {
  // @@protoc_insertion_point(field_release:ubii.devices.Component.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Component::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:ubii.devices.Component.description)
}

// optional string id = 7;
void Component::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Component::id() const {
  // @@protoc_insertion_point(field_get:ubii.devices.Component.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Component::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ubii.devices.Component.id)
}
 void Component::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ubii.devices.Component.id)
}
 void Component::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ubii.devices.Component.id)
}
 ::std::string* Component::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ubii.devices.Component.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Component::release_id() {
  // @@protoc_insertion_point(field_release:ubii.devices.Component.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Component::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ubii.devices.Component.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ComponentList::kElementsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ComponentList::ComponentList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ubii.devices.ComponentList)
}

void ComponentList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ComponentList::ComponentList(const ComponentList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ubii.devices.ComponentList)
}

void ComponentList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

ComponentList::~ComponentList() {
  // @@protoc_insertion_point(destructor:ubii.devices.ComponentList)
  SharedDtor();
}

void ComponentList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ComponentList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ComponentList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ComponentList_descriptor_;
}

const ComponentList& ComponentList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fdevices_2fcomponent_2eproto();
  return *default_instance_;
}

ComponentList* ComponentList::default_instance_ = NULL;

ComponentList* ComponentList::New(::google::protobuf::Arena* arena) const {
  ComponentList* n = new ComponentList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ComponentList::Clear() {
// @@protoc_insertion_point(message_clear_start:ubii.devices.ComponentList)
  elements_.Clear();
}

bool ComponentList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ubii.devices.ComponentList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ubii.devices.Component elements = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_elements:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_elements()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_elements;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ubii.devices.ComponentList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ubii.devices.ComponentList)
  return false;
#undef DO_
}

void ComponentList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ubii.devices.ComponentList)
  // repeated .ubii.devices.Component elements = 1;
  for (unsigned int i = 0, n = this->elements_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->elements(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ubii.devices.ComponentList)
}

::google::protobuf::uint8* ComponentList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ubii.devices.ComponentList)
  // repeated .ubii.devices.Component elements = 1;
  for (unsigned int i = 0, n = this->elements_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->elements(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ubii.devices.ComponentList)
  return target;
}

int ComponentList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ubii.devices.ComponentList)
  int total_size = 0;

  // repeated .ubii.devices.Component elements = 1;
  total_size += 1 * this->elements_size();
  for (int i = 0; i < this->elements_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->elements(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ComponentList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ubii.devices.ComponentList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ComponentList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ComponentList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ubii.devices.ComponentList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ubii.devices.ComponentList)
    MergeFrom(*source);
  }
}

void ComponentList::MergeFrom(const ComponentList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ubii.devices.ComponentList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  elements_.MergeFrom(from.elements_);
}

void ComponentList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ubii.devices.ComponentList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComponentList::CopyFrom(const ComponentList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ubii.devices.ComponentList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComponentList::IsInitialized() const {

  return true;
}

void ComponentList::Swap(ComponentList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ComponentList::InternalSwap(ComponentList* other) {
  elements_.UnsafeArenaSwap(&other->elements_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ComponentList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ComponentList_descriptor_;
  metadata.reflection = ComponentList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ComponentList

// repeated .ubii.devices.Component elements = 1;
int ComponentList::elements_size() const {
  return elements_.size();
}
void ComponentList::clear_elements() {
  elements_.Clear();
}
const ::ubii::devices::Component& ComponentList::elements(int index) const {
  // @@protoc_insertion_point(field_get:ubii.devices.ComponentList.elements)
  return elements_.Get(index);
}
::ubii::devices::Component* ComponentList::mutable_elements(int index) {
  // @@protoc_insertion_point(field_mutable:ubii.devices.ComponentList.elements)
  return elements_.Mutable(index);
}
::ubii::devices::Component* ComponentList::add_elements() {
  // @@protoc_insertion_point(field_add:ubii.devices.ComponentList.elements)
  return elements_.Add();
}
::google::protobuf::RepeatedPtrField< ::ubii::devices::Component >*
ComponentList::mutable_elements() {
  // @@protoc_insertion_point(field_mutable_list:ubii.devices.ComponentList.elements)
  return &elements_;
}
const ::google::protobuf::RepeatedPtrField< ::ubii::devices::Component >&
ComponentList::elements() const {
  // @@protoc_insertion_point(field_list:ubii.devices.ComponentList.elements)
  return elements_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace devices
}  // namespace ubii

// @@protoc_insertion_point(global_scope)
