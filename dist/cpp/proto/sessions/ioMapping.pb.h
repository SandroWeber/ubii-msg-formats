// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/sessions/ioMapping.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_proto_2fsessions_2fioMapping_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_proto_2fsessions_2fioMapping_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3010000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3010000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "proto/sessions/interactionInputMapping.pb.h"
#include "proto/sessions/interactionOutputMapping.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_proto_2fsessions_2fioMapping_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2fsessions_2fioMapping_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_2fsessions_2fioMapping_2eproto;
namespace ubii {
namespace sessions {
class IOMapping;
class IOMappingDefaultTypeInternal;
extern IOMappingDefaultTypeInternal _IOMapping_default_instance_;
class IOMappingList;
class IOMappingListDefaultTypeInternal;
extern IOMappingListDefaultTypeInternal _IOMappingList_default_instance_;
}  // namespace sessions
}  // namespace ubii
PROTOBUF_NAMESPACE_OPEN
template<> ::ubii::sessions::IOMapping* Arena::CreateMaybeMessage<::ubii::sessions::IOMapping>(Arena*);
template<> ::ubii::sessions::IOMappingList* Arena::CreateMaybeMessage<::ubii::sessions::IOMappingList>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace ubii {
namespace sessions {

// ===================================================================

class IOMapping :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ubii.sessions.IOMapping) */ {
 public:
  IOMapping();
  virtual ~IOMapping();

  IOMapping(const IOMapping& from);
  IOMapping(IOMapping&& from) noexcept
    : IOMapping() {
    *this = ::std::move(from);
  }

  inline IOMapping& operator=(const IOMapping& from) {
    CopyFrom(from);
    return *this;
  }
  inline IOMapping& operator=(IOMapping&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IOMapping& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IOMapping* internal_default_instance() {
    return reinterpret_cast<const IOMapping*>(
               &_IOMapping_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(IOMapping& a, IOMapping& b) {
    a.Swap(&b);
  }
  inline void Swap(IOMapping* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IOMapping* New() const final {
    return CreateMaybeMessage<IOMapping>(nullptr);
  }

  IOMapping* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IOMapping>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IOMapping& from);
  void MergeFrom(const IOMapping& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IOMapping* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ubii.sessions.IOMapping";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_2fsessions_2fioMapping_2eproto);
    return ::descriptor_table_proto_2fsessions_2fioMapping_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInputMappingsFieldNumber = 2,
    kOutputMappingsFieldNumber = 3,
    kInteractionIdFieldNumber = 1,
  };
  // repeated .ubii.sessions.InteractionInputMapping input_mappings = 2;
  int input_mappings_size() const;
  private:
  int _internal_input_mappings_size() const;
  public:
  void clear_input_mappings();
  ::ubii::sessions::InteractionInputMapping* mutable_input_mappings(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ubii::sessions::InteractionInputMapping >*
      mutable_input_mappings();
  private:
  const ::ubii::sessions::InteractionInputMapping& _internal_input_mappings(int index) const;
  ::ubii::sessions::InteractionInputMapping* _internal_add_input_mappings();
  public:
  const ::ubii::sessions::InteractionInputMapping& input_mappings(int index) const;
  ::ubii::sessions::InteractionInputMapping* add_input_mappings();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ubii::sessions::InteractionInputMapping >&
      input_mappings() const;

  // repeated .ubii.sessions.InteractionOutputMapping output_mappings = 3;
  int output_mappings_size() const;
  private:
  int _internal_output_mappings_size() const;
  public:
  void clear_output_mappings();
  ::ubii::sessions::InteractionOutputMapping* mutable_output_mappings(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ubii::sessions::InteractionOutputMapping >*
      mutable_output_mappings();
  private:
  const ::ubii::sessions::InteractionOutputMapping& _internal_output_mappings(int index) const;
  ::ubii::sessions::InteractionOutputMapping* _internal_add_output_mappings();
  public:
  const ::ubii::sessions::InteractionOutputMapping& output_mappings(int index) const;
  ::ubii::sessions::InteractionOutputMapping* add_output_mappings();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ubii::sessions::InteractionOutputMapping >&
      output_mappings() const;

  // string interaction_id = 1;
  void clear_interaction_id();
  const std::string& interaction_id() const;
  void set_interaction_id(const std::string& value);
  void set_interaction_id(std::string&& value);
  void set_interaction_id(const char* value);
  void set_interaction_id(const char* value, size_t size);
  std::string* mutable_interaction_id();
  std::string* release_interaction_id();
  void set_allocated_interaction_id(std::string* interaction_id);
  private:
  const std::string& _internal_interaction_id() const;
  void _internal_set_interaction_id(const std::string& value);
  std::string* _internal_mutable_interaction_id();
  public:

  // @@protoc_insertion_point(class_scope:ubii.sessions.IOMapping)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ubii::sessions::InteractionInputMapping > input_mappings_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ubii::sessions::InteractionOutputMapping > output_mappings_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr interaction_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_2fsessions_2fioMapping_2eproto;
};
// -------------------------------------------------------------------

class IOMappingList :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ubii.sessions.IOMappingList) */ {
 public:
  IOMappingList();
  virtual ~IOMappingList();

  IOMappingList(const IOMappingList& from);
  IOMappingList(IOMappingList&& from) noexcept
    : IOMappingList() {
    *this = ::std::move(from);
  }

  inline IOMappingList& operator=(const IOMappingList& from) {
    CopyFrom(from);
    return *this;
  }
  inline IOMappingList& operator=(IOMappingList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IOMappingList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IOMappingList* internal_default_instance() {
    return reinterpret_cast<const IOMappingList*>(
               &_IOMappingList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(IOMappingList& a, IOMappingList& b) {
    a.Swap(&b);
  }
  inline void Swap(IOMappingList* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IOMappingList* New() const final {
    return CreateMaybeMessage<IOMappingList>(nullptr);
  }

  IOMappingList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IOMappingList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IOMappingList& from);
  void MergeFrom(const IOMappingList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IOMappingList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ubii.sessions.IOMappingList";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_2fsessions_2fioMapping_2eproto);
    return ::descriptor_table_proto_2fsessions_2fioMapping_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kElementsFieldNumber = 1,
  };
  // repeated .ubii.sessions.IOMapping elements = 1;
  int elements_size() const;
  private:
  int _internal_elements_size() const;
  public:
  void clear_elements();
  ::ubii::sessions::IOMapping* mutable_elements(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ubii::sessions::IOMapping >*
      mutable_elements();
  private:
  const ::ubii::sessions::IOMapping& _internal_elements(int index) const;
  ::ubii::sessions::IOMapping* _internal_add_elements();
  public:
  const ::ubii::sessions::IOMapping& elements(int index) const;
  ::ubii::sessions::IOMapping* add_elements();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ubii::sessions::IOMapping >&
      elements() const;

  // @@protoc_insertion_point(class_scope:ubii.sessions.IOMappingList)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ubii::sessions::IOMapping > elements_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_2fsessions_2fioMapping_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// IOMapping

// string interaction_id = 1;
inline void IOMapping::clear_interaction_id() {
  interaction_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& IOMapping::interaction_id() const {
  // @@protoc_insertion_point(field_get:ubii.sessions.IOMapping.interaction_id)
  return _internal_interaction_id();
}
inline void IOMapping::set_interaction_id(const std::string& value) {
  _internal_set_interaction_id(value);
  // @@protoc_insertion_point(field_set:ubii.sessions.IOMapping.interaction_id)
}
inline std::string* IOMapping::mutable_interaction_id() {
  // @@protoc_insertion_point(field_mutable:ubii.sessions.IOMapping.interaction_id)
  return _internal_mutable_interaction_id();
}
inline const std::string& IOMapping::_internal_interaction_id() const {
  return interaction_id_.GetNoArena();
}
inline void IOMapping::_internal_set_interaction_id(const std::string& value) {
  
  interaction_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void IOMapping::set_interaction_id(std::string&& value) {
  
  interaction_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ubii.sessions.IOMapping.interaction_id)
}
inline void IOMapping::set_interaction_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  interaction_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ubii.sessions.IOMapping.interaction_id)
}
inline void IOMapping::set_interaction_id(const char* value, size_t size) {
  
  interaction_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ubii.sessions.IOMapping.interaction_id)
}
inline std::string* IOMapping::_internal_mutable_interaction_id() {
  
  return interaction_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* IOMapping::release_interaction_id() {
  // @@protoc_insertion_point(field_release:ubii.sessions.IOMapping.interaction_id)
  
  return interaction_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void IOMapping::set_allocated_interaction_id(std::string* interaction_id) {
  if (interaction_id != nullptr) {
    
  } else {
    
  }
  interaction_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), interaction_id);
  // @@protoc_insertion_point(field_set_allocated:ubii.sessions.IOMapping.interaction_id)
}

// repeated .ubii.sessions.InteractionInputMapping input_mappings = 2;
inline int IOMapping::_internal_input_mappings_size() const {
  return input_mappings_.size();
}
inline int IOMapping::input_mappings_size() const {
  return _internal_input_mappings_size();
}
inline ::ubii::sessions::InteractionInputMapping* IOMapping::mutable_input_mappings(int index) {
  // @@protoc_insertion_point(field_mutable:ubii.sessions.IOMapping.input_mappings)
  return input_mappings_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ubii::sessions::InteractionInputMapping >*
IOMapping::mutable_input_mappings() {
  // @@protoc_insertion_point(field_mutable_list:ubii.sessions.IOMapping.input_mappings)
  return &input_mappings_;
}
inline const ::ubii::sessions::InteractionInputMapping& IOMapping::_internal_input_mappings(int index) const {
  return input_mappings_.Get(index);
}
inline const ::ubii::sessions::InteractionInputMapping& IOMapping::input_mappings(int index) const {
  // @@protoc_insertion_point(field_get:ubii.sessions.IOMapping.input_mappings)
  return _internal_input_mappings(index);
}
inline ::ubii::sessions::InteractionInputMapping* IOMapping::_internal_add_input_mappings() {
  return input_mappings_.Add();
}
inline ::ubii::sessions::InteractionInputMapping* IOMapping::add_input_mappings() {
  // @@protoc_insertion_point(field_add:ubii.sessions.IOMapping.input_mappings)
  return _internal_add_input_mappings();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ubii::sessions::InteractionInputMapping >&
IOMapping::input_mappings() const {
  // @@protoc_insertion_point(field_list:ubii.sessions.IOMapping.input_mappings)
  return input_mappings_;
}

// repeated .ubii.sessions.InteractionOutputMapping output_mappings = 3;
inline int IOMapping::_internal_output_mappings_size() const {
  return output_mappings_.size();
}
inline int IOMapping::output_mappings_size() const {
  return _internal_output_mappings_size();
}
inline ::ubii::sessions::InteractionOutputMapping* IOMapping::mutable_output_mappings(int index) {
  // @@protoc_insertion_point(field_mutable:ubii.sessions.IOMapping.output_mappings)
  return output_mappings_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ubii::sessions::InteractionOutputMapping >*
IOMapping::mutable_output_mappings() {
  // @@protoc_insertion_point(field_mutable_list:ubii.sessions.IOMapping.output_mappings)
  return &output_mappings_;
}
inline const ::ubii::sessions::InteractionOutputMapping& IOMapping::_internal_output_mappings(int index) const {
  return output_mappings_.Get(index);
}
inline const ::ubii::sessions::InteractionOutputMapping& IOMapping::output_mappings(int index) const {
  // @@protoc_insertion_point(field_get:ubii.sessions.IOMapping.output_mappings)
  return _internal_output_mappings(index);
}
inline ::ubii::sessions::InteractionOutputMapping* IOMapping::_internal_add_output_mappings() {
  return output_mappings_.Add();
}
inline ::ubii::sessions::InteractionOutputMapping* IOMapping::add_output_mappings() {
  // @@protoc_insertion_point(field_add:ubii.sessions.IOMapping.output_mappings)
  return _internal_add_output_mappings();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ubii::sessions::InteractionOutputMapping >&
IOMapping::output_mappings() const {
  // @@protoc_insertion_point(field_list:ubii.sessions.IOMapping.output_mappings)
  return output_mappings_;
}

// -------------------------------------------------------------------

// IOMappingList

// repeated .ubii.sessions.IOMapping elements = 1;
inline int IOMappingList::_internal_elements_size() const {
  return elements_.size();
}
inline int IOMappingList::elements_size() const {
  return _internal_elements_size();
}
inline void IOMappingList::clear_elements() {
  elements_.Clear();
}
inline ::ubii::sessions::IOMapping* IOMappingList::mutable_elements(int index) {
  // @@protoc_insertion_point(field_mutable:ubii.sessions.IOMappingList.elements)
  return elements_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ubii::sessions::IOMapping >*
IOMappingList::mutable_elements() {
  // @@protoc_insertion_point(field_mutable_list:ubii.sessions.IOMappingList.elements)
  return &elements_;
}
inline const ::ubii::sessions::IOMapping& IOMappingList::_internal_elements(int index) const {
  return elements_.Get(index);
}
inline const ::ubii::sessions::IOMapping& IOMappingList::elements(int index) const {
  // @@protoc_insertion_point(field_get:ubii.sessions.IOMappingList.elements)
  return _internal_elements(index);
}
inline ::ubii::sessions::IOMapping* IOMappingList::_internal_add_elements() {
  return elements_.Add();
}
inline ::ubii::sessions::IOMapping* IOMappingList::add_elements() {
  // @@protoc_insertion_point(field_add:ubii.sessions.IOMappingList.elements)
  return _internal_add_elements();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ubii::sessions::IOMapping >&
IOMappingList::elements() const {
  // @@protoc_insertion_point(field_list:ubii.sessions.IOMappingList.elements)
  return elements_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace sessions
}  // namespace ubii

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_proto_2fsessions_2fioMapping_2eproto
