// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/sessions/session.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "proto/sessions/session.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ubii {
namespace sessions {

namespace {

const ::google::protobuf::Descriptor* Session_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Session_reflection_ = NULL;
const ::google::protobuf::Descriptor* SessionList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SessionList_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* SessionStatus_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_proto_2fsessions_2fsession_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_proto_2fsessions_2fsession_2eproto() {
  protobuf_AddDesc_proto_2fsessions_2fsession_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "proto/sessions/session.proto");
  GOOGLE_CHECK(file != NULL);
  Session_descriptor_ = file->message_type(0);
  static const int Session_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Session, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Session, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Session, processing_modules_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Session, io_mappings_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Session, tags_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Session, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Session, authors_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Session, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Session, editable_),
  };
  Session_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Session_descriptor_,
      Session::default_instance_,
      Session_offsets_,
      -1,
      -1,
      -1,
      sizeof(Session),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Session, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Session, _is_default_instance_));
  SessionList_descriptor_ = file->message_type(1);
  static const int SessionList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SessionList, elements_),
  };
  SessionList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SessionList_descriptor_,
      SessionList::default_instance_,
      SessionList_offsets_,
      -1,
      -1,
      -1,
      sizeof(SessionList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SessionList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SessionList, _is_default_instance_));
  SessionStatus_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_proto_2fsessions_2fsession_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Session_descriptor_, &Session::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SessionList_descriptor_, &SessionList::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_proto_2fsessions_2fsession_2eproto() {
  delete Session::default_instance_;
  delete Session_reflection_;
  delete SessionList::default_instance_;
  delete SessionList_reflection_;
}

void protobuf_AddDesc_proto_2fsessions_2fsession_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_proto_2fsessions_2fsession_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::ubii::sessions::protobuf_AddDesc_proto_2fsessions_2fioMappings_2eproto();
  ::ubii::processing::protobuf_AddDesc_proto_2fprocessing_2fprocessingModule_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\034proto/sessions/session.proto\022\rubii.ses"
    "sions\032\037proto/sessions/ioMappings.proto\032\'"
    "proto/processing/processingModule.proto\""
    "\205\002\n\007Session\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022=\n"
    "\022processing_modules\030\003 \003(\0132!.ubii.process"
    "ing.ProcessingModule\022-\n\013io_mappings\030\004 \003("
    "\0132\030.ubii.sessions.IOMapping\022\014\n\004tags\030\005 \003("
    "\t\022\023\n\013description\030\006 \001(\t\022\017\n\007authors\030\007 \003(\t\022"
    ",\n\006status\030\010 \001(\0162\034.ubii.sessions.SessionS"
    "tatus\022\020\n\010editable\030\t \001(\010\"7\n\013SessionList\022("
    "\n\010elements\030\001 \003(\0132\026.ubii.sessions.Session"
    "*B\n\rSessionStatus\022\013\n\007CREATED\020\000\022\013\n\007RUNNIN"
    "G\020\001\022\n\n\006PAUSED\020\002\022\013\n\007STOPPED\020\003b\006proto3", 516);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proto/sessions/session.proto", &protobuf_RegisterTypes);
  Session::default_instance_ = new Session();
  SessionList::default_instance_ = new SessionList();
  Session::default_instance_->InitAsDefaultInstance();
  SessionList::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_proto_2fsessions_2fsession_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_proto_2fsessions_2fsession_2eproto {
  StaticDescriptorInitializer_proto_2fsessions_2fsession_2eproto() {
    protobuf_AddDesc_proto_2fsessions_2fsession_2eproto();
  }
} static_descriptor_initializer_proto_2fsessions_2fsession_2eproto_;
const ::google::protobuf::EnumDescriptor* SessionStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SessionStatus_descriptor_;
}
bool SessionStatus_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Session::kIdFieldNumber;
const int Session::kNameFieldNumber;
const int Session::kProcessingModulesFieldNumber;
const int Session::kIoMappingsFieldNumber;
const int Session::kTagsFieldNumber;
const int Session::kDescriptionFieldNumber;
const int Session::kAuthorsFieldNumber;
const int Session::kStatusFieldNumber;
const int Session::kEditableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Session::Session()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ubii.sessions.Session)
}

void Session::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Session::Session(const Session& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ubii.sessions.Session)
}

void Session::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
  editable_ = false;
}

Session::~Session() {
  // @@protoc_insertion_point(destructor:ubii.sessions.Session)
  SharedDtor();
}

void Session::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Session::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Session::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Session_descriptor_;
}

const Session& Session::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fsessions_2fsession_2eproto();
  return *default_instance_;
}

Session* Session::default_instance_ = NULL;

Session* Session::New(::google::protobuf::Arena* arena) const {
  Session* n = new Session;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Session::Clear() {
// @@protoc_insertion_point(message_clear_start:ubii.sessions.Session)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
  editable_ = false;
  processing_modules_.Clear();
  io_mappings_.Clear();
  tags_.Clear();
  authors_.Clear();
}

bool Session::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ubii.sessions.Session)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.sessions.Session.id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.sessions.Session.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_processing_modules;
        break;
      }

      // repeated .ubii.processing.ProcessingModule processing_modules = 3;
      case 3: {
        if (tag == 26) {
         parse_processing_modules:
          DO_(input->IncrementRecursionDepth());
         parse_loop_processing_modules:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_processing_modules()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_processing_modules;
        if (input->ExpectTag(34)) goto parse_loop_io_mappings;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .ubii.sessions.IOMapping io_mappings = 4;
      case 4: {
        if (tag == 34) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_io_mappings:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_io_mappings()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_io_mappings;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(42)) goto parse_tags;
        break;
      }

      // repeated string tags = 5;
      case 5: {
        if (tag == 42) {
         parse_tags:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_tags()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tags(this->tags_size() - 1).data(),
            this->tags(this->tags_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.sessions.Session.tags"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_tags;
        if (input->ExpectTag(50)) goto parse_description;
        break;
      }

      // optional string description = 6;
      case 6: {
        if (tag == 50) {
         parse_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.sessions.Session.description"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_authors;
        break;
      }

      // repeated string authors = 7;
      case 7: {
        if (tag == 58) {
         parse_authors:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_authors()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->authors(this->authors_size() - 1).data(),
            this->authors(this->authors_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.sessions.Session.authors"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_authors;
        if (input->ExpectTag(64)) goto parse_status;
        break;
      }

      // optional .ubii.sessions.SessionStatus status = 8;
      case 8: {
        if (tag == 64) {
         parse_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::ubii::sessions::SessionStatus >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_editable;
        break;
      }

      // optional bool editable = 9;
      case 9: {
        if (tag == 72) {
         parse_editable:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &editable_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ubii.sessions.Session)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ubii.sessions.Session)
  return false;
#undef DO_
}

void Session::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ubii.sessions.Session)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.sessions.Session.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.sessions.Session.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // repeated .ubii.processing.ProcessingModule processing_modules = 3;
  for (unsigned int i = 0, n = this->processing_modules_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->processing_modules(i), output);
  }

  // repeated .ubii.sessions.IOMapping io_mappings = 4;
  for (unsigned int i = 0, n = this->io_mappings_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->io_mappings(i), output);
  }

  // repeated string tags = 5;
  for (int i = 0; i < this->tags_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tags(i).data(), this->tags(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.sessions.Session.tags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->tags(i), output);
  }

  // optional string description = 6;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.sessions.Session.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->description(), output);
  }

  // repeated string authors = 7;
  for (int i = 0; i < this->authors_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->authors(i).data(), this->authors(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.sessions.Session.authors");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->authors(i), output);
  }

  // optional .ubii.sessions.SessionStatus status = 8;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->status(), output);
  }

  // optional bool editable = 9;
  if (this->editable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->editable(), output);
  }

  // @@protoc_insertion_point(serialize_end:ubii.sessions.Session)
}

::google::protobuf::uint8* Session::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ubii.sessions.Session)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.sessions.Session.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.sessions.Session.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // repeated .ubii.processing.ProcessingModule processing_modules = 3;
  for (unsigned int i = 0, n = this->processing_modules_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->processing_modules(i), false, target);
  }

  // repeated .ubii.sessions.IOMapping io_mappings = 4;
  for (unsigned int i = 0, n = this->io_mappings_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->io_mappings(i), false, target);
  }

  // repeated string tags = 5;
  for (int i = 0; i < this->tags_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tags(i).data(), this->tags(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.sessions.Session.tags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->tags(i), target);
  }

  // optional string description = 6;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.sessions.Session.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->description(), target);
  }

  // repeated string authors = 7;
  for (int i = 0; i < this->authors_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->authors(i).data(), this->authors(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.sessions.Session.authors");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->authors(i), target);
  }

  // optional .ubii.sessions.SessionStatus status = 8;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->status(), target);
  }

  // optional bool editable = 9;
  if (this->editable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->editable(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ubii.sessions.Session)
  return target;
}

int Session::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ubii.sessions.Session)
  int total_size = 0;

  // optional string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string description = 6;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // optional .ubii.sessions.SessionStatus status = 8;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  // optional bool editable = 9;
  if (this->editable() != 0) {
    total_size += 1 + 1;
  }

  // repeated .ubii.processing.ProcessingModule processing_modules = 3;
  total_size += 1 * this->processing_modules_size();
  for (int i = 0; i < this->processing_modules_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->processing_modules(i));
  }

  // repeated .ubii.sessions.IOMapping io_mappings = 4;
  total_size += 1 * this->io_mappings_size();
  for (int i = 0; i < this->io_mappings_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->io_mappings(i));
  }

  // repeated string tags = 5;
  total_size += 1 * this->tags_size();
  for (int i = 0; i < this->tags_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->tags(i));
  }

  // repeated string authors = 7;
  total_size += 1 * this->authors_size();
  for (int i = 0; i < this->authors_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->authors(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Session::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ubii.sessions.Session)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Session* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Session>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ubii.sessions.Session)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ubii.sessions.Session)
    MergeFrom(*source);
  }
}

void Session::MergeFrom(const Session& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ubii.sessions.Session)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  processing_modules_.MergeFrom(from.processing_modules_);
  io_mappings_.MergeFrom(from.io_mappings_);
  tags_.MergeFrom(from.tags_);
  authors_.MergeFrom(from.authors_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.editable() != 0) {
    set_editable(from.editable());
  }
}

void Session::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ubii.sessions.Session)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Session::CopyFrom(const Session& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ubii.sessions.Session)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Session::IsInitialized() const {

  return true;
}

void Session::Swap(Session* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Session::InternalSwap(Session* other) {
  id_.Swap(&other->id_);
  name_.Swap(&other->name_);
  processing_modules_.UnsafeArenaSwap(&other->processing_modules_);
  io_mappings_.UnsafeArenaSwap(&other->io_mappings_);
  tags_.UnsafeArenaSwap(&other->tags_);
  description_.Swap(&other->description_);
  authors_.UnsafeArenaSwap(&other->authors_);
  std::swap(status_, other->status_);
  std::swap(editable_, other->editable_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Session::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Session_descriptor_;
  metadata.reflection = Session_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Session

// optional string id = 1;
void Session::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Session::id() const {
  // @@protoc_insertion_point(field_get:ubii.sessions.Session.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Session::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ubii.sessions.Session.id)
}
 void Session::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ubii.sessions.Session.id)
}
 void Session::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ubii.sessions.Session.id)
}
 ::std::string* Session::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ubii.sessions.Session.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Session::release_id() {
  // @@protoc_insertion_point(field_release:ubii.sessions.Session.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Session::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ubii.sessions.Session.id)
}

// optional string name = 2;
void Session::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Session::name() const {
  // @@protoc_insertion_point(field_get:ubii.sessions.Session.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Session::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ubii.sessions.Session.name)
}
 void Session::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ubii.sessions.Session.name)
}
 void Session::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ubii.sessions.Session.name)
}
 ::std::string* Session::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ubii.sessions.Session.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Session::release_name() {
  // @@protoc_insertion_point(field_release:ubii.sessions.Session.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Session::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ubii.sessions.Session.name)
}

// repeated .ubii.processing.ProcessingModule processing_modules = 3;
int Session::processing_modules_size() const {
  return processing_modules_.size();
}
void Session::clear_processing_modules() {
  processing_modules_.Clear();
}
const ::ubii::processing::ProcessingModule& Session::processing_modules(int index) const {
  // @@protoc_insertion_point(field_get:ubii.sessions.Session.processing_modules)
  return processing_modules_.Get(index);
}
::ubii::processing::ProcessingModule* Session::mutable_processing_modules(int index) {
  // @@protoc_insertion_point(field_mutable:ubii.sessions.Session.processing_modules)
  return processing_modules_.Mutable(index);
}
::ubii::processing::ProcessingModule* Session::add_processing_modules() {
  // @@protoc_insertion_point(field_add:ubii.sessions.Session.processing_modules)
  return processing_modules_.Add();
}
::google::protobuf::RepeatedPtrField< ::ubii::processing::ProcessingModule >*
Session::mutable_processing_modules() {
  // @@protoc_insertion_point(field_mutable_list:ubii.sessions.Session.processing_modules)
  return &processing_modules_;
}
const ::google::protobuf::RepeatedPtrField< ::ubii::processing::ProcessingModule >&
Session::processing_modules() const {
  // @@protoc_insertion_point(field_list:ubii.sessions.Session.processing_modules)
  return processing_modules_;
}

// repeated .ubii.sessions.IOMapping io_mappings = 4;
int Session::io_mappings_size() const {
  return io_mappings_.size();
}
void Session::clear_io_mappings() {
  io_mappings_.Clear();
}
const ::ubii::sessions::IOMapping& Session::io_mappings(int index) const {
  // @@protoc_insertion_point(field_get:ubii.sessions.Session.io_mappings)
  return io_mappings_.Get(index);
}
::ubii::sessions::IOMapping* Session::mutable_io_mappings(int index) {
  // @@protoc_insertion_point(field_mutable:ubii.sessions.Session.io_mappings)
  return io_mappings_.Mutable(index);
}
::ubii::sessions::IOMapping* Session::add_io_mappings() {
  // @@protoc_insertion_point(field_add:ubii.sessions.Session.io_mappings)
  return io_mappings_.Add();
}
::google::protobuf::RepeatedPtrField< ::ubii::sessions::IOMapping >*
Session::mutable_io_mappings() {
  // @@protoc_insertion_point(field_mutable_list:ubii.sessions.Session.io_mappings)
  return &io_mappings_;
}
const ::google::protobuf::RepeatedPtrField< ::ubii::sessions::IOMapping >&
Session::io_mappings() const {
  // @@protoc_insertion_point(field_list:ubii.sessions.Session.io_mappings)
  return io_mappings_;
}

// repeated string tags = 5;
int Session::tags_size() const {
  return tags_.size();
}
void Session::clear_tags() {
  tags_.Clear();
}
 const ::std::string& Session::tags(int index) const {
  // @@protoc_insertion_point(field_get:ubii.sessions.Session.tags)
  return tags_.Get(index);
}
 ::std::string* Session::mutable_tags(int index) {
  // @@protoc_insertion_point(field_mutable:ubii.sessions.Session.tags)
  return tags_.Mutable(index);
}
 void Session::set_tags(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ubii.sessions.Session.tags)
  tags_.Mutable(index)->assign(value);
}
 void Session::set_tags(int index, const char* value) {
  tags_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ubii.sessions.Session.tags)
}
 void Session::set_tags(int index, const char* value, size_t size) {
  tags_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ubii.sessions.Session.tags)
}
 ::std::string* Session::add_tags() {
  // @@protoc_insertion_point(field_add_mutable:ubii.sessions.Session.tags)
  return tags_.Add();
}
 void Session::add_tags(const ::std::string& value) {
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ubii.sessions.Session.tags)
}
 void Session::add_tags(const char* value) {
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ubii.sessions.Session.tags)
}
 void Session::add_tags(const char* value, size_t size) {
  tags_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ubii.sessions.Session.tags)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
Session::tags() const {
  // @@protoc_insertion_point(field_list:ubii.sessions.Session.tags)
  return tags_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
Session::mutable_tags() {
  // @@protoc_insertion_point(field_mutable_list:ubii.sessions.Session.tags)
  return &tags_;
}

// optional string description = 6;
void Session::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Session::description() const {
  // @@protoc_insertion_point(field_get:ubii.sessions.Session.description)
  return description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Session::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ubii.sessions.Session.description)
}
 void Session::set_description(const char* value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ubii.sessions.Session.description)
}
 void Session::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ubii.sessions.Session.description)
}
 ::std::string* Session::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:ubii.sessions.Session.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Session::release_description() {
  // @@protoc_insertion_point(field_release:ubii.sessions.Session.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Session::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:ubii.sessions.Session.description)
}

// repeated string authors = 7;
int Session::authors_size() const {
  return authors_.size();
}
void Session::clear_authors() {
  authors_.Clear();
}
 const ::std::string& Session::authors(int index) const {
  // @@protoc_insertion_point(field_get:ubii.sessions.Session.authors)
  return authors_.Get(index);
}
 ::std::string* Session::mutable_authors(int index) {
  // @@protoc_insertion_point(field_mutable:ubii.sessions.Session.authors)
  return authors_.Mutable(index);
}
 void Session::set_authors(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ubii.sessions.Session.authors)
  authors_.Mutable(index)->assign(value);
}
 void Session::set_authors(int index, const char* value) {
  authors_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ubii.sessions.Session.authors)
}
 void Session::set_authors(int index, const char* value, size_t size) {
  authors_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ubii.sessions.Session.authors)
}
 ::std::string* Session::add_authors() {
  // @@protoc_insertion_point(field_add_mutable:ubii.sessions.Session.authors)
  return authors_.Add();
}
 void Session::add_authors(const ::std::string& value) {
  authors_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ubii.sessions.Session.authors)
}
 void Session::add_authors(const char* value) {
  authors_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ubii.sessions.Session.authors)
}
 void Session::add_authors(const char* value, size_t size) {
  authors_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ubii.sessions.Session.authors)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
Session::authors() const {
  // @@protoc_insertion_point(field_list:ubii.sessions.Session.authors)
  return authors_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
Session::mutable_authors() {
  // @@protoc_insertion_point(field_mutable_list:ubii.sessions.Session.authors)
  return &authors_;
}

// optional .ubii.sessions.SessionStatus status = 8;
void Session::clear_status() {
  status_ = 0;
}
 ::ubii::sessions::SessionStatus Session::status() const {
  // @@protoc_insertion_point(field_get:ubii.sessions.Session.status)
  return static_cast< ::ubii::sessions::SessionStatus >(status_);
}
 void Session::set_status(::ubii::sessions::SessionStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:ubii.sessions.Session.status)
}

// optional bool editable = 9;
void Session::clear_editable() {
  editable_ = false;
}
 bool Session::editable() const {
  // @@protoc_insertion_point(field_get:ubii.sessions.Session.editable)
  return editable_;
}
 void Session::set_editable(bool value) {
  
  editable_ = value;
  // @@protoc_insertion_point(field_set:ubii.sessions.Session.editable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SessionList::kElementsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SessionList::SessionList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ubii.sessions.SessionList)
}

void SessionList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SessionList::SessionList(const SessionList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ubii.sessions.SessionList)
}

void SessionList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

SessionList::~SessionList() {
  // @@protoc_insertion_point(destructor:ubii.sessions.SessionList)
  SharedDtor();
}

void SessionList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SessionList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SessionList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SessionList_descriptor_;
}

const SessionList& SessionList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fsessions_2fsession_2eproto();
  return *default_instance_;
}

SessionList* SessionList::default_instance_ = NULL;

SessionList* SessionList::New(::google::protobuf::Arena* arena) const {
  SessionList* n = new SessionList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SessionList::Clear() {
// @@protoc_insertion_point(message_clear_start:ubii.sessions.SessionList)
  elements_.Clear();
}

bool SessionList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ubii.sessions.SessionList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ubii.sessions.Session elements = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_elements:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_elements()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_elements;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ubii.sessions.SessionList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ubii.sessions.SessionList)
  return false;
#undef DO_
}

void SessionList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ubii.sessions.SessionList)
  // repeated .ubii.sessions.Session elements = 1;
  for (unsigned int i = 0, n = this->elements_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->elements(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ubii.sessions.SessionList)
}

::google::protobuf::uint8* SessionList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ubii.sessions.SessionList)
  // repeated .ubii.sessions.Session elements = 1;
  for (unsigned int i = 0, n = this->elements_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->elements(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ubii.sessions.SessionList)
  return target;
}

int SessionList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ubii.sessions.SessionList)
  int total_size = 0;

  // repeated .ubii.sessions.Session elements = 1;
  total_size += 1 * this->elements_size();
  for (int i = 0; i < this->elements_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->elements(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SessionList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ubii.sessions.SessionList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SessionList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SessionList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ubii.sessions.SessionList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ubii.sessions.SessionList)
    MergeFrom(*source);
  }
}

void SessionList::MergeFrom(const SessionList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ubii.sessions.SessionList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  elements_.MergeFrom(from.elements_);
}

void SessionList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ubii.sessions.SessionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SessionList::CopyFrom(const SessionList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ubii.sessions.SessionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SessionList::IsInitialized() const {

  return true;
}

void SessionList::Swap(SessionList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SessionList::InternalSwap(SessionList* other) {
  elements_.UnsafeArenaSwap(&other->elements_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SessionList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SessionList_descriptor_;
  metadata.reflection = SessionList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SessionList

// repeated .ubii.sessions.Session elements = 1;
int SessionList::elements_size() const {
  return elements_.size();
}
void SessionList::clear_elements() {
  elements_.Clear();
}
const ::ubii::sessions::Session& SessionList::elements(int index) const {
  // @@protoc_insertion_point(field_get:ubii.sessions.SessionList.elements)
  return elements_.Get(index);
}
::ubii::sessions::Session* SessionList::mutable_elements(int index) {
  // @@protoc_insertion_point(field_mutable:ubii.sessions.SessionList.elements)
  return elements_.Mutable(index);
}
::ubii::sessions::Session* SessionList::add_elements() {
  // @@protoc_insertion_point(field_add:ubii.sessions.SessionList.elements)
  return elements_.Add();
}
::google::protobuf::RepeatedPtrField< ::ubii::sessions::Session >*
SessionList::mutable_elements() {
  // @@protoc_insertion_point(field_mutable_list:ubii.sessions.SessionList.elements)
  return &elements_;
}
const ::google::protobuf::RepeatedPtrField< ::ubii::sessions::Session >&
SessionList::elements() const {
  // @@protoc_insertion_point(field_list:ubii.sessions.SessionList.elements)
  return elements_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace sessions
}  // namespace ubii

// @@protoc_insertion_point(global_scope)
