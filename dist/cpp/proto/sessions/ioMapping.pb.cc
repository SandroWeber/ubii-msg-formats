// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/sessions/ioMapping.proto

#include "proto/sessions/ioMapping.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_proto_2fsessions_2fioMapping_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_IOMapping_proto_2fsessions_2fioMapping_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2fsessions_2finteractionInputMapping_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_InteractionInputMapping_proto_2fsessions_2finteractionInputMapping_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2fsessions_2finteractionOutputMapping_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_InteractionOutputMapping_proto_2fsessions_2finteractionOutputMapping_2eproto;
namespace ubii {
namespace sessions {
class IOMappingDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IOMapping> _instance;
} _IOMapping_default_instance_;
class IOMappingListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IOMappingList> _instance;
} _IOMappingList_default_instance_;
}  // namespace sessions
}  // namespace ubii
static void InitDefaultsscc_info_IOMapping_proto_2fsessions_2fioMapping_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ubii::sessions::_IOMapping_default_instance_;
    new (ptr) ::ubii::sessions::IOMapping();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ubii::sessions::IOMapping::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_IOMapping_proto_2fsessions_2fioMapping_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_IOMapping_proto_2fsessions_2fioMapping_2eproto}, {
      &scc_info_InteractionInputMapping_proto_2fsessions_2finteractionInputMapping_2eproto.base,
      &scc_info_InteractionOutputMapping_proto_2fsessions_2finteractionOutputMapping_2eproto.base,}};

static void InitDefaultsscc_info_IOMappingList_proto_2fsessions_2fioMapping_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ubii::sessions::_IOMappingList_default_instance_;
    new (ptr) ::ubii::sessions::IOMappingList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ubii::sessions::IOMappingList::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_IOMappingList_proto_2fsessions_2fioMapping_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_IOMappingList_proto_2fsessions_2fioMapping_2eproto}, {
      &scc_info_IOMapping_proto_2fsessions_2fioMapping_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_proto_2fsessions_2fioMapping_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_proto_2fsessions_2fioMapping_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_proto_2fsessions_2fioMapping_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_proto_2fsessions_2fioMapping_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ubii::sessions::IOMapping, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ubii::sessions::IOMapping, interaction_id_),
  PROTOBUF_FIELD_OFFSET(::ubii::sessions::IOMapping, input_mappings_),
  PROTOBUF_FIELD_OFFSET(::ubii::sessions::IOMapping, output_mappings_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ubii::sessions::IOMappingList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ubii::sessions::IOMappingList, elements_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ubii::sessions::IOMapping)},
  { 8, -1, sizeof(::ubii::sessions::IOMappingList)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ubii::sessions::_IOMapping_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ubii::sessions::_IOMappingList_default_instance_),
};

const char descriptor_table_protodef_proto_2fsessions_2fioMapping_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\036proto/sessions/ioMapping.proto\022\rubii.s"
  "essions\032,proto/sessions/interactionInput"
  "Mapping.proto\032-proto/sessions/interactio"
  "nOutputMapping.proto\"\245\001\n\tIOMapping\022\026\n\016in"
  "teraction_id\030\001 \001(\t\022>\n\016input_mappings\030\002 \003"
  "(\0132&.ubii.sessions.InteractionInputMappi"
  "ng\022@\n\017output_mappings\030\003 \003(\0132\'.ubii.sessi"
  "ons.InteractionOutputMapping\";\n\rIOMappin"
  "gList\022*\n\010elements\030\001 \003(\0132\030.ubii.sessions."
  "IOMappingb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_proto_2fsessions_2fioMapping_2eproto_deps[2] = {
  &::descriptor_table_proto_2fsessions_2finteractionInputMapping_2eproto,
  &::descriptor_table_proto_2fsessions_2finteractionOutputMapping_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_proto_2fsessions_2fioMapping_2eproto_sccs[2] = {
  &scc_info_IOMapping_proto_2fsessions_2fioMapping_2eproto.base,
  &scc_info_IOMappingList_proto_2fsessions_2fioMapping_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_proto_2fsessions_2fioMapping_2eproto_once;
static bool descriptor_table_proto_2fsessions_2fioMapping_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_2fsessions_2fioMapping_2eproto = {
  &descriptor_table_proto_2fsessions_2fioMapping_2eproto_initialized, descriptor_table_protodef_proto_2fsessions_2fioMapping_2eproto, "proto/sessions/ioMapping.proto", 377,
  &descriptor_table_proto_2fsessions_2fioMapping_2eproto_once, descriptor_table_proto_2fsessions_2fioMapping_2eproto_sccs, descriptor_table_proto_2fsessions_2fioMapping_2eproto_deps, 2, 2,
  schemas, file_default_instances, TableStruct_proto_2fsessions_2fioMapping_2eproto::offsets,
  file_level_metadata_proto_2fsessions_2fioMapping_2eproto, 2, file_level_enum_descriptors_proto_2fsessions_2fioMapping_2eproto, file_level_service_descriptors_proto_2fsessions_2fioMapping_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_proto_2fsessions_2fioMapping_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_proto_2fsessions_2fioMapping_2eproto), true);
namespace ubii {
namespace sessions {

// ===================================================================

void IOMapping::InitAsDefaultInstance() {
}
class IOMapping::_Internal {
 public:
};

void IOMapping::clear_input_mappings() {
  input_mappings_.Clear();
}
void IOMapping::clear_output_mappings() {
  output_mappings_.Clear();
}
IOMapping::IOMapping()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ubii.sessions.IOMapping)
}
IOMapping::IOMapping(const IOMapping& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      input_mappings_(from.input_mappings_),
      output_mappings_(from.output_mappings_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  interaction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_interaction_id().empty()) {
    interaction_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.interaction_id_);
  }
  // @@protoc_insertion_point(copy_constructor:ubii.sessions.IOMapping)
}

void IOMapping::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IOMapping_proto_2fsessions_2fioMapping_2eproto.base);
  interaction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

IOMapping::~IOMapping() {
  // @@protoc_insertion_point(destructor:ubii.sessions.IOMapping)
  SharedDtor();
}

void IOMapping::SharedDtor() {
  interaction_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void IOMapping::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IOMapping& IOMapping::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IOMapping_proto_2fsessions_2fioMapping_2eproto.base);
  return *internal_default_instance();
}


void IOMapping::Clear() {
// @@protoc_insertion_point(message_clear_start:ubii.sessions.IOMapping)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  input_mappings_.Clear();
  output_mappings_.Clear();
  interaction_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* IOMapping::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string interaction_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_interaction_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ubii.sessions.IOMapping.interaction_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ubii.sessions.InteractionInputMapping input_mappings = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_input_mappings(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .ubii.sessions.InteractionOutputMapping output_mappings = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_output_mappings(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IOMapping::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ubii.sessions.IOMapping)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string interaction_id = 1;
  if (this->interaction_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_interaction_id().data(), static_cast<int>(this->_internal_interaction_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ubii.sessions.IOMapping.interaction_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_interaction_id(), target);
  }

  // repeated .ubii.sessions.InteractionInputMapping input_mappings = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_input_mappings_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_input_mappings(i), target, stream);
  }

  // repeated .ubii.sessions.InteractionOutputMapping output_mappings = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_output_mappings_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_output_mappings(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ubii.sessions.IOMapping)
  return target;
}

size_t IOMapping::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ubii.sessions.IOMapping)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ubii.sessions.InteractionInputMapping input_mappings = 2;
  total_size += 1UL * this->_internal_input_mappings_size();
  for (const auto& msg : this->input_mappings_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ubii.sessions.InteractionOutputMapping output_mappings = 3;
  total_size += 1UL * this->_internal_output_mappings_size();
  for (const auto& msg : this->output_mappings_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string interaction_id = 1;
  if (this->interaction_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_interaction_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IOMapping::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ubii.sessions.IOMapping)
  GOOGLE_DCHECK_NE(&from, this);
  const IOMapping* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IOMapping>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ubii.sessions.IOMapping)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ubii.sessions.IOMapping)
    MergeFrom(*source);
  }
}

void IOMapping::MergeFrom(const IOMapping& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ubii.sessions.IOMapping)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  input_mappings_.MergeFrom(from.input_mappings_);
  output_mappings_.MergeFrom(from.output_mappings_);
  if (from.interaction_id().size() > 0) {

    interaction_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.interaction_id_);
  }
}

void IOMapping::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ubii.sessions.IOMapping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IOMapping::CopyFrom(const IOMapping& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ubii.sessions.IOMapping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IOMapping::IsInitialized() const {
  return true;
}

void IOMapping::InternalSwap(IOMapping* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  input_mappings_.InternalSwap(&other->input_mappings_);
  output_mappings_.InternalSwap(&other->output_mappings_);
  interaction_id_.Swap(&other->interaction_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata IOMapping::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void IOMappingList::InitAsDefaultInstance() {
}
class IOMappingList::_Internal {
 public:
};

IOMappingList::IOMappingList()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ubii.sessions.IOMappingList)
}
IOMappingList::IOMappingList(const IOMappingList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      elements_(from.elements_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ubii.sessions.IOMappingList)
}

void IOMappingList::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IOMappingList_proto_2fsessions_2fioMapping_2eproto.base);
}

IOMappingList::~IOMappingList() {
  // @@protoc_insertion_point(destructor:ubii.sessions.IOMappingList)
  SharedDtor();
}

void IOMappingList::SharedDtor() {
}

void IOMappingList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IOMappingList& IOMappingList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IOMappingList_proto_2fsessions_2fioMapping_2eproto.base);
  return *internal_default_instance();
}


void IOMappingList::Clear() {
// @@protoc_insertion_point(message_clear_start:ubii.sessions.IOMappingList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  elements_.Clear();
  _internal_metadata_.Clear();
}

const char* IOMappingList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .ubii.sessions.IOMapping elements = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_elements(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IOMappingList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ubii.sessions.IOMappingList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ubii.sessions.IOMapping elements = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_elements_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_elements(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ubii.sessions.IOMappingList)
  return target;
}

size_t IOMappingList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ubii.sessions.IOMappingList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ubii.sessions.IOMapping elements = 1;
  total_size += 1UL * this->_internal_elements_size();
  for (const auto& msg : this->elements_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IOMappingList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ubii.sessions.IOMappingList)
  GOOGLE_DCHECK_NE(&from, this);
  const IOMappingList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IOMappingList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ubii.sessions.IOMappingList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ubii.sessions.IOMappingList)
    MergeFrom(*source);
  }
}

void IOMappingList::MergeFrom(const IOMappingList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ubii.sessions.IOMappingList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  elements_.MergeFrom(from.elements_);
}

void IOMappingList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ubii.sessions.IOMappingList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IOMappingList::CopyFrom(const IOMappingList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ubii.sessions.IOMappingList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IOMappingList::IsInitialized() const {
  return true;
}

void IOMappingList::InternalSwap(IOMappingList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  elements_.InternalSwap(&other->elements_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IOMappingList::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace sessions
}  // namespace ubii
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ubii::sessions::IOMapping* Arena::CreateMaybeMessage< ::ubii::sessions::IOMapping >(Arena* arena) {
  return Arena::CreateInternal< ::ubii::sessions::IOMapping >(arena);
}
template<> PROTOBUF_NOINLINE ::ubii::sessions::IOMappingList* Arena::CreateMaybeMessage< ::ubii::sessions::IOMappingList >(Arena* arena) {
  return Arena::CreateInternal< ::ubii::sessions::IOMappingList >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
