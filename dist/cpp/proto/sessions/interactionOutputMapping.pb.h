// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/sessions/interactionOutputMapping.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_proto_2fsessions_2finteractionOutputMapping_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_proto_2fsessions_2finteractionOutputMapping_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "proto/devices/topicDemux.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_proto_2fsessions_2finteractionOutputMapping_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2fsessions_2finteractionOutputMapping_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_2fsessions_2finteractionOutputMapping_2eproto;
namespace ubii {
namespace sessions {
class InteractionOutputMapping;
class InteractionOutputMappingDefaultTypeInternal;
extern InteractionOutputMappingDefaultTypeInternal _InteractionOutputMapping_default_instance_;
class InteractionOutputMappingList;
class InteractionOutputMappingListDefaultTypeInternal;
extern InteractionOutputMappingListDefaultTypeInternal _InteractionOutputMappingList_default_instance_;
}  // namespace sessions
}  // namespace ubii
PROTOBUF_NAMESPACE_OPEN
template<> ::ubii::sessions::InteractionOutputMapping* Arena::CreateMaybeMessage<::ubii::sessions::InteractionOutputMapping>(Arena*);
template<> ::ubii::sessions::InteractionOutputMappingList* Arena::CreateMaybeMessage<::ubii::sessions::InteractionOutputMappingList>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace ubii {
namespace sessions {

// ===================================================================

class InteractionOutputMapping :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ubii.sessions.InteractionOutputMapping) */ {
 public:
  InteractionOutputMapping();
  virtual ~InteractionOutputMapping();

  InteractionOutputMapping(const InteractionOutputMapping& from);
  InteractionOutputMapping(InteractionOutputMapping&& from) noexcept
    : InteractionOutputMapping() {
    *this = ::std::move(from);
  }

  inline InteractionOutputMapping& operator=(const InteractionOutputMapping& from) {
    CopyFrom(from);
    return *this;
  }
  inline InteractionOutputMapping& operator=(InteractionOutputMapping&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const InteractionOutputMapping& default_instance();

  enum TopicDestinationCase {
    kTopic = 2,
    kTopicDemux = 3,
    TOPIC_DESTINATION_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InteractionOutputMapping* internal_default_instance() {
    return reinterpret_cast<const InteractionOutputMapping*>(
               &_InteractionOutputMapping_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(InteractionOutputMapping& a, InteractionOutputMapping& b) {
    a.Swap(&b);
  }
  inline void Swap(InteractionOutputMapping* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InteractionOutputMapping* New() const final {
    return CreateMaybeMessage<InteractionOutputMapping>(nullptr);
  }

  InteractionOutputMapping* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InteractionOutputMapping>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const InteractionOutputMapping& from);
  void MergeFrom(const InteractionOutputMapping& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InteractionOutputMapping* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ubii.sessions.InteractionOutputMapping";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_2fsessions_2finteractionOutputMapping_2eproto);
    return ::descriptor_table_proto_2fsessions_2finteractionOutputMapping_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kTopicFieldNumber = 2,
    kTopicDemuxFieldNumber = 3,
  };
  // string name = 1;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string topic = 2;
  private:
  bool _internal_has_topic() const;
  public:
  void clear_topic();
  const std::string& topic() const;
  void set_topic(const std::string& value);
  void set_topic(std::string&& value);
  void set_topic(const char* value);
  void set_topic(const char* value, size_t size);
  std::string* mutable_topic();
  std::string* release_topic();
  void set_allocated_topic(std::string* topic);
  private:
  const std::string& _internal_topic() const;
  void _internal_set_topic(const std::string& value);
  std::string* _internal_mutable_topic();
  public:

  // .ubii.devices.TopicDemux topic_demux = 3;
  bool has_topic_demux() const;
  private:
  bool _internal_has_topic_demux() const;
  public:
  void clear_topic_demux();
  const ::ubii::devices::TopicDemux& topic_demux() const;
  ::ubii::devices::TopicDemux* release_topic_demux();
  ::ubii::devices::TopicDemux* mutable_topic_demux();
  void set_allocated_topic_demux(::ubii::devices::TopicDemux* topic_demux);
  private:
  const ::ubii::devices::TopicDemux& _internal_topic_demux() const;
  ::ubii::devices::TopicDemux* _internal_mutable_topic_demux();
  public:

  void clear_topic_destination();
  TopicDestinationCase topic_destination_case() const;
  // @@protoc_insertion_point(class_scope:ubii.sessions.InteractionOutputMapping)
 private:
  class _Internal;
  void set_has_topic();
  void set_has_topic_demux();

  inline bool has_topic_destination() const;
  inline void clear_has_topic_destination();

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  union TopicDestinationUnion {
    TopicDestinationUnion() {}
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr topic_;
    ::ubii::devices::TopicDemux* topic_demux_;
  } topic_destination_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_proto_2fsessions_2finteractionOutputMapping_2eproto;
};
// -------------------------------------------------------------------

class InteractionOutputMappingList :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ubii.sessions.InteractionOutputMappingList) */ {
 public:
  InteractionOutputMappingList();
  virtual ~InteractionOutputMappingList();

  InteractionOutputMappingList(const InteractionOutputMappingList& from);
  InteractionOutputMappingList(InteractionOutputMappingList&& from) noexcept
    : InteractionOutputMappingList() {
    *this = ::std::move(from);
  }

  inline InteractionOutputMappingList& operator=(const InteractionOutputMappingList& from) {
    CopyFrom(from);
    return *this;
  }
  inline InteractionOutputMappingList& operator=(InteractionOutputMappingList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const InteractionOutputMappingList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InteractionOutputMappingList* internal_default_instance() {
    return reinterpret_cast<const InteractionOutputMappingList*>(
               &_InteractionOutputMappingList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(InteractionOutputMappingList& a, InteractionOutputMappingList& b) {
    a.Swap(&b);
  }
  inline void Swap(InteractionOutputMappingList* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InteractionOutputMappingList* New() const final {
    return CreateMaybeMessage<InteractionOutputMappingList>(nullptr);
  }

  InteractionOutputMappingList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InteractionOutputMappingList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const InteractionOutputMappingList& from);
  void MergeFrom(const InteractionOutputMappingList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InteractionOutputMappingList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ubii.sessions.InteractionOutputMappingList";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_2fsessions_2finteractionOutputMapping_2eproto);
    return ::descriptor_table_proto_2fsessions_2finteractionOutputMapping_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kElementsFieldNumber = 1,
  };
  // repeated .ubii.sessions.InteractionOutputMapping elements = 1;
  int elements_size() const;
  private:
  int _internal_elements_size() const;
  public:
  void clear_elements();
  ::ubii::sessions::InteractionOutputMapping* mutable_elements(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ubii::sessions::InteractionOutputMapping >*
      mutable_elements();
  private:
  const ::ubii::sessions::InteractionOutputMapping& _internal_elements(int index) const;
  ::ubii::sessions::InteractionOutputMapping* _internal_add_elements();
  public:
  const ::ubii::sessions::InteractionOutputMapping& elements(int index) const;
  ::ubii::sessions::InteractionOutputMapping* add_elements();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ubii::sessions::InteractionOutputMapping >&
      elements() const;

  // @@protoc_insertion_point(class_scope:ubii.sessions.InteractionOutputMappingList)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ubii::sessions::InteractionOutputMapping > elements_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_2fsessions_2finteractionOutputMapping_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// InteractionOutputMapping

// string name = 1;
inline void InteractionOutputMapping::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& InteractionOutputMapping::name() const {
  // @@protoc_insertion_point(field_get:ubii.sessions.InteractionOutputMapping.name)
  return _internal_name();
}
inline void InteractionOutputMapping::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:ubii.sessions.InteractionOutputMapping.name)
}
inline std::string* InteractionOutputMapping::mutable_name() {
  // @@protoc_insertion_point(field_mutable:ubii.sessions.InteractionOutputMapping.name)
  return _internal_mutable_name();
}
inline const std::string& InteractionOutputMapping::_internal_name() const {
  return name_.GetNoArena();
}
inline void InteractionOutputMapping::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void InteractionOutputMapping::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ubii.sessions.InteractionOutputMapping.name)
}
inline void InteractionOutputMapping::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ubii.sessions.InteractionOutputMapping.name)
}
inline void InteractionOutputMapping::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ubii.sessions.InteractionOutputMapping.name)
}
inline std::string* InteractionOutputMapping::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* InteractionOutputMapping::release_name() {
  // @@protoc_insertion_point(field_release:ubii.sessions.InteractionOutputMapping.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void InteractionOutputMapping::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ubii.sessions.InteractionOutputMapping.name)
}

// string topic = 2;
inline bool InteractionOutputMapping::_internal_has_topic() const {
  return topic_destination_case() == kTopic;
}
inline void InteractionOutputMapping::set_has_topic() {
  _oneof_case_[0] = kTopic;
}
inline void InteractionOutputMapping::clear_topic() {
  if (_internal_has_topic()) {
    topic_destination_.topic_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    clear_has_topic_destination();
  }
}
inline const std::string& InteractionOutputMapping::topic() const {
  // @@protoc_insertion_point(field_get:ubii.sessions.InteractionOutputMapping.topic)
  return _internal_topic();
}
inline void InteractionOutputMapping::set_topic(const std::string& value) {
  _internal_set_topic(value);
  // @@protoc_insertion_point(field_set:ubii.sessions.InteractionOutputMapping.topic)
}
inline std::string* InteractionOutputMapping::mutable_topic() {
  // @@protoc_insertion_point(field_mutable:ubii.sessions.InteractionOutputMapping.topic)
  return _internal_mutable_topic();
}
inline const std::string& InteractionOutputMapping::_internal_topic() const {
  if (_internal_has_topic()) {
    return topic_destination_.topic_.GetNoArena();
  }
  return *&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited();
}
inline void InteractionOutputMapping::_internal_set_topic(const std::string& value) {
  if (!_internal_has_topic()) {
    clear_topic_destination();
    set_has_topic();
    topic_destination_.topic_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  topic_destination_.topic_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void InteractionOutputMapping::set_topic(std::string&& value) {
  // @@protoc_insertion_point(field_set:ubii.sessions.InteractionOutputMapping.topic)
  if (!_internal_has_topic()) {
    clear_topic_destination();
    set_has_topic();
    topic_destination_.topic_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  topic_destination_.topic_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ubii.sessions.InteractionOutputMapping.topic)
}
inline void InteractionOutputMapping::set_topic(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  if (!_internal_has_topic()) {
    clear_topic_destination();
    set_has_topic();
    topic_destination_.topic_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  topic_destination_.topic_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ubii.sessions.InteractionOutputMapping.topic)
}
inline void InteractionOutputMapping::set_topic(const char* value, size_t size) {
  if (!_internal_has_topic()) {
    clear_topic_destination();
    set_has_topic();
    topic_destination_.topic_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  topic_destination_.topic_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ubii.sessions.InteractionOutputMapping.topic)
}
inline std::string* InteractionOutputMapping::_internal_mutable_topic() {
  if (!_internal_has_topic()) {
    clear_topic_destination();
    set_has_topic();
    topic_destination_.topic_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  return topic_destination_.topic_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* InteractionOutputMapping::release_topic() {
  // @@protoc_insertion_point(field_release:ubii.sessions.InteractionOutputMapping.topic)
  if (_internal_has_topic()) {
    clear_has_topic_destination();
    return topic_destination_.topic_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  } else {
    return nullptr;
  }
}
inline void InteractionOutputMapping::set_allocated_topic(std::string* topic) {
  if (has_topic_destination()) {
    clear_topic_destination();
  }
  if (topic != nullptr) {
    set_has_topic();
    topic_destination_.topic_.UnsafeSetDefault(topic);
  }
  // @@protoc_insertion_point(field_set_allocated:ubii.sessions.InteractionOutputMapping.topic)
}

// .ubii.devices.TopicDemux topic_demux = 3;
inline bool InteractionOutputMapping::_internal_has_topic_demux() const {
  return topic_destination_case() == kTopicDemux;
}
inline bool InteractionOutputMapping::has_topic_demux() const {
  return _internal_has_topic_demux();
}
inline void InteractionOutputMapping::set_has_topic_demux() {
  _oneof_case_[0] = kTopicDemux;
}
inline ::ubii::devices::TopicDemux* InteractionOutputMapping::release_topic_demux() {
  // @@protoc_insertion_point(field_release:ubii.sessions.InteractionOutputMapping.topic_demux)
  if (_internal_has_topic_demux()) {
    clear_has_topic_destination();
      ::ubii::devices::TopicDemux* temp = topic_destination_.topic_demux_;
    topic_destination_.topic_demux_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::ubii::devices::TopicDemux& InteractionOutputMapping::_internal_topic_demux() const {
  return _internal_has_topic_demux()
      ? *topic_destination_.topic_demux_
      : *reinterpret_cast< ::ubii::devices::TopicDemux*>(&::ubii::devices::_TopicDemux_default_instance_);
}
inline const ::ubii::devices::TopicDemux& InteractionOutputMapping::topic_demux() const {
  // @@protoc_insertion_point(field_get:ubii.sessions.InteractionOutputMapping.topic_demux)
  return _internal_topic_demux();
}
inline ::ubii::devices::TopicDemux* InteractionOutputMapping::_internal_mutable_topic_demux() {
  if (!_internal_has_topic_demux()) {
    clear_topic_destination();
    set_has_topic_demux();
    topic_destination_.topic_demux_ = CreateMaybeMessage< ::ubii::devices::TopicDemux >(
        GetArenaNoVirtual());
  }
  return topic_destination_.topic_demux_;
}
inline ::ubii::devices::TopicDemux* InteractionOutputMapping::mutable_topic_demux() {
  // @@protoc_insertion_point(field_mutable:ubii.sessions.InteractionOutputMapping.topic_demux)
  return _internal_mutable_topic_demux();
}

inline bool InteractionOutputMapping::has_topic_destination() const {
  return topic_destination_case() != TOPIC_DESTINATION_NOT_SET;
}
inline void InteractionOutputMapping::clear_has_topic_destination() {
  _oneof_case_[0] = TOPIC_DESTINATION_NOT_SET;
}
inline InteractionOutputMapping::TopicDestinationCase InteractionOutputMapping::topic_destination_case() const {
  return InteractionOutputMapping::TopicDestinationCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// InteractionOutputMappingList

// repeated .ubii.sessions.InteractionOutputMapping elements = 1;
inline int InteractionOutputMappingList::_internal_elements_size() const {
  return elements_.size();
}
inline int InteractionOutputMappingList::elements_size() const {
  return _internal_elements_size();
}
inline void InteractionOutputMappingList::clear_elements() {
  elements_.Clear();
}
inline ::ubii::sessions::InteractionOutputMapping* InteractionOutputMappingList::mutable_elements(int index) {
  // @@protoc_insertion_point(field_mutable:ubii.sessions.InteractionOutputMappingList.elements)
  return elements_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ubii::sessions::InteractionOutputMapping >*
InteractionOutputMappingList::mutable_elements() {
  // @@protoc_insertion_point(field_mutable_list:ubii.sessions.InteractionOutputMappingList.elements)
  return &elements_;
}
inline const ::ubii::sessions::InteractionOutputMapping& InteractionOutputMappingList::_internal_elements(int index) const {
  return elements_.Get(index);
}
inline const ::ubii::sessions::InteractionOutputMapping& InteractionOutputMappingList::elements(int index) const {
  // @@protoc_insertion_point(field_get:ubii.sessions.InteractionOutputMappingList.elements)
  return _internal_elements(index);
}
inline ::ubii::sessions::InteractionOutputMapping* InteractionOutputMappingList::_internal_add_elements() {
  return elements_.Add();
}
inline ::ubii::sessions::InteractionOutputMapping* InteractionOutputMappingList::add_elements() {
  // @@protoc_insertion_point(field_add:ubii.sessions.InteractionOutputMappingList.elements)
  return _internal_add_elements();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ubii::sessions::InteractionOutputMapping >&
InteractionOutputMappingList::elements() const {
  // @@protoc_insertion_point(field_list:ubii.sessions.InteractionOutputMappingList.elements)
  return elements_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace sessions
}  // namespace ubii

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_proto_2fsessions_2finteractionOutputMapping_2eproto
