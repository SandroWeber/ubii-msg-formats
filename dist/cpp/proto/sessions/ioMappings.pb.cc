// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/sessions/ioMappings.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "proto/sessions/ioMappings.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ubii {
namespace sessions {

namespace {

const ::google::protobuf::Descriptor* TopicInputMapping_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TopicInputMapping_reflection_ = NULL;
struct TopicInputMappingOneofInstance {
  ::google::protobuf::internal::ArenaStringPtr topic_;
  const ::ubii::devices::TopicMux* topic_mux_;
}* TopicInputMapping_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* TopicInputMappingList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TopicInputMappingList_reflection_ = NULL;
const ::google::protobuf::Descriptor* TopicOutputMapping_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TopicOutputMapping_reflection_ = NULL;
struct TopicOutputMappingOneofInstance {
  ::google::protobuf::internal::ArenaStringPtr topic_;
  const ::ubii::devices::TopicDemux* topic_demux_;
}* TopicOutputMapping_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* TopicOutputMappingList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TopicOutputMappingList_reflection_ = NULL;
const ::google::protobuf::Descriptor* IOMapping_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  IOMapping_reflection_ = NULL;
const ::google::protobuf::Descriptor* IOMappingList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  IOMappingList_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_proto_2fsessions_2fioMappings_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_proto_2fsessions_2fioMappings_2eproto() {
  protobuf_AddDesc_proto_2fsessions_2fioMappings_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "proto/sessions/ioMappings.proto");
  GOOGLE_CHECK(file != NULL);
  TopicInputMapping_descriptor_ = file->message_type(0);
  static const int TopicInputMapping_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInputMapping, input_name_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TopicInputMapping_default_oneof_instance_, topic_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TopicInputMapping_default_oneof_instance_, topic_mux_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInputMapping, topic_source_),
  };
  TopicInputMapping_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TopicInputMapping_descriptor_,
      TopicInputMapping::default_instance_,
      TopicInputMapping_offsets_,
      -1,
      -1,
      -1,
      TopicInputMapping_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInputMapping, _oneof_case_[0]),
      sizeof(TopicInputMapping),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInputMapping, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInputMapping, _is_default_instance_));
  TopicInputMappingList_descriptor_ = file->message_type(1);
  static const int TopicInputMappingList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInputMappingList, elements_),
  };
  TopicInputMappingList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TopicInputMappingList_descriptor_,
      TopicInputMappingList::default_instance_,
      TopicInputMappingList_offsets_,
      -1,
      -1,
      -1,
      sizeof(TopicInputMappingList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInputMappingList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicInputMappingList, _is_default_instance_));
  TopicOutputMapping_descriptor_ = file->message_type(2);
  static const int TopicOutputMapping_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicOutputMapping, output_name_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TopicOutputMapping_default_oneof_instance_, topic_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TopicOutputMapping_default_oneof_instance_, topic_demux_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicOutputMapping, topic_destination_),
  };
  TopicOutputMapping_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TopicOutputMapping_descriptor_,
      TopicOutputMapping::default_instance_,
      TopicOutputMapping_offsets_,
      -1,
      -1,
      -1,
      TopicOutputMapping_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicOutputMapping, _oneof_case_[0]),
      sizeof(TopicOutputMapping),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicOutputMapping, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicOutputMapping, _is_default_instance_));
  TopicOutputMappingList_descriptor_ = file->message_type(3);
  static const int TopicOutputMappingList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicOutputMappingList, elements_),
  };
  TopicOutputMappingList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TopicOutputMappingList_descriptor_,
      TopicOutputMappingList::default_instance_,
      TopicOutputMappingList_offsets_,
      -1,
      -1,
      -1,
      sizeof(TopicOutputMappingList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicOutputMappingList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicOutputMappingList, _is_default_instance_));
  IOMapping_descriptor_ = file->message_type(4);
  static const int IOMapping_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IOMapping, processing_module_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IOMapping, input_mappings_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IOMapping, output_mappings_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IOMapping, processing_module_name_),
  };
  IOMapping_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      IOMapping_descriptor_,
      IOMapping::default_instance_,
      IOMapping_offsets_,
      -1,
      -1,
      -1,
      sizeof(IOMapping),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IOMapping, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IOMapping, _is_default_instance_));
  IOMappingList_descriptor_ = file->message_type(5);
  static const int IOMappingList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IOMappingList, elements_),
  };
  IOMappingList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      IOMappingList_descriptor_,
      IOMappingList::default_instance_,
      IOMappingList_offsets_,
      -1,
      -1,
      -1,
      sizeof(IOMappingList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IOMappingList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IOMappingList, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_proto_2fsessions_2fioMappings_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TopicInputMapping_descriptor_, &TopicInputMapping::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TopicInputMappingList_descriptor_, &TopicInputMappingList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TopicOutputMapping_descriptor_, &TopicOutputMapping::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TopicOutputMappingList_descriptor_, &TopicOutputMappingList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      IOMapping_descriptor_, &IOMapping::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      IOMappingList_descriptor_, &IOMappingList::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_proto_2fsessions_2fioMappings_2eproto() {
  delete TopicInputMapping::default_instance_;
  delete TopicInputMapping_default_oneof_instance_;
  delete TopicInputMapping_reflection_;
  delete TopicInputMappingList::default_instance_;
  delete TopicInputMappingList_reflection_;
  delete TopicOutputMapping::default_instance_;
  delete TopicOutputMapping_default_oneof_instance_;
  delete TopicOutputMapping_reflection_;
  delete TopicOutputMappingList::default_instance_;
  delete TopicOutputMappingList_reflection_;
  delete IOMapping::default_instance_;
  delete IOMapping_reflection_;
  delete IOMappingList::default_instance_;
  delete IOMappingList_reflection_;
}

void protobuf_AddDesc_proto_2fsessions_2fioMappings_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_proto_2fsessions_2fioMappings_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::ubii::devices::protobuf_AddDesc_proto_2fdevices_2ftopicMux_2eproto();
  ::ubii::devices::protobuf_AddDesc_proto_2fdevices_2ftopicDemux_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\037proto/sessions/ioMappings.proto\022\rubii."
    "sessions\032\034proto/devices/topicMux.proto\032\036"
    "proto/devices/topicDemux.proto\"u\n\021TopicI"
    "nputMapping\022\022\n\ninput_name\030\001 \001(\t\022\017\n\005topic"
    "\030\002 \001(\tH\000\022+\n\ttopic_mux\030\003 \001(\0132\026.ubii.devic"
    "es.TopicMuxH\000B\016\n\014topic_source\"K\n\025TopicIn"
    "putMappingList\0222\n\010elements\030\001 \003(\0132 .ubii."
    "sessions.TopicInputMapping\"\200\001\n\022TopicOutp"
    "utMapping\022\023\n\013output_name\030\001 \001(\t\022\017\n\005topic\030"
    "\002 \001(\tH\000\022/\n\013topic_demux\030\003 \001(\0132\030.ubii.devi"
    "ces.TopicDemuxH\000B\023\n\021topic_destination\"M\n"
    "\026TopicOutputMappingList\0223\n\010elements\030\001 \003("
    "\0132!.ubii.sessions.TopicOutputMapping\"\277\001\n"
    "\tIOMapping\022\034\n\024processing_module_id\030\001 \001(\t"
    "\0228\n\016input_mappings\030\002 \003(\0132 .ubii.sessions"
    ".TopicInputMapping\022:\n\017output_mappings\030\003 "
    "\003(\0132!.ubii.sessions.TopicOutputMapping\022\036"
    "\n\026processing_module_name\030\004 \001(\t\";\n\rIOMapp"
    "ingList\022*\n\010elements\030\001 \003(\0132\030.ubii.session"
    "s.IOMappingb\006proto3", 779);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proto/sessions/ioMappings.proto", &protobuf_RegisterTypes);
  TopicInputMapping::default_instance_ = new TopicInputMapping();
  TopicInputMapping_default_oneof_instance_ = new TopicInputMappingOneofInstance();
  TopicInputMappingList::default_instance_ = new TopicInputMappingList();
  TopicOutputMapping::default_instance_ = new TopicOutputMapping();
  TopicOutputMapping_default_oneof_instance_ = new TopicOutputMappingOneofInstance();
  TopicOutputMappingList::default_instance_ = new TopicOutputMappingList();
  IOMapping::default_instance_ = new IOMapping();
  IOMappingList::default_instance_ = new IOMappingList();
  TopicInputMapping::default_instance_->InitAsDefaultInstance();
  TopicInputMappingList::default_instance_->InitAsDefaultInstance();
  TopicOutputMapping::default_instance_->InitAsDefaultInstance();
  TopicOutputMappingList::default_instance_->InitAsDefaultInstance();
  IOMapping::default_instance_->InitAsDefaultInstance();
  IOMappingList::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_proto_2fsessions_2fioMappings_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_proto_2fsessions_2fioMappings_2eproto {
  StaticDescriptorInitializer_proto_2fsessions_2fioMappings_2eproto() {
    protobuf_AddDesc_proto_2fsessions_2fioMappings_2eproto();
  }
} static_descriptor_initializer_proto_2fsessions_2fioMappings_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TopicInputMapping::kInputNameFieldNumber;
const int TopicInputMapping::kTopicFieldNumber;
const int TopicInputMapping::kTopicMuxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TopicInputMapping::TopicInputMapping()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ubii.sessions.TopicInputMapping)
}

void TopicInputMapping::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  TopicInputMapping_default_oneof_instance_->topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  TopicInputMapping_default_oneof_instance_->topic_mux_ = const_cast< ::ubii::devices::TopicMux*>(&::ubii::devices::TopicMux::default_instance());
}

TopicInputMapping::TopicInputMapping(const TopicInputMapping& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ubii.sessions.TopicInputMapping)
}

void TopicInputMapping::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  input_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_topic_source();
}

TopicInputMapping::~TopicInputMapping() {
  // @@protoc_insertion_point(destructor:ubii.sessions.TopicInputMapping)
  SharedDtor();
}

void TopicInputMapping::SharedDtor() {
  input_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_topic_source()) {
    clear_topic_source();
  }
  if (this != default_instance_) {
  }
}

void TopicInputMapping::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TopicInputMapping::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TopicInputMapping_descriptor_;
}

const TopicInputMapping& TopicInputMapping::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fsessions_2fioMappings_2eproto();
  return *default_instance_;
}

TopicInputMapping* TopicInputMapping::default_instance_ = NULL;

TopicInputMapping* TopicInputMapping::New(::google::protobuf::Arena* arena) const {
  TopicInputMapping* n = new TopicInputMapping;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TopicInputMapping::clear_topic_source() {
// @@protoc_insertion_point(one_of_clear_start:ubii.sessions.TopicInputMapping)
  switch(topic_source_case()) {
    case kTopic: {
      topic_source_.topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kTopicMux: {
      delete topic_source_.topic_mux_;
      break;
    }
    case TOPIC_SOURCE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TOPIC_SOURCE_NOT_SET;
}


void TopicInputMapping::Clear() {
// @@protoc_insertion_point(message_clear_start:ubii.sessions.TopicInputMapping)
  input_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_topic_source();
}

bool TopicInputMapping::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ubii.sessions.TopicInputMapping)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string input_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_input_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->input_name().data(), this->input_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.sessions.TopicInputMapping.input_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_topic;
        break;
      }

      // optional string topic = 2;
      case 2: {
        if (tag == 18) {
         parse_topic:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_topic()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->topic().data(), this->topic().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.sessions.TopicInputMapping.topic"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_topic_mux;
        break;
      }

      // optional .ubii.devices.TopicMux topic_mux = 3;
      case 3: {
        if (tag == 26) {
         parse_topic_mux:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_topic_mux()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ubii.sessions.TopicInputMapping)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ubii.sessions.TopicInputMapping)
  return false;
#undef DO_
}

void TopicInputMapping::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ubii.sessions.TopicInputMapping)
  // optional string input_name = 1;
  if (this->input_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->input_name().data(), this->input_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.sessions.TopicInputMapping.input_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->input_name(), output);
  }

  // optional string topic = 2;
  if (has_topic()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), this->topic().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.sessions.TopicInputMapping.topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->topic(), output);
  }

  // optional .ubii.devices.TopicMux topic_mux = 3;
  if (has_topic_mux()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *topic_source_.topic_mux_, output);
  }

  // @@protoc_insertion_point(serialize_end:ubii.sessions.TopicInputMapping)
}

::google::protobuf::uint8* TopicInputMapping::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ubii.sessions.TopicInputMapping)
  // optional string input_name = 1;
  if (this->input_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->input_name().data(), this->input_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.sessions.TopicInputMapping.input_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->input_name(), target);
  }

  // optional string topic = 2;
  if (has_topic()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), this->topic().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.sessions.TopicInputMapping.topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->topic(), target);
  }

  // optional .ubii.devices.TopicMux topic_mux = 3;
  if (has_topic_mux()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *topic_source_.topic_mux_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ubii.sessions.TopicInputMapping)
  return target;
}

int TopicInputMapping::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ubii.sessions.TopicInputMapping)
  int total_size = 0;

  // optional string input_name = 1;
  if (this->input_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->input_name());
  }

  switch (topic_source_case()) {
    // optional string topic = 2;
    case kTopic: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->topic());
      break;
    }
    // optional .ubii.devices.TopicMux topic_mux = 3;
    case kTopicMux: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *topic_source_.topic_mux_);
      break;
    }
    case TOPIC_SOURCE_NOT_SET: {
      break;
    }
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TopicInputMapping::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ubii.sessions.TopicInputMapping)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TopicInputMapping* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TopicInputMapping>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ubii.sessions.TopicInputMapping)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ubii.sessions.TopicInputMapping)
    MergeFrom(*source);
  }
}

void TopicInputMapping::MergeFrom(const TopicInputMapping& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ubii.sessions.TopicInputMapping)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  switch (from.topic_source_case()) {
    case kTopic: {
      set_topic(from.topic());
      break;
    }
    case kTopicMux: {
      mutable_topic_mux()->::ubii::devices::TopicMux::MergeFrom(from.topic_mux());
      break;
    }
    case TOPIC_SOURCE_NOT_SET: {
      break;
    }
  }
  if (from.input_name().size() > 0) {

    input_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_name_);
  }
}

void TopicInputMapping::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ubii.sessions.TopicInputMapping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopicInputMapping::CopyFrom(const TopicInputMapping& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ubii.sessions.TopicInputMapping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopicInputMapping::IsInitialized() const {

  return true;
}

void TopicInputMapping::Swap(TopicInputMapping* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TopicInputMapping::InternalSwap(TopicInputMapping* other) {
  input_name_.Swap(&other->input_name_);
  std::swap(topic_source_, other->topic_source_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TopicInputMapping::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TopicInputMapping_descriptor_;
  metadata.reflection = TopicInputMapping_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TopicInputMapping

// optional string input_name = 1;
void TopicInputMapping::clear_input_name() {
  input_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& TopicInputMapping::input_name() const {
  // @@protoc_insertion_point(field_get:ubii.sessions.TopicInputMapping.input_name)
  return input_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TopicInputMapping::set_input_name(const ::std::string& value) {
  
  input_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ubii.sessions.TopicInputMapping.input_name)
}
 void TopicInputMapping::set_input_name(const char* value) {
  
  input_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ubii.sessions.TopicInputMapping.input_name)
}
 void TopicInputMapping::set_input_name(const char* value, size_t size) {
  
  input_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ubii.sessions.TopicInputMapping.input_name)
}
 ::std::string* TopicInputMapping::mutable_input_name() {
  
  // @@protoc_insertion_point(field_mutable:ubii.sessions.TopicInputMapping.input_name)
  return input_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TopicInputMapping::release_input_name() {
  // @@protoc_insertion_point(field_release:ubii.sessions.TopicInputMapping.input_name)
  
  return input_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TopicInputMapping::set_allocated_input_name(::std::string* input_name) {
  if (input_name != NULL) {
    
  } else {
    
  }
  input_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), input_name);
  // @@protoc_insertion_point(field_set_allocated:ubii.sessions.TopicInputMapping.input_name)
}

// optional string topic = 2;
bool TopicInputMapping::has_topic() const {
  return topic_source_case() == kTopic;
}
void TopicInputMapping::set_has_topic() {
  _oneof_case_[0] = kTopic;
}
void TopicInputMapping::clear_topic() {
  if (has_topic()) {
    topic_source_.topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_topic_source();
  }
}
 const ::std::string& TopicInputMapping::topic() const {
  // @@protoc_insertion_point(field_get:ubii.sessions.TopicInputMapping.topic)
  if (has_topic()) {
    return topic_source_.topic_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
 void TopicInputMapping::set_topic(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ubii.sessions.TopicInputMapping.topic)
  if (!has_topic()) {
    clear_topic_source();
    set_has_topic();
    topic_source_.topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  topic_source_.topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ubii.sessions.TopicInputMapping.topic)
}
 void TopicInputMapping::set_topic(const char* value) {
  if (!has_topic()) {
    clear_topic_source();
    set_has_topic();
    topic_source_.topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  topic_source_.topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ubii.sessions.TopicInputMapping.topic)
}
 void TopicInputMapping::set_topic(const char* value, size_t size) {
  if (!has_topic()) {
    clear_topic_source();
    set_has_topic();
    topic_source_.topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  topic_source_.topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ubii.sessions.TopicInputMapping.topic)
}
 ::std::string* TopicInputMapping::mutable_topic() {
  if (!has_topic()) {
    clear_topic_source();
    set_has_topic();
    topic_source_.topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:ubii.sessions.TopicInputMapping.topic)
  return topic_source_.topic_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TopicInputMapping::release_topic() {
  // @@protoc_insertion_point(field_release:ubii.sessions.TopicInputMapping.topic)
  if (has_topic()) {
    clear_has_topic_source();
    return topic_source_.topic_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
 void TopicInputMapping::set_allocated_topic(::std::string* topic) {
  if (!has_topic()) {
    topic_source_.topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_topic_source();
  if (topic != NULL) {
    set_has_topic();
    topic_source_.topic_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        topic);
  }
  // @@protoc_insertion_point(field_set_allocated:ubii.sessions.TopicInputMapping.topic)
}

// optional .ubii.devices.TopicMux topic_mux = 3;
bool TopicInputMapping::has_topic_mux() const {
  return topic_source_case() == kTopicMux;
}
void TopicInputMapping::set_has_topic_mux() {
  _oneof_case_[0] = kTopicMux;
}
void TopicInputMapping::clear_topic_mux() {
  if (has_topic_mux()) {
    delete topic_source_.topic_mux_;
    clear_has_topic_source();
  }
}
 const ::ubii::devices::TopicMux& TopicInputMapping::topic_mux() const {
  // @@protoc_insertion_point(field_get:ubii.sessions.TopicInputMapping.topic_mux)
  return has_topic_mux()
      ? *topic_source_.topic_mux_
      : ::ubii::devices::TopicMux::default_instance();
}
::ubii::devices::TopicMux* TopicInputMapping::mutable_topic_mux() {
  if (!has_topic_mux()) {
    clear_topic_source();
    set_has_topic_mux();
    topic_source_.topic_mux_ = new ::ubii::devices::TopicMux;
  }
  // @@protoc_insertion_point(field_mutable:ubii.sessions.TopicInputMapping.topic_mux)
  return topic_source_.topic_mux_;
}
::ubii::devices::TopicMux* TopicInputMapping::release_topic_mux() {
  // @@protoc_insertion_point(field_release:ubii.sessions.TopicInputMapping.topic_mux)
  if (has_topic_mux()) {
    clear_has_topic_source();
    ::ubii::devices::TopicMux* temp = topic_source_.topic_mux_;
    topic_source_.topic_mux_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void TopicInputMapping::set_allocated_topic_mux(::ubii::devices::TopicMux* topic_mux) {
  clear_topic_source();
  if (topic_mux) {
    set_has_topic_mux();
    topic_source_.topic_mux_ = topic_mux;
  }
  // @@protoc_insertion_point(field_set_allocated:ubii.sessions.TopicInputMapping.topic_mux)
}

bool TopicInputMapping::has_topic_source() const {
  return topic_source_case() != TOPIC_SOURCE_NOT_SET;
}
void TopicInputMapping::clear_has_topic_source() {
  _oneof_case_[0] = TOPIC_SOURCE_NOT_SET;
}
TopicInputMapping::TopicSourceCase TopicInputMapping::topic_source_case() const {
  return TopicInputMapping::TopicSourceCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TopicInputMappingList::kElementsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TopicInputMappingList::TopicInputMappingList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ubii.sessions.TopicInputMappingList)
}

void TopicInputMappingList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

TopicInputMappingList::TopicInputMappingList(const TopicInputMappingList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ubii.sessions.TopicInputMappingList)
}

void TopicInputMappingList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

TopicInputMappingList::~TopicInputMappingList() {
  // @@protoc_insertion_point(destructor:ubii.sessions.TopicInputMappingList)
  SharedDtor();
}

void TopicInputMappingList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TopicInputMappingList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TopicInputMappingList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TopicInputMappingList_descriptor_;
}

const TopicInputMappingList& TopicInputMappingList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fsessions_2fioMappings_2eproto();
  return *default_instance_;
}

TopicInputMappingList* TopicInputMappingList::default_instance_ = NULL;

TopicInputMappingList* TopicInputMappingList::New(::google::protobuf::Arena* arena) const {
  TopicInputMappingList* n = new TopicInputMappingList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TopicInputMappingList::Clear() {
// @@protoc_insertion_point(message_clear_start:ubii.sessions.TopicInputMappingList)
  elements_.Clear();
}

bool TopicInputMappingList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ubii.sessions.TopicInputMappingList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ubii.sessions.TopicInputMapping elements = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_elements:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_elements()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_elements;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ubii.sessions.TopicInputMappingList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ubii.sessions.TopicInputMappingList)
  return false;
#undef DO_
}

void TopicInputMappingList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ubii.sessions.TopicInputMappingList)
  // repeated .ubii.sessions.TopicInputMapping elements = 1;
  for (unsigned int i = 0, n = this->elements_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->elements(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ubii.sessions.TopicInputMappingList)
}

::google::protobuf::uint8* TopicInputMappingList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ubii.sessions.TopicInputMappingList)
  // repeated .ubii.sessions.TopicInputMapping elements = 1;
  for (unsigned int i = 0, n = this->elements_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->elements(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ubii.sessions.TopicInputMappingList)
  return target;
}

int TopicInputMappingList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ubii.sessions.TopicInputMappingList)
  int total_size = 0;

  // repeated .ubii.sessions.TopicInputMapping elements = 1;
  total_size += 1 * this->elements_size();
  for (int i = 0; i < this->elements_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->elements(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TopicInputMappingList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ubii.sessions.TopicInputMappingList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TopicInputMappingList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TopicInputMappingList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ubii.sessions.TopicInputMappingList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ubii.sessions.TopicInputMappingList)
    MergeFrom(*source);
  }
}

void TopicInputMappingList::MergeFrom(const TopicInputMappingList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ubii.sessions.TopicInputMappingList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  elements_.MergeFrom(from.elements_);
}

void TopicInputMappingList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ubii.sessions.TopicInputMappingList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopicInputMappingList::CopyFrom(const TopicInputMappingList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ubii.sessions.TopicInputMappingList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopicInputMappingList::IsInitialized() const {

  return true;
}

void TopicInputMappingList::Swap(TopicInputMappingList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TopicInputMappingList::InternalSwap(TopicInputMappingList* other) {
  elements_.UnsafeArenaSwap(&other->elements_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TopicInputMappingList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TopicInputMappingList_descriptor_;
  metadata.reflection = TopicInputMappingList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TopicInputMappingList

// repeated .ubii.sessions.TopicInputMapping elements = 1;
int TopicInputMappingList::elements_size() const {
  return elements_.size();
}
void TopicInputMappingList::clear_elements() {
  elements_.Clear();
}
const ::ubii::sessions::TopicInputMapping& TopicInputMappingList::elements(int index) const {
  // @@protoc_insertion_point(field_get:ubii.sessions.TopicInputMappingList.elements)
  return elements_.Get(index);
}
::ubii::sessions::TopicInputMapping* TopicInputMappingList::mutable_elements(int index) {
  // @@protoc_insertion_point(field_mutable:ubii.sessions.TopicInputMappingList.elements)
  return elements_.Mutable(index);
}
::ubii::sessions::TopicInputMapping* TopicInputMappingList::add_elements() {
  // @@protoc_insertion_point(field_add:ubii.sessions.TopicInputMappingList.elements)
  return elements_.Add();
}
::google::protobuf::RepeatedPtrField< ::ubii::sessions::TopicInputMapping >*
TopicInputMappingList::mutable_elements() {
  // @@protoc_insertion_point(field_mutable_list:ubii.sessions.TopicInputMappingList.elements)
  return &elements_;
}
const ::google::protobuf::RepeatedPtrField< ::ubii::sessions::TopicInputMapping >&
TopicInputMappingList::elements() const {
  // @@protoc_insertion_point(field_list:ubii.sessions.TopicInputMappingList.elements)
  return elements_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TopicOutputMapping::kOutputNameFieldNumber;
const int TopicOutputMapping::kTopicFieldNumber;
const int TopicOutputMapping::kTopicDemuxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TopicOutputMapping::TopicOutputMapping()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ubii.sessions.TopicOutputMapping)
}

void TopicOutputMapping::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  TopicOutputMapping_default_oneof_instance_->topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  TopicOutputMapping_default_oneof_instance_->topic_demux_ = const_cast< ::ubii::devices::TopicDemux*>(&::ubii::devices::TopicDemux::default_instance());
}

TopicOutputMapping::TopicOutputMapping(const TopicOutputMapping& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ubii.sessions.TopicOutputMapping)
}

void TopicOutputMapping::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  output_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_topic_destination();
}

TopicOutputMapping::~TopicOutputMapping() {
  // @@protoc_insertion_point(destructor:ubii.sessions.TopicOutputMapping)
  SharedDtor();
}

void TopicOutputMapping::SharedDtor() {
  output_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_topic_destination()) {
    clear_topic_destination();
  }
  if (this != default_instance_) {
  }
}

void TopicOutputMapping::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TopicOutputMapping::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TopicOutputMapping_descriptor_;
}

const TopicOutputMapping& TopicOutputMapping::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fsessions_2fioMappings_2eproto();
  return *default_instance_;
}

TopicOutputMapping* TopicOutputMapping::default_instance_ = NULL;

TopicOutputMapping* TopicOutputMapping::New(::google::protobuf::Arena* arena) const {
  TopicOutputMapping* n = new TopicOutputMapping;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TopicOutputMapping::clear_topic_destination() {
// @@protoc_insertion_point(one_of_clear_start:ubii.sessions.TopicOutputMapping)
  switch(topic_destination_case()) {
    case kTopic: {
      topic_destination_.topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kTopicDemux: {
      delete topic_destination_.topic_demux_;
      break;
    }
    case TOPIC_DESTINATION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TOPIC_DESTINATION_NOT_SET;
}


void TopicOutputMapping::Clear() {
// @@protoc_insertion_point(message_clear_start:ubii.sessions.TopicOutputMapping)
  output_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_topic_destination();
}

bool TopicOutputMapping::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ubii.sessions.TopicOutputMapping)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string output_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_output_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->output_name().data(), this->output_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.sessions.TopicOutputMapping.output_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_topic;
        break;
      }

      // optional string topic = 2;
      case 2: {
        if (tag == 18) {
         parse_topic:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_topic()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->topic().data(), this->topic().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.sessions.TopicOutputMapping.topic"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_topic_demux;
        break;
      }

      // optional .ubii.devices.TopicDemux topic_demux = 3;
      case 3: {
        if (tag == 26) {
         parse_topic_demux:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_topic_demux()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ubii.sessions.TopicOutputMapping)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ubii.sessions.TopicOutputMapping)
  return false;
#undef DO_
}

void TopicOutputMapping::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ubii.sessions.TopicOutputMapping)
  // optional string output_name = 1;
  if (this->output_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->output_name().data(), this->output_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.sessions.TopicOutputMapping.output_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->output_name(), output);
  }

  // optional string topic = 2;
  if (has_topic()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), this->topic().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.sessions.TopicOutputMapping.topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->topic(), output);
  }

  // optional .ubii.devices.TopicDemux topic_demux = 3;
  if (has_topic_demux()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *topic_destination_.topic_demux_, output);
  }

  // @@protoc_insertion_point(serialize_end:ubii.sessions.TopicOutputMapping)
}

::google::protobuf::uint8* TopicOutputMapping::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ubii.sessions.TopicOutputMapping)
  // optional string output_name = 1;
  if (this->output_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->output_name().data(), this->output_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.sessions.TopicOutputMapping.output_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->output_name(), target);
  }

  // optional string topic = 2;
  if (has_topic()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), this->topic().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.sessions.TopicOutputMapping.topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->topic(), target);
  }

  // optional .ubii.devices.TopicDemux topic_demux = 3;
  if (has_topic_demux()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *topic_destination_.topic_demux_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ubii.sessions.TopicOutputMapping)
  return target;
}

int TopicOutputMapping::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ubii.sessions.TopicOutputMapping)
  int total_size = 0;

  // optional string output_name = 1;
  if (this->output_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->output_name());
  }

  switch (topic_destination_case()) {
    // optional string topic = 2;
    case kTopic: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->topic());
      break;
    }
    // optional .ubii.devices.TopicDemux topic_demux = 3;
    case kTopicDemux: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *topic_destination_.topic_demux_);
      break;
    }
    case TOPIC_DESTINATION_NOT_SET: {
      break;
    }
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TopicOutputMapping::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ubii.sessions.TopicOutputMapping)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TopicOutputMapping* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TopicOutputMapping>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ubii.sessions.TopicOutputMapping)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ubii.sessions.TopicOutputMapping)
    MergeFrom(*source);
  }
}

void TopicOutputMapping::MergeFrom(const TopicOutputMapping& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ubii.sessions.TopicOutputMapping)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  switch (from.topic_destination_case()) {
    case kTopic: {
      set_topic(from.topic());
      break;
    }
    case kTopicDemux: {
      mutable_topic_demux()->::ubii::devices::TopicDemux::MergeFrom(from.topic_demux());
      break;
    }
    case TOPIC_DESTINATION_NOT_SET: {
      break;
    }
  }
  if (from.output_name().size() > 0) {

    output_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_name_);
  }
}

void TopicOutputMapping::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ubii.sessions.TopicOutputMapping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopicOutputMapping::CopyFrom(const TopicOutputMapping& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ubii.sessions.TopicOutputMapping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopicOutputMapping::IsInitialized() const {

  return true;
}

void TopicOutputMapping::Swap(TopicOutputMapping* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TopicOutputMapping::InternalSwap(TopicOutputMapping* other) {
  output_name_.Swap(&other->output_name_);
  std::swap(topic_destination_, other->topic_destination_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TopicOutputMapping::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TopicOutputMapping_descriptor_;
  metadata.reflection = TopicOutputMapping_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TopicOutputMapping

// optional string output_name = 1;
void TopicOutputMapping::clear_output_name() {
  output_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& TopicOutputMapping::output_name() const {
  // @@protoc_insertion_point(field_get:ubii.sessions.TopicOutputMapping.output_name)
  return output_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TopicOutputMapping::set_output_name(const ::std::string& value) {
  
  output_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ubii.sessions.TopicOutputMapping.output_name)
}
 void TopicOutputMapping::set_output_name(const char* value) {
  
  output_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ubii.sessions.TopicOutputMapping.output_name)
}
 void TopicOutputMapping::set_output_name(const char* value, size_t size) {
  
  output_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ubii.sessions.TopicOutputMapping.output_name)
}
 ::std::string* TopicOutputMapping::mutable_output_name() {
  
  // @@protoc_insertion_point(field_mutable:ubii.sessions.TopicOutputMapping.output_name)
  return output_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TopicOutputMapping::release_output_name() {
  // @@protoc_insertion_point(field_release:ubii.sessions.TopicOutputMapping.output_name)
  
  return output_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TopicOutputMapping::set_allocated_output_name(::std::string* output_name) {
  if (output_name != NULL) {
    
  } else {
    
  }
  output_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), output_name);
  // @@protoc_insertion_point(field_set_allocated:ubii.sessions.TopicOutputMapping.output_name)
}

// optional string topic = 2;
bool TopicOutputMapping::has_topic() const {
  return topic_destination_case() == kTopic;
}
void TopicOutputMapping::set_has_topic() {
  _oneof_case_[0] = kTopic;
}
void TopicOutputMapping::clear_topic() {
  if (has_topic()) {
    topic_destination_.topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_topic_destination();
  }
}
 const ::std::string& TopicOutputMapping::topic() const {
  // @@protoc_insertion_point(field_get:ubii.sessions.TopicOutputMapping.topic)
  if (has_topic()) {
    return topic_destination_.topic_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
 void TopicOutputMapping::set_topic(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ubii.sessions.TopicOutputMapping.topic)
  if (!has_topic()) {
    clear_topic_destination();
    set_has_topic();
    topic_destination_.topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  topic_destination_.topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ubii.sessions.TopicOutputMapping.topic)
}
 void TopicOutputMapping::set_topic(const char* value) {
  if (!has_topic()) {
    clear_topic_destination();
    set_has_topic();
    topic_destination_.topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  topic_destination_.topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ubii.sessions.TopicOutputMapping.topic)
}
 void TopicOutputMapping::set_topic(const char* value, size_t size) {
  if (!has_topic()) {
    clear_topic_destination();
    set_has_topic();
    topic_destination_.topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  topic_destination_.topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ubii.sessions.TopicOutputMapping.topic)
}
 ::std::string* TopicOutputMapping::mutable_topic() {
  if (!has_topic()) {
    clear_topic_destination();
    set_has_topic();
    topic_destination_.topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:ubii.sessions.TopicOutputMapping.topic)
  return topic_destination_.topic_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TopicOutputMapping::release_topic() {
  // @@protoc_insertion_point(field_release:ubii.sessions.TopicOutputMapping.topic)
  if (has_topic()) {
    clear_has_topic_destination();
    return topic_destination_.topic_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
 void TopicOutputMapping::set_allocated_topic(::std::string* topic) {
  if (!has_topic()) {
    topic_destination_.topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_topic_destination();
  if (topic != NULL) {
    set_has_topic();
    topic_destination_.topic_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        topic);
  }
  // @@protoc_insertion_point(field_set_allocated:ubii.sessions.TopicOutputMapping.topic)
}

// optional .ubii.devices.TopicDemux topic_demux = 3;
bool TopicOutputMapping::has_topic_demux() const {
  return topic_destination_case() == kTopicDemux;
}
void TopicOutputMapping::set_has_topic_demux() {
  _oneof_case_[0] = kTopicDemux;
}
void TopicOutputMapping::clear_topic_demux() {
  if (has_topic_demux()) {
    delete topic_destination_.topic_demux_;
    clear_has_topic_destination();
  }
}
 const ::ubii::devices::TopicDemux& TopicOutputMapping::topic_demux() const {
  // @@protoc_insertion_point(field_get:ubii.sessions.TopicOutputMapping.topic_demux)
  return has_topic_demux()
      ? *topic_destination_.topic_demux_
      : ::ubii::devices::TopicDemux::default_instance();
}
::ubii::devices::TopicDemux* TopicOutputMapping::mutable_topic_demux() {
  if (!has_topic_demux()) {
    clear_topic_destination();
    set_has_topic_demux();
    topic_destination_.topic_demux_ = new ::ubii::devices::TopicDemux;
  }
  // @@protoc_insertion_point(field_mutable:ubii.sessions.TopicOutputMapping.topic_demux)
  return topic_destination_.topic_demux_;
}
::ubii::devices::TopicDemux* TopicOutputMapping::release_topic_demux() {
  // @@protoc_insertion_point(field_release:ubii.sessions.TopicOutputMapping.topic_demux)
  if (has_topic_demux()) {
    clear_has_topic_destination();
    ::ubii::devices::TopicDemux* temp = topic_destination_.topic_demux_;
    topic_destination_.topic_demux_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void TopicOutputMapping::set_allocated_topic_demux(::ubii::devices::TopicDemux* topic_demux) {
  clear_topic_destination();
  if (topic_demux) {
    set_has_topic_demux();
    topic_destination_.topic_demux_ = topic_demux;
  }
  // @@protoc_insertion_point(field_set_allocated:ubii.sessions.TopicOutputMapping.topic_demux)
}

bool TopicOutputMapping::has_topic_destination() const {
  return topic_destination_case() != TOPIC_DESTINATION_NOT_SET;
}
void TopicOutputMapping::clear_has_topic_destination() {
  _oneof_case_[0] = TOPIC_DESTINATION_NOT_SET;
}
TopicOutputMapping::TopicDestinationCase TopicOutputMapping::topic_destination_case() const {
  return TopicOutputMapping::TopicDestinationCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TopicOutputMappingList::kElementsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TopicOutputMappingList::TopicOutputMappingList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ubii.sessions.TopicOutputMappingList)
}

void TopicOutputMappingList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

TopicOutputMappingList::TopicOutputMappingList(const TopicOutputMappingList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ubii.sessions.TopicOutputMappingList)
}

void TopicOutputMappingList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

TopicOutputMappingList::~TopicOutputMappingList() {
  // @@protoc_insertion_point(destructor:ubii.sessions.TopicOutputMappingList)
  SharedDtor();
}

void TopicOutputMappingList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TopicOutputMappingList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TopicOutputMappingList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TopicOutputMappingList_descriptor_;
}

const TopicOutputMappingList& TopicOutputMappingList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fsessions_2fioMappings_2eproto();
  return *default_instance_;
}

TopicOutputMappingList* TopicOutputMappingList::default_instance_ = NULL;

TopicOutputMappingList* TopicOutputMappingList::New(::google::protobuf::Arena* arena) const {
  TopicOutputMappingList* n = new TopicOutputMappingList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TopicOutputMappingList::Clear() {
// @@protoc_insertion_point(message_clear_start:ubii.sessions.TopicOutputMappingList)
  elements_.Clear();
}

bool TopicOutputMappingList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ubii.sessions.TopicOutputMappingList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ubii.sessions.TopicOutputMapping elements = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_elements:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_elements()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_elements;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ubii.sessions.TopicOutputMappingList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ubii.sessions.TopicOutputMappingList)
  return false;
#undef DO_
}

void TopicOutputMappingList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ubii.sessions.TopicOutputMappingList)
  // repeated .ubii.sessions.TopicOutputMapping elements = 1;
  for (unsigned int i = 0, n = this->elements_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->elements(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ubii.sessions.TopicOutputMappingList)
}

::google::protobuf::uint8* TopicOutputMappingList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ubii.sessions.TopicOutputMappingList)
  // repeated .ubii.sessions.TopicOutputMapping elements = 1;
  for (unsigned int i = 0, n = this->elements_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->elements(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ubii.sessions.TopicOutputMappingList)
  return target;
}

int TopicOutputMappingList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ubii.sessions.TopicOutputMappingList)
  int total_size = 0;

  // repeated .ubii.sessions.TopicOutputMapping elements = 1;
  total_size += 1 * this->elements_size();
  for (int i = 0; i < this->elements_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->elements(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TopicOutputMappingList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ubii.sessions.TopicOutputMappingList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TopicOutputMappingList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TopicOutputMappingList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ubii.sessions.TopicOutputMappingList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ubii.sessions.TopicOutputMappingList)
    MergeFrom(*source);
  }
}

void TopicOutputMappingList::MergeFrom(const TopicOutputMappingList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ubii.sessions.TopicOutputMappingList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  elements_.MergeFrom(from.elements_);
}

void TopicOutputMappingList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ubii.sessions.TopicOutputMappingList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopicOutputMappingList::CopyFrom(const TopicOutputMappingList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ubii.sessions.TopicOutputMappingList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopicOutputMappingList::IsInitialized() const {

  return true;
}

void TopicOutputMappingList::Swap(TopicOutputMappingList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TopicOutputMappingList::InternalSwap(TopicOutputMappingList* other) {
  elements_.UnsafeArenaSwap(&other->elements_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TopicOutputMappingList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TopicOutputMappingList_descriptor_;
  metadata.reflection = TopicOutputMappingList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TopicOutputMappingList

// repeated .ubii.sessions.TopicOutputMapping elements = 1;
int TopicOutputMappingList::elements_size() const {
  return elements_.size();
}
void TopicOutputMappingList::clear_elements() {
  elements_.Clear();
}
const ::ubii::sessions::TopicOutputMapping& TopicOutputMappingList::elements(int index) const {
  // @@protoc_insertion_point(field_get:ubii.sessions.TopicOutputMappingList.elements)
  return elements_.Get(index);
}
::ubii::sessions::TopicOutputMapping* TopicOutputMappingList::mutable_elements(int index) {
  // @@protoc_insertion_point(field_mutable:ubii.sessions.TopicOutputMappingList.elements)
  return elements_.Mutable(index);
}
::ubii::sessions::TopicOutputMapping* TopicOutputMappingList::add_elements() {
  // @@protoc_insertion_point(field_add:ubii.sessions.TopicOutputMappingList.elements)
  return elements_.Add();
}
::google::protobuf::RepeatedPtrField< ::ubii::sessions::TopicOutputMapping >*
TopicOutputMappingList::mutable_elements() {
  // @@protoc_insertion_point(field_mutable_list:ubii.sessions.TopicOutputMappingList.elements)
  return &elements_;
}
const ::google::protobuf::RepeatedPtrField< ::ubii::sessions::TopicOutputMapping >&
TopicOutputMappingList::elements() const {
  // @@protoc_insertion_point(field_list:ubii.sessions.TopicOutputMappingList.elements)
  return elements_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IOMapping::kProcessingModuleIdFieldNumber;
const int IOMapping::kInputMappingsFieldNumber;
const int IOMapping::kOutputMappingsFieldNumber;
const int IOMapping::kProcessingModuleNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IOMapping::IOMapping()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ubii.sessions.IOMapping)
}

void IOMapping::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

IOMapping::IOMapping(const IOMapping& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ubii.sessions.IOMapping)
}

void IOMapping::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  processing_module_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  processing_module_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

IOMapping::~IOMapping() {
  // @@protoc_insertion_point(destructor:ubii.sessions.IOMapping)
  SharedDtor();
}

void IOMapping::SharedDtor() {
  processing_module_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  processing_module_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void IOMapping::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IOMapping::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IOMapping_descriptor_;
}

const IOMapping& IOMapping::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fsessions_2fioMappings_2eproto();
  return *default_instance_;
}

IOMapping* IOMapping::default_instance_ = NULL;

IOMapping* IOMapping::New(::google::protobuf::Arena* arena) const {
  IOMapping* n = new IOMapping;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IOMapping::Clear() {
// @@protoc_insertion_point(message_clear_start:ubii.sessions.IOMapping)
  processing_module_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  processing_module_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_mappings_.Clear();
  output_mappings_.Clear();
}

bool IOMapping::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ubii.sessions.IOMapping)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string processing_module_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_processing_module_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->processing_module_id().data(), this->processing_module_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.sessions.IOMapping.processing_module_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_input_mappings;
        break;
      }

      // repeated .ubii.sessions.TopicInputMapping input_mappings = 2;
      case 2: {
        if (tag == 18) {
         parse_input_mappings:
          DO_(input->IncrementRecursionDepth());
         parse_loop_input_mappings:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_input_mappings()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_input_mappings;
        if (input->ExpectTag(26)) goto parse_loop_output_mappings;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .ubii.sessions.TopicOutputMapping output_mappings = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_output_mappings:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_output_mappings()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_output_mappings;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(34)) goto parse_processing_module_name;
        break;
      }

      // optional string processing_module_name = 4;
      case 4: {
        if (tag == 34) {
         parse_processing_module_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_processing_module_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->processing_module_name().data(), this->processing_module_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.sessions.IOMapping.processing_module_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ubii.sessions.IOMapping)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ubii.sessions.IOMapping)
  return false;
#undef DO_
}

void IOMapping::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ubii.sessions.IOMapping)
  // optional string processing_module_id = 1;
  if (this->processing_module_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->processing_module_id().data(), this->processing_module_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.sessions.IOMapping.processing_module_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->processing_module_id(), output);
  }

  // repeated .ubii.sessions.TopicInputMapping input_mappings = 2;
  for (unsigned int i = 0, n = this->input_mappings_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->input_mappings(i), output);
  }

  // repeated .ubii.sessions.TopicOutputMapping output_mappings = 3;
  for (unsigned int i = 0, n = this->output_mappings_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->output_mappings(i), output);
  }

  // optional string processing_module_name = 4;
  if (this->processing_module_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->processing_module_name().data(), this->processing_module_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.sessions.IOMapping.processing_module_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->processing_module_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:ubii.sessions.IOMapping)
}

::google::protobuf::uint8* IOMapping::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ubii.sessions.IOMapping)
  // optional string processing_module_id = 1;
  if (this->processing_module_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->processing_module_id().data(), this->processing_module_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.sessions.IOMapping.processing_module_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->processing_module_id(), target);
  }

  // repeated .ubii.sessions.TopicInputMapping input_mappings = 2;
  for (unsigned int i = 0, n = this->input_mappings_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->input_mappings(i), false, target);
  }

  // repeated .ubii.sessions.TopicOutputMapping output_mappings = 3;
  for (unsigned int i = 0, n = this->output_mappings_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->output_mappings(i), false, target);
  }

  // optional string processing_module_name = 4;
  if (this->processing_module_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->processing_module_name().data(), this->processing_module_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.sessions.IOMapping.processing_module_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->processing_module_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ubii.sessions.IOMapping)
  return target;
}

int IOMapping::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ubii.sessions.IOMapping)
  int total_size = 0;

  // optional string processing_module_id = 1;
  if (this->processing_module_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->processing_module_id());
  }

  // optional string processing_module_name = 4;
  if (this->processing_module_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->processing_module_name());
  }

  // repeated .ubii.sessions.TopicInputMapping input_mappings = 2;
  total_size += 1 * this->input_mappings_size();
  for (int i = 0; i < this->input_mappings_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->input_mappings(i));
  }

  // repeated .ubii.sessions.TopicOutputMapping output_mappings = 3;
  total_size += 1 * this->output_mappings_size();
  for (int i = 0; i < this->output_mappings_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->output_mappings(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IOMapping::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ubii.sessions.IOMapping)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const IOMapping* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const IOMapping>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ubii.sessions.IOMapping)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ubii.sessions.IOMapping)
    MergeFrom(*source);
  }
}

void IOMapping::MergeFrom(const IOMapping& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ubii.sessions.IOMapping)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  input_mappings_.MergeFrom(from.input_mappings_);
  output_mappings_.MergeFrom(from.output_mappings_);
  if (from.processing_module_id().size() > 0) {

    processing_module_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.processing_module_id_);
  }
  if (from.processing_module_name().size() > 0) {

    processing_module_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.processing_module_name_);
  }
}

void IOMapping::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ubii.sessions.IOMapping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IOMapping::CopyFrom(const IOMapping& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ubii.sessions.IOMapping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IOMapping::IsInitialized() const {

  return true;
}

void IOMapping::Swap(IOMapping* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IOMapping::InternalSwap(IOMapping* other) {
  processing_module_id_.Swap(&other->processing_module_id_);
  input_mappings_.UnsafeArenaSwap(&other->input_mappings_);
  output_mappings_.UnsafeArenaSwap(&other->output_mappings_);
  processing_module_name_.Swap(&other->processing_module_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IOMapping::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = IOMapping_descriptor_;
  metadata.reflection = IOMapping_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IOMapping

// optional string processing_module_id = 1;
void IOMapping::clear_processing_module_id() {
  processing_module_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& IOMapping::processing_module_id() const {
  // @@protoc_insertion_point(field_get:ubii.sessions.IOMapping.processing_module_id)
  return processing_module_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void IOMapping::set_processing_module_id(const ::std::string& value) {
  
  processing_module_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ubii.sessions.IOMapping.processing_module_id)
}
 void IOMapping::set_processing_module_id(const char* value) {
  
  processing_module_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ubii.sessions.IOMapping.processing_module_id)
}
 void IOMapping::set_processing_module_id(const char* value, size_t size) {
  
  processing_module_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ubii.sessions.IOMapping.processing_module_id)
}
 ::std::string* IOMapping::mutable_processing_module_id() {
  
  // @@protoc_insertion_point(field_mutable:ubii.sessions.IOMapping.processing_module_id)
  return processing_module_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* IOMapping::release_processing_module_id() {
  // @@protoc_insertion_point(field_release:ubii.sessions.IOMapping.processing_module_id)
  
  return processing_module_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void IOMapping::set_allocated_processing_module_id(::std::string* processing_module_id) {
  if (processing_module_id != NULL) {
    
  } else {
    
  }
  processing_module_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), processing_module_id);
  // @@protoc_insertion_point(field_set_allocated:ubii.sessions.IOMapping.processing_module_id)
}

// repeated .ubii.sessions.TopicInputMapping input_mappings = 2;
int IOMapping::input_mappings_size() const {
  return input_mappings_.size();
}
void IOMapping::clear_input_mappings() {
  input_mappings_.Clear();
}
const ::ubii::sessions::TopicInputMapping& IOMapping::input_mappings(int index) const {
  // @@protoc_insertion_point(field_get:ubii.sessions.IOMapping.input_mappings)
  return input_mappings_.Get(index);
}
::ubii::sessions::TopicInputMapping* IOMapping::mutable_input_mappings(int index) {
  // @@protoc_insertion_point(field_mutable:ubii.sessions.IOMapping.input_mappings)
  return input_mappings_.Mutable(index);
}
::ubii::sessions::TopicInputMapping* IOMapping::add_input_mappings() {
  // @@protoc_insertion_point(field_add:ubii.sessions.IOMapping.input_mappings)
  return input_mappings_.Add();
}
::google::protobuf::RepeatedPtrField< ::ubii::sessions::TopicInputMapping >*
IOMapping::mutable_input_mappings() {
  // @@protoc_insertion_point(field_mutable_list:ubii.sessions.IOMapping.input_mappings)
  return &input_mappings_;
}
const ::google::protobuf::RepeatedPtrField< ::ubii::sessions::TopicInputMapping >&
IOMapping::input_mappings() const {
  // @@protoc_insertion_point(field_list:ubii.sessions.IOMapping.input_mappings)
  return input_mappings_;
}

// repeated .ubii.sessions.TopicOutputMapping output_mappings = 3;
int IOMapping::output_mappings_size() const {
  return output_mappings_.size();
}
void IOMapping::clear_output_mappings() {
  output_mappings_.Clear();
}
const ::ubii::sessions::TopicOutputMapping& IOMapping::output_mappings(int index) const {
  // @@protoc_insertion_point(field_get:ubii.sessions.IOMapping.output_mappings)
  return output_mappings_.Get(index);
}
::ubii::sessions::TopicOutputMapping* IOMapping::mutable_output_mappings(int index) {
  // @@protoc_insertion_point(field_mutable:ubii.sessions.IOMapping.output_mappings)
  return output_mappings_.Mutable(index);
}
::ubii::sessions::TopicOutputMapping* IOMapping::add_output_mappings() {
  // @@protoc_insertion_point(field_add:ubii.sessions.IOMapping.output_mappings)
  return output_mappings_.Add();
}
::google::protobuf::RepeatedPtrField< ::ubii::sessions::TopicOutputMapping >*
IOMapping::mutable_output_mappings() {
  // @@protoc_insertion_point(field_mutable_list:ubii.sessions.IOMapping.output_mappings)
  return &output_mappings_;
}
const ::google::protobuf::RepeatedPtrField< ::ubii::sessions::TopicOutputMapping >&
IOMapping::output_mappings() const {
  // @@protoc_insertion_point(field_list:ubii.sessions.IOMapping.output_mappings)
  return output_mappings_;
}

// optional string processing_module_name = 4;
void IOMapping::clear_processing_module_name() {
  processing_module_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& IOMapping::processing_module_name() const {
  // @@protoc_insertion_point(field_get:ubii.sessions.IOMapping.processing_module_name)
  return processing_module_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void IOMapping::set_processing_module_name(const ::std::string& value) {
  
  processing_module_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ubii.sessions.IOMapping.processing_module_name)
}
 void IOMapping::set_processing_module_name(const char* value) {
  
  processing_module_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ubii.sessions.IOMapping.processing_module_name)
}
 void IOMapping::set_processing_module_name(const char* value, size_t size) {
  
  processing_module_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ubii.sessions.IOMapping.processing_module_name)
}
 ::std::string* IOMapping::mutable_processing_module_name() {
  
  // @@protoc_insertion_point(field_mutable:ubii.sessions.IOMapping.processing_module_name)
  return processing_module_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* IOMapping::release_processing_module_name() {
  // @@protoc_insertion_point(field_release:ubii.sessions.IOMapping.processing_module_name)
  
  return processing_module_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void IOMapping::set_allocated_processing_module_name(::std::string* processing_module_name) {
  if (processing_module_name != NULL) {
    
  } else {
    
  }
  processing_module_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), processing_module_name);
  // @@protoc_insertion_point(field_set_allocated:ubii.sessions.IOMapping.processing_module_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IOMappingList::kElementsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IOMappingList::IOMappingList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ubii.sessions.IOMappingList)
}

void IOMappingList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

IOMappingList::IOMappingList(const IOMappingList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ubii.sessions.IOMappingList)
}

void IOMappingList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

IOMappingList::~IOMappingList() {
  // @@protoc_insertion_point(destructor:ubii.sessions.IOMappingList)
  SharedDtor();
}

void IOMappingList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void IOMappingList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IOMappingList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IOMappingList_descriptor_;
}

const IOMappingList& IOMappingList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fsessions_2fioMappings_2eproto();
  return *default_instance_;
}

IOMappingList* IOMappingList::default_instance_ = NULL;

IOMappingList* IOMappingList::New(::google::protobuf::Arena* arena) const {
  IOMappingList* n = new IOMappingList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IOMappingList::Clear() {
// @@protoc_insertion_point(message_clear_start:ubii.sessions.IOMappingList)
  elements_.Clear();
}

bool IOMappingList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ubii.sessions.IOMappingList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ubii.sessions.IOMapping elements = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_elements:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_elements()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_elements;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ubii.sessions.IOMappingList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ubii.sessions.IOMappingList)
  return false;
#undef DO_
}

void IOMappingList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ubii.sessions.IOMappingList)
  // repeated .ubii.sessions.IOMapping elements = 1;
  for (unsigned int i = 0, n = this->elements_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->elements(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ubii.sessions.IOMappingList)
}

::google::protobuf::uint8* IOMappingList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ubii.sessions.IOMappingList)
  // repeated .ubii.sessions.IOMapping elements = 1;
  for (unsigned int i = 0, n = this->elements_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->elements(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ubii.sessions.IOMappingList)
  return target;
}

int IOMappingList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ubii.sessions.IOMappingList)
  int total_size = 0;

  // repeated .ubii.sessions.IOMapping elements = 1;
  total_size += 1 * this->elements_size();
  for (int i = 0; i < this->elements_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->elements(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IOMappingList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ubii.sessions.IOMappingList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const IOMappingList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const IOMappingList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ubii.sessions.IOMappingList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ubii.sessions.IOMappingList)
    MergeFrom(*source);
  }
}

void IOMappingList::MergeFrom(const IOMappingList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ubii.sessions.IOMappingList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  elements_.MergeFrom(from.elements_);
}

void IOMappingList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ubii.sessions.IOMappingList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IOMappingList::CopyFrom(const IOMappingList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ubii.sessions.IOMappingList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IOMappingList::IsInitialized() const {

  return true;
}

void IOMappingList::Swap(IOMappingList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IOMappingList::InternalSwap(IOMappingList* other) {
  elements_.UnsafeArenaSwap(&other->elements_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IOMappingList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = IOMappingList_descriptor_;
  metadata.reflection = IOMappingList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IOMappingList

// repeated .ubii.sessions.IOMapping elements = 1;
int IOMappingList::elements_size() const {
  return elements_.size();
}
void IOMappingList::clear_elements() {
  elements_.Clear();
}
const ::ubii::sessions::IOMapping& IOMappingList::elements(int index) const {
  // @@protoc_insertion_point(field_get:ubii.sessions.IOMappingList.elements)
  return elements_.Get(index);
}
::ubii::sessions::IOMapping* IOMappingList::mutable_elements(int index) {
  // @@protoc_insertion_point(field_mutable:ubii.sessions.IOMappingList.elements)
  return elements_.Mutable(index);
}
::ubii::sessions::IOMapping* IOMappingList::add_elements() {
  // @@protoc_insertion_point(field_add:ubii.sessions.IOMappingList.elements)
  return elements_.Add();
}
::google::protobuf::RepeatedPtrField< ::ubii::sessions::IOMapping >*
IOMappingList::mutable_elements() {
  // @@protoc_insertion_point(field_mutable_list:ubii.sessions.IOMappingList.elements)
  return &elements_;
}
const ::google::protobuf::RepeatedPtrField< ::ubii::sessions::IOMapping >&
IOMappingList::elements() const {
  // @@protoc_insertion_point(field_list:ubii.sessions.IOMappingList.elements)
  return elements_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace sessions
}  // namespace ubii

// @@protoc_insertion_point(global_scope)
