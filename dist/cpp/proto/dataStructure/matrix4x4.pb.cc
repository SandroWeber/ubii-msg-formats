// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/dataStructure/matrix4x4.proto

#include "proto/dataStructure/matrix4x4.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace ubii {
namespace dataStructure {
class Matrix4x4DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Matrix4x4> _instance;
} _Matrix4x4_default_instance_;
}  // namespace dataStructure
}  // namespace ubii
static void InitDefaultsscc_info_Matrix4x4_proto_2fdataStructure_2fmatrix4x4_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ubii::dataStructure::_Matrix4x4_default_instance_;
    new (ptr) ::ubii::dataStructure::Matrix4x4();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ubii::dataStructure::Matrix4x4::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Matrix4x4_proto_2fdataStructure_2fmatrix4x4_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Matrix4x4_proto_2fdataStructure_2fmatrix4x4_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_proto_2fdataStructure_2fmatrix4x4_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_proto_2fdataStructure_2fmatrix4x4_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_proto_2fdataStructure_2fmatrix4x4_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_proto_2fdataStructure_2fmatrix4x4_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ubii::dataStructure::Matrix4x4, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ubii::dataStructure::Matrix4x4, m00_),
  PROTOBUF_FIELD_OFFSET(::ubii::dataStructure::Matrix4x4, m01_),
  PROTOBUF_FIELD_OFFSET(::ubii::dataStructure::Matrix4x4, m02_),
  PROTOBUF_FIELD_OFFSET(::ubii::dataStructure::Matrix4x4, m03_),
  PROTOBUF_FIELD_OFFSET(::ubii::dataStructure::Matrix4x4, m10_),
  PROTOBUF_FIELD_OFFSET(::ubii::dataStructure::Matrix4x4, m11_),
  PROTOBUF_FIELD_OFFSET(::ubii::dataStructure::Matrix4x4, m12_),
  PROTOBUF_FIELD_OFFSET(::ubii::dataStructure::Matrix4x4, m13_),
  PROTOBUF_FIELD_OFFSET(::ubii::dataStructure::Matrix4x4, m20_),
  PROTOBUF_FIELD_OFFSET(::ubii::dataStructure::Matrix4x4, m21_),
  PROTOBUF_FIELD_OFFSET(::ubii::dataStructure::Matrix4x4, m22_),
  PROTOBUF_FIELD_OFFSET(::ubii::dataStructure::Matrix4x4, m23_),
  PROTOBUF_FIELD_OFFSET(::ubii::dataStructure::Matrix4x4, m30_),
  PROTOBUF_FIELD_OFFSET(::ubii::dataStructure::Matrix4x4, m31_),
  PROTOBUF_FIELD_OFFSET(::ubii::dataStructure::Matrix4x4, m32_),
  PROTOBUF_FIELD_OFFSET(::ubii::dataStructure::Matrix4x4, m33_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ubii::dataStructure::Matrix4x4)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ubii::dataStructure::_Matrix4x4_default_instance_),
};

const char descriptor_table_protodef_proto_2fdataStructure_2fmatrix4x4_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n#proto/dataStructure/matrix4x4.proto\022\022u"
  "bii.dataStructure\"\333\001\n\tMatrix4x4\022\013\n\003m00\030\001"
  " \001(\001\022\013\n\003m01\030\002 \001(\001\022\013\n\003m02\030\003 \001(\001\022\013\n\003m03\030\004 "
  "\001(\001\022\013\n\003m10\030\005 \001(\001\022\013\n\003m11\030\006 \001(\001\022\013\n\003m12\030\007 \001"
  "(\001\022\013\n\003m13\030\010 \001(\001\022\013\n\003m20\030\t \001(\001\022\013\n\003m21\030\n \001("
  "\001\022\013\n\003m22\030\013 \001(\001\022\013\n\003m23\030\014 \001(\001\022\013\n\003m30\030\r \001(\001"
  "\022\013\n\003m31\030\016 \001(\001\022\013\n\003m32\030\017 \001(\001\022\013\n\003m33\030\020 \001(\001b"
  "\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_proto_2fdataStructure_2fmatrix4x4_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_proto_2fdataStructure_2fmatrix4x4_2eproto_sccs[1] = {
  &scc_info_Matrix4x4_proto_2fdataStructure_2fmatrix4x4_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_proto_2fdataStructure_2fmatrix4x4_2eproto_once;
static bool descriptor_table_proto_2fdataStructure_2fmatrix4x4_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_2fdataStructure_2fmatrix4x4_2eproto = {
  &descriptor_table_proto_2fdataStructure_2fmatrix4x4_2eproto_initialized, descriptor_table_protodef_proto_2fdataStructure_2fmatrix4x4_2eproto, "proto/dataStructure/matrix4x4.proto", 287,
  &descriptor_table_proto_2fdataStructure_2fmatrix4x4_2eproto_once, descriptor_table_proto_2fdataStructure_2fmatrix4x4_2eproto_sccs, descriptor_table_proto_2fdataStructure_2fmatrix4x4_2eproto_deps, 1, 0,
  schemas, file_default_instances, TableStruct_proto_2fdataStructure_2fmatrix4x4_2eproto::offsets,
  file_level_metadata_proto_2fdataStructure_2fmatrix4x4_2eproto, 1, file_level_enum_descriptors_proto_2fdataStructure_2fmatrix4x4_2eproto, file_level_service_descriptors_proto_2fdataStructure_2fmatrix4x4_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_proto_2fdataStructure_2fmatrix4x4_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_proto_2fdataStructure_2fmatrix4x4_2eproto), true);
namespace ubii {
namespace dataStructure {

// ===================================================================

void Matrix4x4::InitAsDefaultInstance() {
}
class Matrix4x4::_Internal {
 public:
};

Matrix4x4::Matrix4x4()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ubii.dataStructure.Matrix4x4)
}
Matrix4x4::Matrix4x4(const Matrix4x4& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&m00_, &from.m00_,
    static_cast<size_t>(reinterpret_cast<char*>(&m33_) -
    reinterpret_cast<char*>(&m00_)) + sizeof(m33_));
  // @@protoc_insertion_point(copy_constructor:ubii.dataStructure.Matrix4x4)
}

void Matrix4x4::SharedCtor() {
  ::memset(&m00_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&m33_) -
      reinterpret_cast<char*>(&m00_)) + sizeof(m33_));
}

Matrix4x4::~Matrix4x4() {
  // @@protoc_insertion_point(destructor:ubii.dataStructure.Matrix4x4)
  SharedDtor();
}

void Matrix4x4::SharedDtor() {
}

void Matrix4x4::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Matrix4x4& Matrix4x4::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Matrix4x4_proto_2fdataStructure_2fmatrix4x4_2eproto.base);
  return *internal_default_instance();
}


void Matrix4x4::Clear() {
// @@protoc_insertion_point(message_clear_start:ubii.dataStructure.Matrix4x4)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&m00_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&m33_) -
      reinterpret_cast<char*>(&m00_)) + sizeof(m33_));
  _internal_metadata_.Clear();
}

const char* Matrix4x4::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // double m00 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          m00_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double m01 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          m01_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double m02 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          m02_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double m03 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          m03_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double m10 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 41)) {
          m10_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double m11 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 49)) {
          m11_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double m12 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 57)) {
          m12_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double m13 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 65)) {
          m13_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double m20 = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 73)) {
          m20_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double m21 = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 81)) {
          m21_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double m22 = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 89)) {
          m22_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double m23 = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 97)) {
          m23_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double m30 = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 105)) {
          m30_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double m31 = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 113)) {
          m31_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double m32 = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 121)) {
          m32_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double m33 = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 129)) {
          m33_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Matrix4x4::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ubii.dataStructure.Matrix4x4)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double m00 = 1;
  if (!(this->m00() <= 0 && this->m00() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_m00(), target);
  }

  // double m01 = 2;
  if (!(this->m01() <= 0 && this->m01() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_m01(), target);
  }

  // double m02 = 3;
  if (!(this->m02() <= 0 && this->m02() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_m02(), target);
  }

  // double m03 = 4;
  if (!(this->m03() <= 0 && this->m03() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_m03(), target);
  }

  // double m10 = 5;
  if (!(this->m10() <= 0 && this->m10() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(5, this->_internal_m10(), target);
  }

  // double m11 = 6;
  if (!(this->m11() <= 0 && this->m11() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(6, this->_internal_m11(), target);
  }

  // double m12 = 7;
  if (!(this->m12() <= 0 && this->m12() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(7, this->_internal_m12(), target);
  }

  // double m13 = 8;
  if (!(this->m13() <= 0 && this->m13() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(8, this->_internal_m13(), target);
  }

  // double m20 = 9;
  if (!(this->m20() <= 0 && this->m20() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(9, this->_internal_m20(), target);
  }

  // double m21 = 10;
  if (!(this->m21() <= 0 && this->m21() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(10, this->_internal_m21(), target);
  }

  // double m22 = 11;
  if (!(this->m22() <= 0 && this->m22() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(11, this->_internal_m22(), target);
  }

  // double m23 = 12;
  if (!(this->m23() <= 0 && this->m23() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(12, this->_internal_m23(), target);
  }

  // double m30 = 13;
  if (!(this->m30() <= 0 && this->m30() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(13, this->_internal_m30(), target);
  }

  // double m31 = 14;
  if (!(this->m31() <= 0 && this->m31() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(14, this->_internal_m31(), target);
  }

  // double m32 = 15;
  if (!(this->m32() <= 0 && this->m32() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(15, this->_internal_m32(), target);
  }

  // double m33 = 16;
  if (!(this->m33() <= 0 && this->m33() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(16, this->_internal_m33(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ubii.dataStructure.Matrix4x4)
  return target;
}

size_t Matrix4x4::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ubii.dataStructure.Matrix4x4)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double m00 = 1;
  if (!(this->m00() <= 0 && this->m00() >= 0)) {
    total_size += 1 + 8;
  }

  // double m01 = 2;
  if (!(this->m01() <= 0 && this->m01() >= 0)) {
    total_size += 1 + 8;
  }

  // double m02 = 3;
  if (!(this->m02() <= 0 && this->m02() >= 0)) {
    total_size += 1 + 8;
  }

  // double m03 = 4;
  if (!(this->m03() <= 0 && this->m03() >= 0)) {
    total_size += 1 + 8;
  }

  // double m10 = 5;
  if (!(this->m10() <= 0 && this->m10() >= 0)) {
    total_size += 1 + 8;
  }

  // double m11 = 6;
  if (!(this->m11() <= 0 && this->m11() >= 0)) {
    total_size += 1 + 8;
  }

  // double m12 = 7;
  if (!(this->m12() <= 0 && this->m12() >= 0)) {
    total_size += 1 + 8;
  }

  // double m13 = 8;
  if (!(this->m13() <= 0 && this->m13() >= 0)) {
    total_size += 1 + 8;
  }

  // double m20 = 9;
  if (!(this->m20() <= 0 && this->m20() >= 0)) {
    total_size += 1 + 8;
  }

  // double m21 = 10;
  if (!(this->m21() <= 0 && this->m21() >= 0)) {
    total_size += 1 + 8;
  }

  // double m22 = 11;
  if (!(this->m22() <= 0 && this->m22() >= 0)) {
    total_size += 1 + 8;
  }

  // double m23 = 12;
  if (!(this->m23() <= 0 && this->m23() >= 0)) {
    total_size += 1 + 8;
  }

  // double m30 = 13;
  if (!(this->m30() <= 0 && this->m30() >= 0)) {
    total_size += 1 + 8;
  }

  // double m31 = 14;
  if (!(this->m31() <= 0 && this->m31() >= 0)) {
    total_size += 1 + 8;
  }

  // double m32 = 15;
  if (!(this->m32() <= 0 && this->m32() >= 0)) {
    total_size += 1 + 8;
  }

  // double m33 = 16;
  if (!(this->m33() <= 0 && this->m33() >= 0)) {
    total_size += 2 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Matrix4x4::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ubii.dataStructure.Matrix4x4)
  GOOGLE_DCHECK_NE(&from, this);
  const Matrix4x4* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Matrix4x4>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ubii.dataStructure.Matrix4x4)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ubii.dataStructure.Matrix4x4)
    MergeFrom(*source);
  }
}

void Matrix4x4::MergeFrom(const Matrix4x4& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ubii.dataStructure.Matrix4x4)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.m00() <= 0 && from.m00() >= 0)) {
    _internal_set_m00(from._internal_m00());
  }
  if (!(from.m01() <= 0 && from.m01() >= 0)) {
    _internal_set_m01(from._internal_m01());
  }
  if (!(from.m02() <= 0 && from.m02() >= 0)) {
    _internal_set_m02(from._internal_m02());
  }
  if (!(from.m03() <= 0 && from.m03() >= 0)) {
    _internal_set_m03(from._internal_m03());
  }
  if (!(from.m10() <= 0 && from.m10() >= 0)) {
    _internal_set_m10(from._internal_m10());
  }
  if (!(from.m11() <= 0 && from.m11() >= 0)) {
    _internal_set_m11(from._internal_m11());
  }
  if (!(from.m12() <= 0 && from.m12() >= 0)) {
    _internal_set_m12(from._internal_m12());
  }
  if (!(from.m13() <= 0 && from.m13() >= 0)) {
    _internal_set_m13(from._internal_m13());
  }
  if (!(from.m20() <= 0 && from.m20() >= 0)) {
    _internal_set_m20(from._internal_m20());
  }
  if (!(from.m21() <= 0 && from.m21() >= 0)) {
    _internal_set_m21(from._internal_m21());
  }
  if (!(from.m22() <= 0 && from.m22() >= 0)) {
    _internal_set_m22(from._internal_m22());
  }
  if (!(from.m23() <= 0 && from.m23() >= 0)) {
    _internal_set_m23(from._internal_m23());
  }
  if (!(from.m30() <= 0 && from.m30() >= 0)) {
    _internal_set_m30(from._internal_m30());
  }
  if (!(from.m31() <= 0 && from.m31() >= 0)) {
    _internal_set_m31(from._internal_m31());
  }
  if (!(from.m32() <= 0 && from.m32() >= 0)) {
    _internal_set_m32(from._internal_m32());
  }
  if (!(from.m33() <= 0 && from.m33() >= 0)) {
    _internal_set_m33(from._internal_m33());
  }
}

void Matrix4x4::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ubii.dataStructure.Matrix4x4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Matrix4x4::CopyFrom(const Matrix4x4& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ubii.dataStructure.Matrix4x4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Matrix4x4::IsInitialized() const {
  return true;
}

void Matrix4x4::InternalSwap(Matrix4x4* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(m00_, other->m00_);
  swap(m01_, other->m01_);
  swap(m02_, other->m02_);
  swap(m03_, other->m03_);
  swap(m10_, other->m10_);
  swap(m11_, other->m11_);
  swap(m12_, other->m12_);
  swap(m13_, other->m13_);
  swap(m20_, other->m20_);
  swap(m21_, other->m21_);
  swap(m22_, other->m22_);
  swap(m23_, other->m23_);
  swap(m30_, other->m30_);
  swap(m31_, other->m31_);
  swap(m32_, other->m32_);
  swap(m33_, other->m33_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Matrix4x4::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace dataStructure
}  // namespace ubii
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ubii::dataStructure::Matrix4x4* Arena::CreateMaybeMessage< ::ubii::dataStructure::Matrix4x4 >(Arena* arena) {
  return Arena::CreateInternal< ::ubii::dataStructure::Matrix4x4 >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
