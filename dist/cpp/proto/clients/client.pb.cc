// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/clients/client.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "proto/clients/client.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ubii {
namespace clients {

namespace {

const ::google::protobuf::Descriptor* Client_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Client_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClientList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientList_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_proto_2fclients_2fclient_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_proto_2fclients_2fclient_2eproto() {
  protobuf_AddDesc_proto_2fclients_2fclient_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "proto/clients/client.proto");
  GOOGLE_CHECK(file != NULL);
  Client_descriptor_ = file->message_type(0);
  static const int Client_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Client, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Client, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Client, devices_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Client, tags_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Client, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Client, processing_modules_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Client, is_dedicated_processing_node_),
  };
  Client_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Client_descriptor_,
      Client::default_instance_,
      Client_offsets_,
      -1,
      -1,
      -1,
      sizeof(Client),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Client, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Client, _is_default_instance_));
  ClientList_descriptor_ = file->message_type(1);
  static const int ClientList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientList, elements_),
  };
  ClientList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ClientList_descriptor_,
      ClientList::default_instance_,
      ClientList_offsets_,
      -1,
      -1,
      -1,
      sizeof(ClientList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientList, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_proto_2fclients_2fclient_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Client_descriptor_, &Client::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ClientList_descriptor_, &ClientList::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_proto_2fclients_2fclient_2eproto() {
  delete Client::default_instance_;
  delete Client_reflection_;
  delete ClientList::default_instance_;
  delete ClientList_reflection_;
}

void protobuf_AddDesc_proto_2fclients_2fclient_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_proto_2fclients_2fclient_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::ubii::devices::protobuf_AddDesc_proto_2fdevices_2fdevice_2eproto();
  ::ubii::processing::protobuf_AddDesc_proto_2fprocessing_2fprocessingModule_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\032proto/clients/client.proto\022\014ubii.clien"
    "ts\032\032proto/devices/device.proto\032\'proto/pr"
    "ocessing/processingModule.proto\"\321\001\n\006Clie"
    "nt\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022%\n\007devices\030"
    "\003 \003(\0132\024.ubii.devices.Device\022\014\n\004tags\030\004 \003("
    "\t\022\023\n\013description\030\005 \001(\t\022=\n\022processing_mod"
    "ules\030\006 \003(\0132!.ubii.processing.ProcessingM"
    "odule\022$\n\034is_dedicated_processing_node\030\007 "
    "\001(\010\"4\n\nClientList\022&\n\010elements\030\001 \003(\0132\024.ub"
    "ii.clients.Clientb\006proto3", 385);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proto/clients/client.proto", &protobuf_RegisterTypes);
  Client::default_instance_ = new Client();
  ClientList::default_instance_ = new ClientList();
  Client::default_instance_->InitAsDefaultInstance();
  ClientList::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_proto_2fclients_2fclient_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_proto_2fclients_2fclient_2eproto {
  StaticDescriptorInitializer_proto_2fclients_2fclient_2eproto() {
    protobuf_AddDesc_proto_2fclients_2fclient_2eproto();
  }
} static_descriptor_initializer_proto_2fclients_2fclient_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Client::kIdFieldNumber;
const int Client::kNameFieldNumber;
const int Client::kDevicesFieldNumber;
const int Client::kTagsFieldNumber;
const int Client::kDescriptionFieldNumber;
const int Client::kProcessingModulesFieldNumber;
const int Client::kIsDedicatedProcessingNodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Client::Client()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ubii.clients.Client)
}

void Client::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Client::Client(const Client& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ubii.clients.Client)
}

void Client::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_dedicated_processing_node_ = false;
}

Client::~Client() {
  // @@protoc_insertion_point(destructor:ubii.clients.Client)
  SharedDtor();
}

void Client::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Client::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Client::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Client_descriptor_;
}

const Client& Client::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fclients_2fclient_2eproto();
  return *default_instance_;
}

Client* Client::default_instance_ = NULL;

Client* Client::New(::google::protobuf::Arena* arena) const {
  Client* n = new Client;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Client::Clear() {
// @@protoc_insertion_point(message_clear_start:ubii.clients.Client)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_dedicated_processing_node_ = false;
  devices_.Clear();
  tags_.Clear();
  processing_modules_.Clear();
}

bool Client::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ubii.clients.Client)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.clients.Client.id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.clients.Client.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_devices;
        break;
      }

      // repeated .ubii.devices.Device devices = 3;
      case 3: {
        if (tag == 26) {
         parse_devices:
          DO_(input->IncrementRecursionDepth());
         parse_loop_devices:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_devices()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_devices;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(34)) goto parse_tags;
        break;
      }

      // repeated string tags = 4;
      case 4: {
        if (tag == 34) {
         parse_tags:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_tags()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tags(this->tags_size() - 1).data(),
            this->tags(this->tags_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.clients.Client.tags"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_tags;
        if (input->ExpectTag(42)) goto parse_description;
        break;
      }

      // optional string description = 5;
      case 5: {
        if (tag == 42) {
         parse_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.clients.Client.description"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_processing_modules;
        break;
      }

      // repeated .ubii.processing.ProcessingModule processing_modules = 6;
      case 6: {
        if (tag == 50) {
         parse_processing_modules:
          DO_(input->IncrementRecursionDepth());
         parse_loop_processing_modules:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_processing_modules()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_processing_modules;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(56)) goto parse_is_dedicated_processing_node;
        break;
      }

      // optional bool is_dedicated_processing_node = 7;
      case 7: {
        if (tag == 56) {
         parse_is_dedicated_processing_node:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_dedicated_processing_node_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ubii.clients.Client)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ubii.clients.Client)
  return false;
#undef DO_
}

void Client::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ubii.clients.Client)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.clients.Client.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.clients.Client.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // repeated .ubii.devices.Device devices = 3;
  for (unsigned int i = 0, n = this->devices_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->devices(i), output);
  }

  // repeated string tags = 4;
  for (int i = 0; i < this->tags_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tags(i).data(), this->tags(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.clients.Client.tags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->tags(i), output);
  }

  // optional string description = 5;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.clients.Client.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->description(), output);
  }

  // repeated .ubii.processing.ProcessingModule processing_modules = 6;
  for (unsigned int i = 0, n = this->processing_modules_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->processing_modules(i), output);
  }

  // optional bool is_dedicated_processing_node = 7;
  if (this->is_dedicated_processing_node() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->is_dedicated_processing_node(), output);
  }

  // @@protoc_insertion_point(serialize_end:ubii.clients.Client)
}

::google::protobuf::uint8* Client::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ubii.clients.Client)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.clients.Client.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.clients.Client.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // repeated .ubii.devices.Device devices = 3;
  for (unsigned int i = 0, n = this->devices_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->devices(i), false, target);
  }

  // repeated string tags = 4;
  for (int i = 0; i < this->tags_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tags(i).data(), this->tags(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.clients.Client.tags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->tags(i), target);
  }

  // optional string description = 5;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.clients.Client.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->description(), target);
  }

  // repeated .ubii.processing.ProcessingModule processing_modules = 6;
  for (unsigned int i = 0, n = this->processing_modules_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->processing_modules(i), false, target);
  }

  // optional bool is_dedicated_processing_node = 7;
  if (this->is_dedicated_processing_node() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->is_dedicated_processing_node(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ubii.clients.Client)
  return target;
}

int Client::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ubii.clients.Client)
  int total_size = 0;

  // optional string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string description = 5;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // optional bool is_dedicated_processing_node = 7;
  if (this->is_dedicated_processing_node() != 0) {
    total_size += 1 + 1;
  }

  // repeated .ubii.devices.Device devices = 3;
  total_size += 1 * this->devices_size();
  for (int i = 0; i < this->devices_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->devices(i));
  }

  // repeated string tags = 4;
  total_size += 1 * this->tags_size();
  for (int i = 0; i < this->tags_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->tags(i));
  }

  // repeated .ubii.processing.ProcessingModule processing_modules = 6;
  total_size += 1 * this->processing_modules_size();
  for (int i = 0; i < this->processing_modules_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->processing_modules(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Client::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ubii.clients.Client)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Client* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Client>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ubii.clients.Client)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ubii.clients.Client)
    MergeFrom(*source);
  }
}

void Client::MergeFrom(const Client& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ubii.clients.Client)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  devices_.MergeFrom(from.devices_);
  tags_.MergeFrom(from.tags_);
  processing_modules_.MergeFrom(from.processing_modules_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.is_dedicated_processing_node() != 0) {
    set_is_dedicated_processing_node(from.is_dedicated_processing_node());
  }
}

void Client::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ubii.clients.Client)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Client::CopyFrom(const Client& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ubii.clients.Client)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Client::IsInitialized() const {

  return true;
}

void Client::Swap(Client* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Client::InternalSwap(Client* other) {
  id_.Swap(&other->id_);
  name_.Swap(&other->name_);
  devices_.UnsafeArenaSwap(&other->devices_);
  tags_.UnsafeArenaSwap(&other->tags_);
  description_.Swap(&other->description_);
  processing_modules_.UnsafeArenaSwap(&other->processing_modules_);
  std::swap(is_dedicated_processing_node_, other->is_dedicated_processing_node_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Client::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Client_descriptor_;
  metadata.reflection = Client_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Client

// optional string id = 1;
void Client::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Client::id() const {
  // @@protoc_insertion_point(field_get:ubii.clients.Client.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Client::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ubii.clients.Client.id)
}
 void Client::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ubii.clients.Client.id)
}
 void Client::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ubii.clients.Client.id)
}
 ::std::string* Client::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ubii.clients.Client.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Client::release_id() {
  // @@protoc_insertion_point(field_release:ubii.clients.Client.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Client::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ubii.clients.Client.id)
}

// optional string name = 2;
void Client::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Client::name() const {
  // @@protoc_insertion_point(field_get:ubii.clients.Client.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Client::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ubii.clients.Client.name)
}
 void Client::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ubii.clients.Client.name)
}
 void Client::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ubii.clients.Client.name)
}
 ::std::string* Client::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ubii.clients.Client.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Client::release_name() {
  // @@protoc_insertion_point(field_release:ubii.clients.Client.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Client::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ubii.clients.Client.name)
}

// repeated .ubii.devices.Device devices = 3;
int Client::devices_size() const {
  return devices_.size();
}
void Client::clear_devices() {
  devices_.Clear();
}
const ::ubii::devices::Device& Client::devices(int index) const {
  // @@protoc_insertion_point(field_get:ubii.clients.Client.devices)
  return devices_.Get(index);
}
::ubii::devices::Device* Client::mutable_devices(int index) {
  // @@protoc_insertion_point(field_mutable:ubii.clients.Client.devices)
  return devices_.Mutable(index);
}
::ubii::devices::Device* Client::add_devices() {
  // @@protoc_insertion_point(field_add:ubii.clients.Client.devices)
  return devices_.Add();
}
::google::protobuf::RepeatedPtrField< ::ubii::devices::Device >*
Client::mutable_devices() {
  // @@protoc_insertion_point(field_mutable_list:ubii.clients.Client.devices)
  return &devices_;
}
const ::google::protobuf::RepeatedPtrField< ::ubii::devices::Device >&
Client::devices() const {
  // @@protoc_insertion_point(field_list:ubii.clients.Client.devices)
  return devices_;
}

// repeated string tags = 4;
int Client::tags_size() const {
  return tags_.size();
}
void Client::clear_tags() {
  tags_.Clear();
}
 const ::std::string& Client::tags(int index) const {
  // @@protoc_insertion_point(field_get:ubii.clients.Client.tags)
  return tags_.Get(index);
}
 ::std::string* Client::mutable_tags(int index) {
  // @@protoc_insertion_point(field_mutable:ubii.clients.Client.tags)
  return tags_.Mutable(index);
}
 void Client::set_tags(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ubii.clients.Client.tags)
  tags_.Mutable(index)->assign(value);
}
 void Client::set_tags(int index, const char* value) {
  tags_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ubii.clients.Client.tags)
}
 void Client::set_tags(int index, const char* value, size_t size) {
  tags_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ubii.clients.Client.tags)
}
 ::std::string* Client::add_tags() {
  // @@protoc_insertion_point(field_add_mutable:ubii.clients.Client.tags)
  return tags_.Add();
}
 void Client::add_tags(const ::std::string& value) {
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ubii.clients.Client.tags)
}
 void Client::add_tags(const char* value) {
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ubii.clients.Client.tags)
}
 void Client::add_tags(const char* value, size_t size) {
  tags_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ubii.clients.Client.tags)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
Client::tags() const {
  // @@protoc_insertion_point(field_list:ubii.clients.Client.tags)
  return tags_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
Client::mutable_tags() {
  // @@protoc_insertion_point(field_mutable_list:ubii.clients.Client.tags)
  return &tags_;
}

// optional string description = 5;
void Client::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Client::description() const {
  // @@protoc_insertion_point(field_get:ubii.clients.Client.description)
  return description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Client::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ubii.clients.Client.description)
}
 void Client::set_description(const char* value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ubii.clients.Client.description)
}
 void Client::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ubii.clients.Client.description)
}
 ::std::string* Client::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:ubii.clients.Client.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Client::release_description() {
  // @@protoc_insertion_point(field_release:ubii.clients.Client.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Client::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:ubii.clients.Client.description)
}

// repeated .ubii.processing.ProcessingModule processing_modules = 6;
int Client::processing_modules_size() const {
  return processing_modules_.size();
}
void Client::clear_processing_modules() {
  processing_modules_.Clear();
}
const ::ubii::processing::ProcessingModule& Client::processing_modules(int index) const {
  // @@protoc_insertion_point(field_get:ubii.clients.Client.processing_modules)
  return processing_modules_.Get(index);
}
::ubii::processing::ProcessingModule* Client::mutable_processing_modules(int index) {
  // @@protoc_insertion_point(field_mutable:ubii.clients.Client.processing_modules)
  return processing_modules_.Mutable(index);
}
::ubii::processing::ProcessingModule* Client::add_processing_modules() {
  // @@protoc_insertion_point(field_add:ubii.clients.Client.processing_modules)
  return processing_modules_.Add();
}
::google::protobuf::RepeatedPtrField< ::ubii::processing::ProcessingModule >*
Client::mutable_processing_modules() {
  // @@protoc_insertion_point(field_mutable_list:ubii.clients.Client.processing_modules)
  return &processing_modules_;
}
const ::google::protobuf::RepeatedPtrField< ::ubii::processing::ProcessingModule >&
Client::processing_modules() const {
  // @@protoc_insertion_point(field_list:ubii.clients.Client.processing_modules)
  return processing_modules_;
}

// optional bool is_dedicated_processing_node = 7;
void Client::clear_is_dedicated_processing_node() {
  is_dedicated_processing_node_ = false;
}
 bool Client::is_dedicated_processing_node() const {
  // @@protoc_insertion_point(field_get:ubii.clients.Client.is_dedicated_processing_node)
  return is_dedicated_processing_node_;
}
 void Client::set_is_dedicated_processing_node(bool value) {
  
  is_dedicated_processing_node_ = value;
  // @@protoc_insertion_point(field_set:ubii.clients.Client.is_dedicated_processing_node)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientList::kElementsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientList::ClientList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ubii.clients.ClientList)
}

void ClientList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ClientList::ClientList(const ClientList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ubii.clients.ClientList)
}

void ClientList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

ClientList::~ClientList() {
  // @@protoc_insertion_point(destructor:ubii.clients.ClientList)
  SharedDtor();
}

void ClientList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ClientList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientList_descriptor_;
}

const ClientList& ClientList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fclients_2fclient_2eproto();
  return *default_instance_;
}

ClientList* ClientList::default_instance_ = NULL;

ClientList* ClientList::New(::google::protobuf::Arena* arena) const {
  ClientList* n = new ClientList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientList::Clear() {
// @@protoc_insertion_point(message_clear_start:ubii.clients.ClientList)
  elements_.Clear();
}

bool ClientList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ubii.clients.ClientList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ubii.clients.Client elements = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_elements:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_elements()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_elements;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ubii.clients.ClientList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ubii.clients.ClientList)
  return false;
#undef DO_
}

void ClientList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ubii.clients.ClientList)
  // repeated .ubii.clients.Client elements = 1;
  for (unsigned int i = 0, n = this->elements_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->elements(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ubii.clients.ClientList)
}

::google::protobuf::uint8* ClientList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ubii.clients.ClientList)
  // repeated .ubii.clients.Client elements = 1;
  for (unsigned int i = 0, n = this->elements_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->elements(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ubii.clients.ClientList)
  return target;
}

int ClientList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ubii.clients.ClientList)
  int total_size = 0;

  // repeated .ubii.clients.Client elements = 1;
  total_size += 1 * this->elements_size();
  for (int i = 0; i < this->elements_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->elements(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ubii.clients.ClientList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ClientList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ubii.clients.ClientList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ubii.clients.ClientList)
    MergeFrom(*source);
  }
}

void ClientList::MergeFrom(const ClientList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ubii.clients.ClientList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  elements_.MergeFrom(from.elements_);
}

void ClientList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ubii.clients.ClientList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientList::CopyFrom(const ClientList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ubii.clients.ClientList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientList::IsInitialized() const {

  return true;
}

void ClientList::Swap(ClientList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientList::InternalSwap(ClientList* other) {
  elements_.UnsafeArenaSwap(&other->elements_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientList_descriptor_;
  metadata.reflection = ClientList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientList

// repeated .ubii.clients.Client elements = 1;
int ClientList::elements_size() const {
  return elements_.size();
}
void ClientList::clear_elements() {
  elements_.Clear();
}
const ::ubii::clients::Client& ClientList::elements(int index) const {
  // @@protoc_insertion_point(field_get:ubii.clients.ClientList.elements)
  return elements_.Get(index);
}
::ubii::clients::Client* ClientList::mutable_elements(int index) {
  // @@protoc_insertion_point(field_mutable:ubii.clients.ClientList.elements)
  return elements_.Mutable(index);
}
::ubii::clients::Client* ClientList::add_elements() {
  // @@protoc_insertion_point(field_add:ubii.clients.ClientList.elements)
  return elements_.Add();
}
::google::protobuf::RepeatedPtrField< ::ubii::clients::Client >*
ClientList::mutable_elements() {
  // @@protoc_insertion_point(field_mutable_list:ubii.clients.ClientList.elements)
  return &elements_;
}
const ::google::protobuf::RepeatedPtrField< ::ubii::clients::Client >&
ClientList::elements() const {
  // @@protoc_insertion_point(field_list:ubii.clients.ClientList.elements)
  return elements_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace clients
}  // namespace ubii

// @@protoc_insertion_point(global_scope)
