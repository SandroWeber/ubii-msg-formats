// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/topicData/topicDataSource.proto

#include "proto/topicData/topicDataSource.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_proto_2fdevices_2fcomponent_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fdevices_2fcomponent_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Component;
}  // namespace protobuf_proto_2fdevices_2fcomponent_2eproto
namespace protobuf_proto_2ftopicData_2ftopicDataRecord_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2ftopicData_2ftopicDataRecord_2eproto ::google::protobuf::internal::SCCInfo<36> scc_info_TopicDataRecord;
}  // namespace protobuf_proto_2ftopicData_2ftopicDataRecord_2eproto
namespace protobuf_proto_2ftopicData_2ftopicDataSource_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2ftopicData_2ftopicDataSource_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_TopicDataSource;
}  // namespace protobuf_proto_2ftopicData_2ftopicDataSource_2eproto
namespace ubii {
namespace topicData {
class TopicDataSourceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TopicDataSource>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr topic_;
  ::google::protobuf::internal::ArenaStringPtr regex_;
  const ::ubii::devices::Component* component_;
  const ::ubii::topicData::TopicDataRecord* static_record_;
} _TopicDataSource_default_instance_;
class TopicDataSourceListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TopicDataSourceList>
      _instance;
} _TopicDataSourceList_default_instance_;
}  // namespace topicData
}  // namespace ubii
namespace protobuf_proto_2ftopicData_2ftopicDataSource_2eproto {
static void InitDefaultsTopicDataSource() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ubii::topicData::_TopicDataSource_default_instance_;
    new (ptr) ::ubii::topicData::TopicDataSource();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ubii::topicData::TopicDataSource::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_TopicDataSource =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsTopicDataSource}, {
      &protobuf_proto_2fdevices_2fcomponent_2eproto::scc_info_Component.base,
      &protobuf_proto_2ftopicData_2ftopicDataRecord_2eproto::scc_info_TopicDataRecord.base,}};

static void InitDefaultsTopicDataSourceList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ubii::topicData::_TopicDataSourceList_default_instance_;
    new (ptr) ::ubii::topicData::TopicDataSourceList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ubii::topicData::TopicDataSourceList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TopicDataSourceList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTopicDataSourceList}, {
      &protobuf_proto_2ftopicData_2ftopicDataSource_2eproto::scc_info_TopicDataSource.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TopicDataSource.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TopicDataSourceList.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ubii::topicData::TopicDataSource, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ubii::topicData::TopicDataSource, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::ubii::topicData::TopicDataSourceDefaultTypeInternal, topic_),
  offsetof(::ubii::topicData::TopicDataSourceDefaultTypeInternal, regex_),
  offsetof(::ubii::topicData::TopicDataSourceDefaultTypeInternal, component_),
  offsetof(::ubii::topicData::TopicDataSourceDefaultTypeInternal, static_record_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ubii::topicData::TopicDataSource, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ubii::topicData::TopicDataSourceList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ubii::topicData::TopicDataSourceList, elements_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ubii::topicData::TopicDataSource)},
  { 10, -1, sizeof(::ubii::topicData::TopicDataSourceList)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ubii::topicData::_TopicDataSource_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ubii::topicData::_TopicDataSourceList_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "proto/topicData/topicDataSource.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n%proto/topicData/topicDataSource.proto\022"
      "\016ubii.topicData\032\035proto/devices/component"
      ".proto\032%proto/topicData/topicDataRecord."
      "proto\"\243\001\n\017TopicDataSource\022\017\n\005topic\030\001 \001(\t"
      "H\000\022\017\n\005regex\030\002 \001(\tH\000\022,\n\tcomponent\030\003 \001(\0132\027"
      ".ubii.devices.ComponentH\000\0228\n\rstatic_reco"
      "rd\030\004 \001(\0132\037.ubii.topicData.TopicDataRecor"
      "dH\000B\006\n\004type\"H\n\023TopicDataSourceList\0221\n\010el"
      "ements\030\001 \003(\0132\037.ubii.topicData.TopicDataS"
      "ourceb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 373);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proto/topicData/topicDataSource.proto", &protobuf_RegisterTypes);
  ::protobuf_proto_2fdevices_2fcomponent_2eproto::AddDescriptors();
  ::protobuf_proto_2ftopicData_2ftopicDataRecord_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_proto_2ftopicData_2ftopicDataSource_2eproto
namespace ubii {
namespace topicData {

// ===================================================================

void TopicDataSource::InitAsDefaultInstance() {
  ::ubii::topicData::_TopicDataSource_default_instance_.topic_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::ubii::topicData::_TopicDataSource_default_instance_.regex_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::ubii::topicData::_TopicDataSource_default_instance_.component_ = const_cast< ::ubii::devices::Component*>(
      ::ubii::devices::Component::internal_default_instance());
  ::ubii::topicData::_TopicDataSource_default_instance_.static_record_ = const_cast< ::ubii::topicData::TopicDataRecord*>(
      ::ubii::topicData::TopicDataRecord::internal_default_instance());
}
void TopicDataSource::set_allocated_component(::ubii::devices::Component* component) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (component) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      component = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, component, submessage_arena);
    }
    set_has_component();
    type_.component_ = component;
  }
  // @@protoc_insertion_point(field_set_allocated:ubii.topicData.TopicDataSource.component)
}
void TopicDataSource::clear_component() {
  if (has_component()) {
    delete type_.component_;
    clear_has_type();
  }
}
void TopicDataSource::set_allocated_static_record(::ubii::topicData::TopicDataRecord* static_record) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (static_record) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      static_record = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, static_record, submessage_arena);
    }
    set_has_static_record();
    type_.static_record_ = static_record;
  }
  // @@protoc_insertion_point(field_set_allocated:ubii.topicData.TopicDataSource.static_record)
}
void TopicDataSource::clear_static_record() {
  if (has_static_record()) {
    delete type_.static_record_;
    clear_has_type();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TopicDataSource::kTopicFieldNumber;
const int TopicDataSource::kRegexFieldNumber;
const int TopicDataSource::kComponentFieldNumber;
const int TopicDataSource::kStaticRecordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TopicDataSource::TopicDataSource()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2ftopicData_2ftopicDataSource_2eproto::scc_info_TopicDataSource.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ubii.topicData.TopicDataSource)
}
TopicDataSource::TopicDataSource(const TopicDataSource& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_type();
  switch (from.type_case()) {
    case kTopic: {
      set_topic(from.topic());
      break;
    }
    case kRegex: {
      set_regex(from.regex());
      break;
    }
    case kComponent: {
      mutable_component()->::ubii::devices::Component::MergeFrom(from.component());
      break;
    }
    case kStaticRecord: {
      mutable_static_record()->::ubii::topicData::TopicDataRecord::MergeFrom(from.static_record());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ubii.topicData.TopicDataSource)
}

void TopicDataSource::SharedCtor() {
  clear_has_type();
}

TopicDataSource::~TopicDataSource() {
  // @@protoc_insertion_point(destructor:ubii.topicData.TopicDataSource)
  SharedDtor();
}

void TopicDataSource::SharedDtor() {
  if (has_type()) {
    clear_type();
  }
}

void TopicDataSource::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TopicDataSource::descriptor() {
  ::protobuf_proto_2ftopicData_2ftopicDataSource_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2ftopicData_2ftopicDataSource_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TopicDataSource& TopicDataSource::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2ftopicData_2ftopicDataSource_2eproto::scc_info_TopicDataSource.base);
  return *internal_default_instance();
}


void TopicDataSource::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:ubii.topicData.TopicDataSource)
  switch (type_case()) {
    case kTopic: {
      type_.topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kRegex: {
      type_.regex_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kComponent: {
      delete type_.component_;
      break;
    }
    case kStaticRecord: {
      delete type_.static_record_;
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPE_NOT_SET;
}


void TopicDataSource::Clear() {
// @@protoc_insertion_point(message_clear_start:ubii.topicData.TopicDataSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_type();
  _internal_metadata_.Clear();
}

bool TopicDataSource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ubii.topicData.TopicDataSource)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string topic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_topic()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->topic().data(), static_cast<int>(this->topic().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.topicData.TopicDataSource.topic"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string regex = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_regex()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->regex().data(), static_cast<int>(this->regex().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.topicData.TopicDataSource.regex"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ubii.devices.Component component = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_component()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ubii.topicData.TopicDataRecord static_record = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_static_record()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ubii.topicData.TopicDataSource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ubii.topicData.TopicDataSource)
  return false;
#undef DO_
}

void TopicDataSource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ubii.topicData.TopicDataSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string topic = 1;
  if (has_topic()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.topicData.TopicDataSource.topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->topic(), output);
  }

  // string regex = 2;
  if (has_regex()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->regex().data(), static_cast<int>(this->regex().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.topicData.TopicDataSource.regex");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->regex(), output);
  }

  // .ubii.devices.Component component = 3;
  if (has_component()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_component(), output);
  }

  // .ubii.topicData.TopicDataRecord static_record = 4;
  if (has_static_record()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_static_record(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ubii.topicData.TopicDataSource)
}

::google::protobuf::uint8* TopicDataSource::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ubii.topicData.TopicDataSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string topic = 1;
  if (has_topic()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.topicData.TopicDataSource.topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->topic(), target);
  }

  // string regex = 2;
  if (has_regex()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->regex().data(), static_cast<int>(this->regex().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.topicData.TopicDataSource.regex");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->regex(), target);
  }

  // .ubii.devices.Component component = 3;
  if (has_component()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_component(), deterministic, target);
  }

  // .ubii.topicData.TopicDataRecord static_record = 4;
  if (has_static_record()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_static_record(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ubii.topicData.TopicDataSource)
  return target;
}

size_t TopicDataSource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ubii.topicData.TopicDataSource)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (type_case()) {
    // string topic = 1;
    case kTopic: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->topic());
      break;
    }
    // string regex = 2;
    case kRegex: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->regex());
      break;
    }
    // .ubii.devices.Component component = 3;
    case kComponent: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.component_);
      break;
    }
    // .ubii.topicData.TopicDataRecord static_record = 4;
    case kStaticRecord: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.static_record_);
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TopicDataSource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ubii.topicData.TopicDataSource)
  GOOGLE_DCHECK_NE(&from, this);
  const TopicDataSource* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TopicDataSource>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ubii.topicData.TopicDataSource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ubii.topicData.TopicDataSource)
    MergeFrom(*source);
  }
}

void TopicDataSource::MergeFrom(const TopicDataSource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ubii.topicData.TopicDataSource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.type_case()) {
    case kTopic: {
      set_topic(from.topic());
      break;
    }
    case kRegex: {
      set_regex(from.regex());
      break;
    }
    case kComponent: {
      mutable_component()->::ubii::devices::Component::MergeFrom(from.component());
      break;
    }
    case kStaticRecord: {
      mutable_static_record()->::ubii::topicData::TopicDataRecord::MergeFrom(from.static_record());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
}

void TopicDataSource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ubii.topicData.TopicDataSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopicDataSource::CopyFrom(const TopicDataSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ubii.topicData.TopicDataSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopicDataSource::IsInitialized() const {
  return true;
}

void TopicDataSource::Swap(TopicDataSource* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TopicDataSource::InternalSwap(TopicDataSource* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TopicDataSource::GetMetadata() const {
  protobuf_proto_2ftopicData_2ftopicDataSource_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2ftopicData_2ftopicDataSource_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TopicDataSourceList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TopicDataSourceList::kElementsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TopicDataSourceList::TopicDataSourceList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2ftopicData_2ftopicDataSource_2eproto::scc_info_TopicDataSourceList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ubii.topicData.TopicDataSourceList)
}
TopicDataSourceList::TopicDataSourceList(const TopicDataSourceList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      elements_(from.elements_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ubii.topicData.TopicDataSourceList)
}

void TopicDataSourceList::SharedCtor() {
}

TopicDataSourceList::~TopicDataSourceList() {
  // @@protoc_insertion_point(destructor:ubii.topicData.TopicDataSourceList)
  SharedDtor();
}

void TopicDataSourceList::SharedDtor() {
}

void TopicDataSourceList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TopicDataSourceList::descriptor() {
  ::protobuf_proto_2ftopicData_2ftopicDataSource_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2ftopicData_2ftopicDataSource_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TopicDataSourceList& TopicDataSourceList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2ftopicData_2ftopicDataSource_2eproto::scc_info_TopicDataSourceList.base);
  return *internal_default_instance();
}


void TopicDataSourceList::Clear() {
// @@protoc_insertion_point(message_clear_start:ubii.topicData.TopicDataSourceList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  elements_.Clear();
  _internal_metadata_.Clear();
}

bool TopicDataSourceList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ubii.topicData.TopicDataSourceList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ubii.topicData.TopicDataSource elements = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_elements()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ubii.topicData.TopicDataSourceList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ubii.topicData.TopicDataSourceList)
  return false;
#undef DO_
}

void TopicDataSourceList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ubii.topicData.TopicDataSourceList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ubii.topicData.TopicDataSource elements = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->elements_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->elements(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ubii.topicData.TopicDataSourceList)
}

::google::protobuf::uint8* TopicDataSourceList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ubii.topicData.TopicDataSourceList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ubii.topicData.TopicDataSource elements = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->elements_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->elements(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ubii.topicData.TopicDataSourceList)
  return target;
}

size_t TopicDataSourceList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ubii.topicData.TopicDataSourceList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ubii.topicData.TopicDataSource elements = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->elements_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->elements(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TopicDataSourceList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ubii.topicData.TopicDataSourceList)
  GOOGLE_DCHECK_NE(&from, this);
  const TopicDataSourceList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TopicDataSourceList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ubii.topicData.TopicDataSourceList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ubii.topicData.TopicDataSourceList)
    MergeFrom(*source);
  }
}

void TopicDataSourceList::MergeFrom(const TopicDataSourceList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ubii.topicData.TopicDataSourceList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  elements_.MergeFrom(from.elements_);
}

void TopicDataSourceList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ubii.topicData.TopicDataSourceList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopicDataSourceList::CopyFrom(const TopicDataSourceList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ubii.topicData.TopicDataSourceList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopicDataSourceList::IsInitialized() const {
  return true;
}

void TopicDataSourceList::Swap(TopicDataSourceList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TopicDataSourceList::InternalSwap(TopicDataSourceList* other) {
  using std::swap;
  CastToBase(&elements_)->InternalSwap(CastToBase(&other->elements_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TopicDataSourceList::GetMetadata() const {
  protobuf_proto_2ftopicData_2ftopicDataSource_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2ftopicData_2ftopicDataSource_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace topicData
}  // namespace ubii
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ubii::topicData::TopicDataSource* Arena::CreateMaybeMessage< ::ubii::topicData::TopicDataSource >(Arena* arena) {
  return Arena::CreateInternal< ::ubii::topicData::TopicDataSource >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ubii::topicData::TopicDataSourceList* Arena::CreateMaybeMessage< ::ubii::topicData::TopicDataSourceList >(Arena* arena) {
  return Arena::CreateInternal< ::ubii::topicData::TopicDataSourceList >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
