// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/topicData/topicDataRecord/dataStructure/myoEvent.proto

#include "proto/topicData/topicDataRecord/dataStructure/myoEvent.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fquaternion_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Quaternion_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fquaternion_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector3_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Vector3_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector3_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector8_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Vector8_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector8_2eproto;
namespace ubii {
namespace dataStructure {
class MyoEventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MyoEvent> _instance;
} _MyoEvent_default_instance_;
}  // namespace dataStructure
}  // namespace ubii
static void InitDefaultsscc_info_MyoEvent_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fmyoEvent_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ubii::dataStructure::_MyoEvent_default_instance_;
    new (ptr) ::ubii::dataStructure::MyoEvent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ubii::dataStructure::MyoEvent::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_MyoEvent_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fmyoEvent_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_MyoEvent_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fmyoEvent_2eproto}, {
      &scc_info_Vector8_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector8_2eproto.base,
      &scc_info_Quaternion_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fquaternion_2eproto.base,
      &scc_info_Vector3_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector3_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fmyoEvent_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fmyoEvent_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fmyoEvent_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fmyoEvent_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ubii::dataStructure::MyoEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ubii::dataStructure::MyoEvent, emg_),
  PROTOBUF_FIELD_OFFSET(::ubii::dataStructure::MyoEvent, orientation_),
  PROTOBUF_FIELD_OFFSET(::ubii::dataStructure::MyoEvent, gyroscope_),
  PROTOBUF_FIELD_OFFSET(::ubii::dataStructure::MyoEvent, accelerometer_),
  PROTOBUF_FIELD_OFFSET(::ubii::dataStructure::MyoEvent, gesture_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ubii::dataStructure::MyoEvent)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ubii::dataStructure::_MyoEvent_default_instance_),
};

const char descriptor_table_protodef_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fmyoEvent_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n<proto/topicData/topicDataRecord/dataSt"
  "ructure/myoEvent.proto\022\022ubii.dataStructu"
  "re\032;proto/topicData/topicDataRecord/data"
  "Structure/vector8.proto\032;proto/topicData"
  "/topicDataRecord/dataStructure/vector3.p"
  "roto\032>proto/topicData/topicDataRecord/da"
  "taStructure/quaternion.proto\032Cproto/topi"
  "cData/topicDataRecord/dataStructure/hand"
  "GestureType.proto\"\203\002\n\010MyoEvent\022(\n\003emg\030\001 "
  "\001(\0132\033.ubii.dataStructure.Vector8\0223\n\013orie"
  "ntation\030\002 \001(\0132\036.ubii.dataStructure.Quate"
  "rnion\022.\n\tgyroscope\030\003 \001(\0132\033.ubii.dataStru"
  "cture.Vector3\0222\n\raccelerometer\030\004 \001(\0132\033.u"
  "bii.dataStructure.Vector3\0224\n\007gesture\030\005 \001"
  "(\0162#.ubii.dataStructure.HandGestureTypeb"
  "\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fmyoEvent_2eproto_deps[4] = {
  &::descriptor_table_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fhandGestureType_2eproto,
  &::descriptor_table_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fquaternion_2eproto,
  &::descriptor_table_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector3_2eproto,
  &::descriptor_table_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector8_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fmyoEvent_2eproto_sccs[1] = {
  &scc_info_MyoEvent_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fmyoEvent_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fmyoEvent_2eproto_once;
static bool descriptor_table_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fmyoEvent_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fmyoEvent_2eproto = {
  &descriptor_table_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fmyoEvent_2eproto_initialized, descriptor_table_protodef_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fmyoEvent_2eproto, "proto/topicData/topicDataRecord/dataStructure/myoEvent.proto", 607,
  &descriptor_table_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fmyoEvent_2eproto_once, descriptor_table_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fmyoEvent_2eproto_sccs, descriptor_table_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fmyoEvent_2eproto_deps, 1, 4,
  schemas, file_default_instances, TableStruct_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fmyoEvent_2eproto::offsets,
  file_level_metadata_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fmyoEvent_2eproto, 1, file_level_enum_descriptors_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fmyoEvent_2eproto, file_level_service_descriptors_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fmyoEvent_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fmyoEvent_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fmyoEvent_2eproto), true);
namespace ubii {
namespace dataStructure {

// ===================================================================

void MyoEvent::InitAsDefaultInstance() {
  ::ubii::dataStructure::_MyoEvent_default_instance_._instance.get_mutable()->emg_ = const_cast< ::ubii::dataStructure::Vector8*>(
      ::ubii::dataStructure::Vector8::internal_default_instance());
  ::ubii::dataStructure::_MyoEvent_default_instance_._instance.get_mutable()->orientation_ = const_cast< ::ubii::dataStructure::Quaternion*>(
      ::ubii::dataStructure::Quaternion::internal_default_instance());
  ::ubii::dataStructure::_MyoEvent_default_instance_._instance.get_mutable()->gyroscope_ = const_cast< ::ubii::dataStructure::Vector3*>(
      ::ubii::dataStructure::Vector3::internal_default_instance());
  ::ubii::dataStructure::_MyoEvent_default_instance_._instance.get_mutable()->accelerometer_ = const_cast< ::ubii::dataStructure::Vector3*>(
      ::ubii::dataStructure::Vector3::internal_default_instance());
}
class MyoEvent::_Internal {
 public:
  static const ::ubii::dataStructure::Vector8& emg(const MyoEvent* msg);
  static const ::ubii::dataStructure::Quaternion& orientation(const MyoEvent* msg);
  static const ::ubii::dataStructure::Vector3& gyroscope(const MyoEvent* msg);
  static const ::ubii::dataStructure::Vector3& accelerometer(const MyoEvent* msg);
};

const ::ubii::dataStructure::Vector8&
MyoEvent::_Internal::emg(const MyoEvent* msg) {
  return *msg->emg_;
}
const ::ubii::dataStructure::Quaternion&
MyoEvent::_Internal::orientation(const MyoEvent* msg) {
  return *msg->orientation_;
}
const ::ubii::dataStructure::Vector3&
MyoEvent::_Internal::gyroscope(const MyoEvent* msg) {
  return *msg->gyroscope_;
}
const ::ubii::dataStructure::Vector3&
MyoEvent::_Internal::accelerometer(const MyoEvent* msg) {
  return *msg->accelerometer_;
}
void MyoEvent::clear_emg() {
  if (GetArenaNoVirtual() == nullptr && emg_ != nullptr) {
    delete emg_;
  }
  emg_ = nullptr;
}
void MyoEvent::clear_orientation() {
  if (GetArenaNoVirtual() == nullptr && orientation_ != nullptr) {
    delete orientation_;
  }
  orientation_ = nullptr;
}
void MyoEvent::clear_gyroscope() {
  if (GetArenaNoVirtual() == nullptr && gyroscope_ != nullptr) {
    delete gyroscope_;
  }
  gyroscope_ = nullptr;
}
void MyoEvent::clear_accelerometer() {
  if (GetArenaNoVirtual() == nullptr && accelerometer_ != nullptr) {
    delete accelerometer_;
  }
  accelerometer_ = nullptr;
}
MyoEvent::MyoEvent()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ubii.dataStructure.MyoEvent)
}
MyoEvent::MyoEvent(const MyoEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_emg()) {
    emg_ = new ::ubii::dataStructure::Vector8(*from.emg_);
  } else {
    emg_ = nullptr;
  }
  if (from._internal_has_orientation()) {
    orientation_ = new ::ubii::dataStructure::Quaternion(*from.orientation_);
  } else {
    orientation_ = nullptr;
  }
  if (from._internal_has_gyroscope()) {
    gyroscope_ = new ::ubii::dataStructure::Vector3(*from.gyroscope_);
  } else {
    gyroscope_ = nullptr;
  }
  if (from._internal_has_accelerometer()) {
    accelerometer_ = new ::ubii::dataStructure::Vector3(*from.accelerometer_);
  } else {
    accelerometer_ = nullptr;
  }
  gesture_ = from.gesture_;
  // @@protoc_insertion_point(copy_constructor:ubii.dataStructure.MyoEvent)
}

void MyoEvent::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MyoEvent_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fmyoEvent_2eproto.base);
  ::memset(&emg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gesture_) -
      reinterpret_cast<char*>(&emg_)) + sizeof(gesture_));
}

MyoEvent::~MyoEvent() {
  // @@protoc_insertion_point(destructor:ubii.dataStructure.MyoEvent)
  SharedDtor();
}

void MyoEvent::SharedDtor() {
  if (this != internal_default_instance()) delete emg_;
  if (this != internal_default_instance()) delete orientation_;
  if (this != internal_default_instance()) delete gyroscope_;
  if (this != internal_default_instance()) delete accelerometer_;
}

void MyoEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MyoEvent& MyoEvent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MyoEvent_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fmyoEvent_2eproto.base);
  return *internal_default_instance();
}


void MyoEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:ubii.dataStructure.MyoEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && emg_ != nullptr) {
    delete emg_;
  }
  emg_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && orientation_ != nullptr) {
    delete orientation_;
  }
  orientation_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && gyroscope_ != nullptr) {
    delete gyroscope_;
  }
  gyroscope_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && accelerometer_ != nullptr) {
    delete accelerometer_;
  }
  accelerometer_ = nullptr;
  gesture_ = 0;
  _internal_metadata_.Clear();
}

const char* MyoEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ubii.dataStructure.Vector8 emg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_emg(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ubii.dataStructure.Quaternion orientation = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_orientation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ubii.dataStructure.Vector3 gyroscope = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_gyroscope(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ubii.dataStructure.Vector3 accelerometer = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_accelerometer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ubii.dataStructure.HandGestureType gesture = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_gesture(static_cast<::ubii::dataStructure::HandGestureType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MyoEvent::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ubii.dataStructure.MyoEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ubii.dataStructure.Vector8 emg = 1;
  if (this->has_emg()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::emg(this), target, stream);
  }

  // .ubii.dataStructure.Quaternion orientation = 2;
  if (this->has_orientation()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::orientation(this), target, stream);
  }

  // .ubii.dataStructure.Vector3 gyroscope = 3;
  if (this->has_gyroscope()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::gyroscope(this), target, stream);
  }

  // .ubii.dataStructure.Vector3 accelerometer = 4;
  if (this->has_accelerometer()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, _Internal::accelerometer(this), target, stream);
  }

  // .ubii.dataStructure.HandGestureType gesture = 5;
  if (this->gesture() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_gesture(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ubii.dataStructure.MyoEvent)
  return target;
}

size_t MyoEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ubii.dataStructure.MyoEvent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ubii.dataStructure.Vector8 emg = 1;
  if (this->has_emg()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *emg_);
  }

  // .ubii.dataStructure.Quaternion orientation = 2;
  if (this->has_orientation()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *orientation_);
  }

  // .ubii.dataStructure.Vector3 gyroscope = 3;
  if (this->has_gyroscope()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *gyroscope_);
  }

  // .ubii.dataStructure.Vector3 accelerometer = 4;
  if (this->has_accelerometer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *accelerometer_);
  }

  // .ubii.dataStructure.HandGestureType gesture = 5;
  if (this->gesture() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_gesture());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MyoEvent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ubii.dataStructure.MyoEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const MyoEvent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MyoEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ubii.dataStructure.MyoEvent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ubii.dataStructure.MyoEvent)
    MergeFrom(*source);
  }
}

void MyoEvent::MergeFrom(const MyoEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ubii.dataStructure.MyoEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_emg()) {
    _internal_mutable_emg()->::ubii::dataStructure::Vector8::MergeFrom(from._internal_emg());
  }
  if (from.has_orientation()) {
    _internal_mutable_orientation()->::ubii::dataStructure::Quaternion::MergeFrom(from._internal_orientation());
  }
  if (from.has_gyroscope()) {
    _internal_mutable_gyroscope()->::ubii::dataStructure::Vector3::MergeFrom(from._internal_gyroscope());
  }
  if (from.has_accelerometer()) {
    _internal_mutable_accelerometer()->::ubii::dataStructure::Vector3::MergeFrom(from._internal_accelerometer());
  }
  if (from.gesture() != 0) {
    _internal_set_gesture(from._internal_gesture());
  }
}

void MyoEvent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ubii.dataStructure.MyoEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MyoEvent::CopyFrom(const MyoEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ubii.dataStructure.MyoEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MyoEvent::IsInitialized() const {
  return true;
}

void MyoEvent::InternalSwap(MyoEvent* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(emg_, other->emg_);
  swap(orientation_, other->orientation_);
  swap(gyroscope_, other->gyroscope_);
  swap(accelerometer_, other->accelerometer_);
  swap(gesture_, other->gesture_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MyoEvent::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace dataStructure
}  // namespace ubii
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ubii::dataStructure::MyoEvent* Arena::CreateMaybeMessage< ::ubii::dataStructure::MyoEvent >(Arena* arena) {
  return Arena::CreateInternal< ::ubii::dataStructure::MyoEvent >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
