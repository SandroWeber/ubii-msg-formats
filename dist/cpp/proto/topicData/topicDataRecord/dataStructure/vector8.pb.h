// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/topicData/topicDataRecord/dataStructure/vector8.proto

#ifndef PROTOBUF_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector8_2eproto__INCLUDED
#define PROTOBUF_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector8_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ubii {
namespace dataStructure {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector8_2eproto();
void protobuf_AssignDesc_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector8_2eproto();
void protobuf_ShutdownFile_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector8_2eproto();

class Vector8;

// ===================================================================

class Vector8 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ubii.dataStructure.Vector8) */ {
 public:
  Vector8();
  virtual ~Vector8();

  Vector8(const Vector8& from);

  inline Vector8& operator=(const Vector8& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Vector8& default_instance();

  void Swap(Vector8* other);

  // implements Message ----------------------------------------------

  inline Vector8* New() const { return New(NULL); }

  Vector8* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Vector8& from);
  void MergeFrom(const Vector8& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Vector8* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double v0 = 1;
  void clear_v0();
  static const int kV0FieldNumber = 1;
  double v0() const;
  void set_v0(double value);

  // optional double v1 = 2;
  void clear_v1();
  static const int kV1FieldNumber = 2;
  double v1() const;
  void set_v1(double value);

  // optional double v2 = 3;
  void clear_v2();
  static const int kV2FieldNumber = 3;
  double v2() const;
  void set_v2(double value);

  // optional double v3 = 4;
  void clear_v3();
  static const int kV3FieldNumber = 4;
  double v3() const;
  void set_v3(double value);

  // optional double v4 = 5;
  void clear_v4();
  static const int kV4FieldNumber = 5;
  double v4() const;
  void set_v4(double value);

  // optional double v5 = 6;
  void clear_v5();
  static const int kV5FieldNumber = 6;
  double v5() const;
  void set_v5(double value);

  // optional double v6 = 7;
  void clear_v6();
  static const int kV6FieldNumber = 7;
  double v6() const;
  void set_v6(double value);

  // optional double v7 = 8;
  void clear_v7();
  static const int kV7FieldNumber = 8;
  double v7() const;
  void set_v7(double value);

  // @@protoc_insertion_point(class_scope:ubii.dataStructure.Vector8)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  double v0_;
  double v1_;
  double v2_;
  double v3_;
  double v4_;
  double v5_;
  double v6_;
  double v7_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector8_2eproto();
  friend void protobuf_AssignDesc_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector8_2eproto();
  friend void protobuf_ShutdownFile_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector8_2eproto();

  void InitAsDefaultInstance();
  static Vector8* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Vector8

// optional double v0 = 1;
inline void Vector8::clear_v0() {
  v0_ = 0;
}
inline double Vector8::v0() const {
  // @@protoc_insertion_point(field_get:ubii.dataStructure.Vector8.v0)
  return v0_;
}
inline void Vector8::set_v0(double value) {
  
  v0_ = value;
  // @@protoc_insertion_point(field_set:ubii.dataStructure.Vector8.v0)
}

// optional double v1 = 2;
inline void Vector8::clear_v1() {
  v1_ = 0;
}
inline double Vector8::v1() const {
  // @@protoc_insertion_point(field_get:ubii.dataStructure.Vector8.v1)
  return v1_;
}
inline void Vector8::set_v1(double value) {
  
  v1_ = value;
  // @@protoc_insertion_point(field_set:ubii.dataStructure.Vector8.v1)
}

// optional double v2 = 3;
inline void Vector8::clear_v2() {
  v2_ = 0;
}
inline double Vector8::v2() const {
  // @@protoc_insertion_point(field_get:ubii.dataStructure.Vector8.v2)
  return v2_;
}
inline void Vector8::set_v2(double value) {
  
  v2_ = value;
  // @@protoc_insertion_point(field_set:ubii.dataStructure.Vector8.v2)
}

// optional double v3 = 4;
inline void Vector8::clear_v3() {
  v3_ = 0;
}
inline double Vector8::v3() const {
  // @@protoc_insertion_point(field_get:ubii.dataStructure.Vector8.v3)
  return v3_;
}
inline void Vector8::set_v3(double value) {
  
  v3_ = value;
  // @@protoc_insertion_point(field_set:ubii.dataStructure.Vector8.v3)
}

// optional double v4 = 5;
inline void Vector8::clear_v4() {
  v4_ = 0;
}
inline double Vector8::v4() const {
  // @@protoc_insertion_point(field_get:ubii.dataStructure.Vector8.v4)
  return v4_;
}
inline void Vector8::set_v4(double value) {
  
  v4_ = value;
  // @@protoc_insertion_point(field_set:ubii.dataStructure.Vector8.v4)
}

// optional double v5 = 6;
inline void Vector8::clear_v5() {
  v5_ = 0;
}
inline double Vector8::v5() const {
  // @@protoc_insertion_point(field_get:ubii.dataStructure.Vector8.v5)
  return v5_;
}
inline void Vector8::set_v5(double value) {
  
  v5_ = value;
  // @@protoc_insertion_point(field_set:ubii.dataStructure.Vector8.v5)
}

// optional double v6 = 7;
inline void Vector8::clear_v6() {
  v6_ = 0;
}
inline double Vector8::v6() const {
  // @@protoc_insertion_point(field_get:ubii.dataStructure.Vector8.v6)
  return v6_;
}
inline void Vector8::set_v6(double value) {
  
  v6_ = value;
  // @@protoc_insertion_point(field_set:ubii.dataStructure.Vector8.v6)
}

// optional double v7 = 8;
inline void Vector8::clear_v7() {
  v7_ = 0;
}
inline double Vector8::v7() const {
  // @@protoc_insertion_point(field_get:ubii.dataStructure.Vector8.v7)
  return v7_;
}
inline void Vector8::set_v7(double value) {
  
  v7_ = value;
  // @@protoc_insertion_point(field_set:ubii.dataStructure.Vector8.v7)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace dataStructure
}  // namespace ubii

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector8_2eproto__INCLUDED
