// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/topicData/topicDataRecord/dataStructure/touchEvent.proto

#ifndef PROTOBUF_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2ftouchEvent_2eproto__INCLUDED
#define PROTOBUF_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2ftouchEvent_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "proto/topicData/topicDataRecord/dataStructure/buttonEventType.pb.h"
#include "proto/topicData/topicDataRecord/dataStructure/vector2.pb.h"
// @@protoc_insertion_point(includes)

namespace ubii {
namespace dataStructure {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2ftouchEvent_2eproto();
void protobuf_AssignDesc_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2ftouchEvent_2eproto();
void protobuf_ShutdownFile_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2ftouchEvent_2eproto();

class TouchEvent;

// ===================================================================

class TouchEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ubii.dataStructure.TouchEvent) */ {
 public:
  TouchEvent();
  virtual ~TouchEvent();

  TouchEvent(const TouchEvent& from);

  inline TouchEvent& operator=(const TouchEvent& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TouchEvent& default_instance();

  void Swap(TouchEvent* other);

  // implements Message ----------------------------------------------

  inline TouchEvent* New() const { return New(NULL); }

  TouchEvent* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TouchEvent& from);
  void MergeFrom(const TouchEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TouchEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ubii.dataStructure.ButtonEventType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::ubii::dataStructure::ButtonEventType type() const;
  void set_type(::ubii::dataStructure::ButtonEventType value);

  // optional .ubii.dataStructure.Vector2 position = 2;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 2;
  const ::ubii::dataStructure::Vector2& position() const;
  ::ubii::dataStructure::Vector2* mutable_position();
  ::ubii::dataStructure::Vector2* release_position();
  void set_allocated_position(::ubii::dataStructure::Vector2* position);

  // @@protoc_insertion_point(class_scope:ubii.dataStructure.TouchEvent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::ubii::dataStructure::Vector2* position_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2ftouchEvent_2eproto();
  friend void protobuf_AssignDesc_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2ftouchEvent_2eproto();
  friend void protobuf_ShutdownFile_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2ftouchEvent_2eproto();

  void InitAsDefaultInstance();
  static TouchEvent* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// TouchEvent

// optional .ubii.dataStructure.ButtonEventType type = 1;
inline void TouchEvent::clear_type() {
  type_ = 0;
}
inline ::ubii::dataStructure::ButtonEventType TouchEvent::type() const {
  // @@protoc_insertion_point(field_get:ubii.dataStructure.TouchEvent.type)
  return static_cast< ::ubii::dataStructure::ButtonEventType >(type_);
}
inline void TouchEvent::set_type(::ubii::dataStructure::ButtonEventType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:ubii.dataStructure.TouchEvent.type)
}

// optional .ubii.dataStructure.Vector2 position = 2;
inline bool TouchEvent::has_position() const {
  return !_is_default_instance_ && position_ != NULL;
}
inline void TouchEvent::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) delete position_;
  position_ = NULL;
}
inline const ::ubii::dataStructure::Vector2& TouchEvent::position() const {
  // @@protoc_insertion_point(field_get:ubii.dataStructure.TouchEvent.position)
  return position_ != NULL ? *position_ : *default_instance_->position_;
}
inline ::ubii::dataStructure::Vector2* TouchEvent::mutable_position() {
  
  if (position_ == NULL) {
    position_ = new ::ubii::dataStructure::Vector2;
  }
  // @@protoc_insertion_point(field_mutable:ubii.dataStructure.TouchEvent.position)
  return position_;
}
inline ::ubii::dataStructure::Vector2* TouchEvent::release_position() {
  // @@protoc_insertion_point(field_release:ubii.dataStructure.TouchEvent.position)
  
  ::ubii::dataStructure::Vector2* temp = position_;
  position_ = NULL;
  return temp;
}
inline void TouchEvent::set_allocated_position(::ubii::dataStructure::Vector2* position) {
  delete position_;
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ubii.dataStructure.TouchEvent.position)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace dataStructure
}  // namespace ubii

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2ftouchEvent_2eproto__INCLUDED
