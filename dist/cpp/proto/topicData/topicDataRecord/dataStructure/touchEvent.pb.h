// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/topicData/topicDataRecord/dataStructure/touchEvent.proto

#ifndef PROTOBUF_INCLUDED_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2ftouchEvent_2eproto
#define PROTOBUF_INCLUDED_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2ftouchEvent_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "proto/topicData/topicDataRecord/dataStructure/buttonEventType.pb.h"
#include "proto/topicData/topicDataRecord/dataStructure/vector2.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2ftouchEvent_2eproto 

namespace protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2ftouchEvent_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2ftouchEvent_2eproto
namespace ubii {
namespace dataStructure {
class TouchEvent;
class TouchEventDefaultTypeInternal;
extern TouchEventDefaultTypeInternal _TouchEvent_default_instance_;
}  // namespace dataStructure
}  // namespace ubii
namespace google {
namespace protobuf {
template<> ::ubii::dataStructure::TouchEvent* Arena::CreateMaybeMessage<::ubii::dataStructure::TouchEvent>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace ubii {
namespace dataStructure {

// ===================================================================

class TouchEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ubii.dataStructure.TouchEvent) */ {
 public:
  TouchEvent();
  virtual ~TouchEvent();

  TouchEvent(const TouchEvent& from);

  inline TouchEvent& operator=(const TouchEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TouchEvent(TouchEvent&& from) noexcept
    : TouchEvent() {
    *this = ::std::move(from);
  }

  inline TouchEvent& operator=(TouchEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TouchEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TouchEvent* internal_default_instance() {
    return reinterpret_cast<const TouchEvent*>(
               &_TouchEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(TouchEvent* other);
  friend void swap(TouchEvent& a, TouchEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TouchEvent* New() const final {
    return CreateMaybeMessage<TouchEvent>(NULL);
  }

  TouchEvent* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TouchEvent>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TouchEvent& from);
  void MergeFrom(const TouchEvent& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TouchEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ubii.dataStructure.Vector2 position = 2;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 2;
  private:
  const ::ubii::dataStructure::Vector2& _internal_position() const;
  public:
  const ::ubii::dataStructure::Vector2& position() const;
  ::ubii::dataStructure::Vector2* release_position();
  ::ubii::dataStructure::Vector2* mutable_position();
  void set_allocated_position(::ubii::dataStructure::Vector2* position);

  // .ubii.dataStructure.ButtonEventType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::ubii::dataStructure::ButtonEventType type() const;
  void set_type(::ubii::dataStructure::ButtonEventType value);

  // @@protoc_insertion_point(class_scope:ubii.dataStructure.TouchEvent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ubii::dataStructure::Vector2* position_;
  int type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2ftouchEvent_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TouchEvent

// .ubii.dataStructure.ButtonEventType type = 1;
inline void TouchEvent::clear_type() {
  type_ = 0;
}
inline ::ubii::dataStructure::ButtonEventType TouchEvent::type() const {
  // @@protoc_insertion_point(field_get:ubii.dataStructure.TouchEvent.type)
  return static_cast< ::ubii::dataStructure::ButtonEventType >(type_);
}
inline void TouchEvent::set_type(::ubii::dataStructure::ButtonEventType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:ubii.dataStructure.TouchEvent.type)
}

// .ubii.dataStructure.Vector2 position = 2;
inline bool TouchEvent::has_position() const {
  return this != internal_default_instance() && position_ != NULL;
}
inline const ::ubii::dataStructure::Vector2& TouchEvent::_internal_position() const {
  return *position_;
}
inline const ::ubii::dataStructure::Vector2& TouchEvent::position() const {
  const ::ubii::dataStructure::Vector2* p = position_;
  // @@protoc_insertion_point(field_get:ubii.dataStructure.TouchEvent.position)
  return p != NULL ? *p : *reinterpret_cast<const ::ubii::dataStructure::Vector2*>(
      &::ubii::dataStructure::_Vector2_default_instance_);
}
inline ::ubii::dataStructure::Vector2* TouchEvent::release_position() {
  // @@protoc_insertion_point(field_release:ubii.dataStructure.TouchEvent.position)
  
  ::ubii::dataStructure::Vector2* temp = position_;
  position_ = NULL;
  return temp;
}
inline ::ubii::dataStructure::Vector2* TouchEvent::mutable_position() {
  
  if (position_ == NULL) {
    auto* p = CreateMaybeMessage<::ubii::dataStructure::Vector2>(GetArenaNoVirtual());
    position_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ubii.dataStructure.TouchEvent.position)
  return position_;
}
inline void TouchEvent::set_allocated_position(::ubii::dataStructure::Vector2* position) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(position_);
  }
  if (position) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      position = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    
  } else {
    
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:ubii.dataStructure.TouchEvent.position)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace dataStructure
}  // namespace ubii

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2ftouchEvent_2eproto
