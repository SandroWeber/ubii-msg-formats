// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/topicData/topicDataRecord/dataStructure/lists.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2flists_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2flists_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3010000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3010000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2flists_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2flists_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2flists_2eproto;
namespace ubii {
namespace dataStructure {
class BoolList;
class BoolListDefaultTypeInternal;
extern BoolListDefaultTypeInternal _BoolList_default_instance_;
class DoubleList;
class DoubleListDefaultTypeInternal;
extern DoubleListDefaultTypeInternal _DoubleList_default_instance_;
class FloatList;
class FloatListDefaultTypeInternal;
extern FloatListDefaultTypeInternal _FloatList_default_instance_;
class Int32List;
class Int32ListDefaultTypeInternal;
extern Int32ListDefaultTypeInternal _Int32List_default_instance_;
class StringList;
class StringListDefaultTypeInternal;
extern StringListDefaultTypeInternal _StringList_default_instance_;
}  // namespace dataStructure
}  // namespace ubii
PROTOBUF_NAMESPACE_OPEN
template<> ::ubii::dataStructure::BoolList* Arena::CreateMaybeMessage<::ubii::dataStructure::BoolList>(Arena*);
template<> ::ubii::dataStructure::DoubleList* Arena::CreateMaybeMessage<::ubii::dataStructure::DoubleList>(Arena*);
template<> ::ubii::dataStructure::FloatList* Arena::CreateMaybeMessage<::ubii::dataStructure::FloatList>(Arena*);
template<> ::ubii::dataStructure::Int32List* Arena::CreateMaybeMessage<::ubii::dataStructure::Int32List>(Arena*);
template<> ::ubii::dataStructure::StringList* Arena::CreateMaybeMessage<::ubii::dataStructure::StringList>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace ubii {
namespace dataStructure {

// ===================================================================

class StringList :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ubii.dataStructure.StringList) */ {
 public:
  StringList();
  virtual ~StringList();

  StringList(const StringList& from);
  StringList(StringList&& from) noexcept
    : StringList() {
    *this = ::std::move(from);
  }

  inline StringList& operator=(const StringList& from) {
    CopyFrom(from);
    return *this;
  }
  inline StringList& operator=(StringList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StringList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StringList* internal_default_instance() {
    return reinterpret_cast<const StringList*>(
               &_StringList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(StringList& a, StringList& b) {
    a.Swap(&b);
  }
  inline void Swap(StringList* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StringList* New() const final {
    return CreateMaybeMessage<StringList>(nullptr);
  }

  StringList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StringList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const StringList& from);
  void MergeFrom(const StringList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StringList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ubii.dataStructure.StringList";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2flists_2eproto);
    return ::descriptor_table_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2flists_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kElementsFieldNumber = 1,
  };
  // repeated string elements = 1;
  int elements_size() const;
  private:
  int _internal_elements_size() const;
  public:
  void clear_elements();
  const std::string& elements(int index) const;
  std::string* mutable_elements(int index);
  void set_elements(int index, const std::string& value);
  void set_elements(int index, std::string&& value);
  void set_elements(int index, const char* value);
  void set_elements(int index, const char* value, size_t size);
  std::string* add_elements();
  void add_elements(const std::string& value);
  void add_elements(std::string&& value);
  void add_elements(const char* value);
  void add_elements(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& elements() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_elements();
  private:
  const std::string& _internal_elements(int index) const;
  std::string* _internal_add_elements();
  public:

  // @@protoc_insertion_point(class_scope:ubii.dataStructure.StringList)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> elements_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2flists_2eproto;
};
// -------------------------------------------------------------------

class DoubleList :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ubii.dataStructure.DoubleList) */ {
 public:
  DoubleList();
  virtual ~DoubleList();

  DoubleList(const DoubleList& from);
  DoubleList(DoubleList&& from) noexcept
    : DoubleList() {
    *this = ::std::move(from);
  }

  inline DoubleList& operator=(const DoubleList& from) {
    CopyFrom(from);
    return *this;
  }
  inline DoubleList& operator=(DoubleList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DoubleList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DoubleList* internal_default_instance() {
    return reinterpret_cast<const DoubleList*>(
               &_DoubleList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(DoubleList& a, DoubleList& b) {
    a.Swap(&b);
  }
  inline void Swap(DoubleList* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DoubleList* New() const final {
    return CreateMaybeMessage<DoubleList>(nullptr);
  }

  DoubleList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DoubleList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DoubleList& from);
  void MergeFrom(const DoubleList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DoubleList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ubii.dataStructure.DoubleList";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2flists_2eproto);
    return ::descriptor_table_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2flists_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kElementsFieldNumber = 1,
  };
  // repeated double elements = 1;
  int elements_size() const;
  private:
  int _internal_elements_size() const;
  public:
  void clear_elements();
  private:
  double _internal_elements(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_elements() const;
  void _internal_add_elements(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_elements();
  public:
  double elements(int index) const;
  void set_elements(int index, double value);
  void add_elements(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      elements() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_elements();

  // @@protoc_insertion_point(class_scope:ubii.dataStructure.DoubleList)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > elements_;
  mutable std::atomic<int> _elements_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2flists_2eproto;
};
// -------------------------------------------------------------------

class FloatList :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ubii.dataStructure.FloatList) */ {
 public:
  FloatList();
  virtual ~FloatList();

  FloatList(const FloatList& from);
  FloatList(FloatList&& from) noexcept
    : FloatList() {
    *this = ::std::move(from);
  }

  inline FloatList& operator=(const FloatList& from) {
    CopyFrom(from);
    return *this;
  }
  inline FloatList& operator=(FloatList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FloatList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FloatList* internal_default_instance() {
    return reinterpret_cast<const FloatList*>(
               &_FloatList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(FloatList& a, FloatList& b) {
    a.Swap(&b);
  }
  inline void Swap(FloatList* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FloatList* New() const final {
    return CreateMaybeMessage<FloatList>(nullptr);
  }

  FloatList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FloatList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FloatList& from);
  void MergeFrom(const FloatList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FloatList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ubii.dataStructure.FloatList";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2flists_2eproto);
    return ::descriptor_table_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2flists_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kElementsFieldNumber = 1,
  };
  // repeated float elements = 1;
  int elements_size() const;
  private:
  int _internal_elements_size() const;
  public:
  void clear_elements();
  private:
  float _internal_elements(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_elements() const;
  void _internal_add_elements(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_elements();
  public:
  float elements(int index) const;
  void set_elements(int index, float value);
  void add_elements(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      elements() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_elements();

  // @@protoc_insertion_point(class_scope:ubii.dataStructure.FloatList)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > elements_;
  mutable std::atomic<int> _elements_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2flists_2eproto;
};
// -------------------------------------------------------------------

class BoolList :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ubii.dataStructure.BoolList) */ {
 public:
  BoolList();
  virtual ~BoolList();

  BoolList(const BoolList& from);
  BoolList(BoolList&& from) noexcept
    : BoolList() {
    *this = ::std::move(from);
  }

  inline BoolList& operator=(const BoolList& from) {
    CopyFrom(from);
    return *this;
  }
  inline BoolList& operator=(BoolList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BoolList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BoolList* internal_default_instance() {
    return reinterpret_cast<const BoolList*>(
               &_BoolList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(BoolList& a, BoolList& b) {
    a.Swap(&b);
  }
  inline void Swap(BoolList* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BoolList* New() const final {
    return CreateMaybeMessage<BoolList>(nullptr);
  }

  BoolList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BoolList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BoolList& from);
  void MergeFrom(const BoolList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BoolList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ubii.dataStructure.BoolList";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2flists_2eproto);
    return ::descriptor_table_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2flists_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kElementsFieldNumber = 1,
  };
  // repeated bool elements = 1;
  int elements_size() const;
  private:
  int _internal_elements_size() const;
  public:
  void clear_elements();
  private:
  bool _internal_elements(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      _internal_elements() const;
  void _internal_add_elements(bool value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      _internal_mutable_elements();
  public:
  bool elements(int index) const;
  void set_elements(int index, bool value);
  void add_elements(bool value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      elements() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      mutable_elements();

  // @@protoc_insertion_point(class_scope:ubii.dataStructure.BoolList)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool > elements_;
  mutable std::atomic<int> _elements_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2flists_2eproto;
};
// -------------------------------------------------------------------

class Int32List :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ubii.dataStructure.Int32List) */ {
 public:
  Int32List();
  virtual ~Int32List();

  Int32List(const Int32List& from);
  Int32List(Int32List&& from) noexcept
    : Int32List() {
    *this = ::std::move(from);
  }

  inline Int32List& operator=(const Int32List& from) {
    CopyFrom(from);
    return *this;
  }
  inline Int32List& operator=(Int32List&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Int32List& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Int32List* internal_default_instance() {
    return reinterpret_cast<const Int32List*>(
               &_Int32List_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(Int32List& a, Int32List& b) {
    a.Swap(&b);
  }
  inline void Swap(Int32List* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Int32List* New() const final {
    return CreateMaybeMessage<Int32List>(nullptr);
  }

  Int32List* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Int32List>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Int32List& from);
  void MergeFrom(const Int32List& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Int32List* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ubii.dataStructure.Int32List";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2flists_2eproto);
    return ::descriptor_table_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2flists_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kElementsFieldNumber = 1,
  };
  // repeated int32 elements = 1;
  int elements_size() const;
  private:
  int _internal_elements_size() const;
  public:
  void clear_elements();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_elements(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_elements() const;
  void _internal_add_elements(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_elements();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 elements(int index) const;
  void set_elements(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_elements(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      elements() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_elements();

  // @@protoc_insertion_point(class_scope:ubii.dataStructure.Int32List)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > elements_;
  mutable std::atomic<int> _elements_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2flists_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// StringList

// repeated string elements = 1;
inline int StringList::_internal_elements_size() const {
  return elements_.size();
}
inline int StringList::elements_size() const {
  return _internal_elements_size();
}
inline void StringList::clear_elements() {
  elements_.Clear();
}
inline std::string* StringList::add_elements() {
  // @@protoc_insertion_point(field_add_mutable:ubii.dataStructure.StringList.elements)
  return _internal_add_elements();
}
inline const std::string& StringList::_internal_elements(int index) const {
  return elements_.Get(index);
}
inline const std::string& StringList::elements(int index) const {
  // @@protoc_insertion_point(field_get:ubii.dataStructure.StringList.elements)
  return _internal_elements(index);
}
inline std::string* StringList::mutable_elements(int index) {
  // @@protoc_insertion_point(field_mutable:ubii.dataStructure.StringList.elements)
  return elements_.Mutable(index);
}
inline void StringList::set_elements(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:ubii.dataStructure.StringList.elements)
  elements_.Mutable(index)->assign(value);
}
inline void StringList::set_elements(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:ubii.dataStructure.StringList.elements)
  elements_.Mutable(index)->assign(std::move(value));
}
inline void StringList::set_elements(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  elements_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ubii.dataStructure.StringList.elements)
}
inline void StringList::set_elements(int index, const char* value, size_t size) {
  elements_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ubii.dataStructure.StringList.elements)
}
inline std::string* StringList::_internal_add_elements() {
  return elements_.Add();
}
inline void StringList::add_elements(const std::string& value) {
  elements_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ubii.dataStructure.StringList.elements)
}
inline void StringList::add_elements(std::string&& value) {
  elements_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ubii.dataStructure.StringList.elements)
}
inline void StringList::add_elements(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  elements_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ubii.dataStructure.StringList.elements)
}
inline void StringList::add_elements(const char* value, size_t size) {
  elements_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ubii.dataStructure.StringList.elements)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
StringList::elements() const {
  // @@protoc_insertion_point(field_list:ubii.dataStructure.StringList.elements)
  return elements_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
StringList::mutable_elements() {
  // @@protoc_insertion_point(field_mutable_list:ubii.dataStructure.StringList.elements)
  return &elements_;
}

// -------------------------------------------------------------------

// DoubleList

// repeated double elements = 1;
inline int DoubleList::_internal_elements_size() const {
  return elements_.size();
}
inline int DoubleList::elements_size() const {
  return _internal_elements_size();
}
inline void DoubleList::clear_elements() {
  elements_.Clear();
}
inline double DoubleList::_internal_elements(int index) const {
  return elements_.Get(index);
}
inline double DoubleList::elements(int index) const {
  // @@protoc_insertion_point(field_get:ubii.dataStructure.DoubleList.elements)
  return _internal_elements(index);
}
inline void DoubleList::set_elements(int index, double value) {
  elements_.Set(index, value);
  // @@protoc_insertion_point(field_set:ubii.dataStructure.DoubleList.elements)
}
inline void DoubleList::_internal_add_elements(double value) {
  elements_.Add(value);
}
inline void DoubleList::add_elements(double value) {
  _internal_add_elements(value);
  // @@protoc_insertion_point(field_add:ubii.dataStructure.DoubleList.elements)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
DoubleList::_internal_elements() const {
  return elements_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
DoubleList::elements() const {
  // @@protoc_insertion_point(field_list:ubii.dataStructure.DoubleList.elements)
  return _internal_elements();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
DoubleList::_internal_mutable_elements() {
  return &elements_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
DoubleList::mutable_elements() {
  // @@protoc_insertion_point(field_mutable_list:ubii.dataStructure.DoubleList.elements)
  return _internal_mutable_elements();
}

// -------------------------------------------------------------------

// FloatList

// repeated float elements = 1;
inline int FloatList::_internal_elements_size() const {
  return elements_.size();
}
inline int FloatList::elements_size() const {
  return _internal_elements_size();
}
inline void FloatList::clear_elements() {
  elements_.Clear();
}
inline float FloatList::_internal_elements(int index) const {
  return elements_.Get(index);
}
inline float FloatList::elements(int index) const {
  // @@protoc_insertion_point(field_get:ubii.dataStructure.FloatList.elements)
  return _internal_elements(index);
}
inline void FloatList::set_elements(int index, float value) {
  elements_.Set(index, value);
  // @@protoc_insertion_point(field_set:ubii.dataStructure.FloatList.elements)
}
inline void FloatList::_internal_add_elements(float value) {
  elements_.Add(value);
}
inline void FloatList::add_elements(float value) {
  _internal_add_elements(value);
  // @@protoc_insertion_point(field_add:ubii.dataStructure.FloatList.elements)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
FloatList::_internal_elements() const {
  return elements_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
FloatList::elements() const {
  // @@protoc_insertion_point(field_list:ubii.dataStructure.FloatList.elements)
  return _internal_elements();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
FloatList::_internal_mutable_elements() {
  return &elements_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
FloatList::mutable_elements() {
  // @@protoc_insertion_point(field_mutable_list:ubii.dataStructure.FloatList.elements)
  return _internal_mutable_elements();
}

// -------------------------------------------------------------------

// BoolList

// repeated bool elements = 1;
inline int BoolList::_internal_elements_size() const {
  return elements_.size();
}
inline int BoolList::elements_size() const {
  return _internal_elements_size();
}
inline void BoolList::clear_elements() {
  elements_.Clear();
}
inline bool BoolList::_internal_elements(int index) const {
  return elements_.Get(index);
}
inline bool BoolList::elements(int index) const {
  // @@protoc_insertion_point(field_get:ubii.dataStructure.BoolList.elements)
  return _internal_elements(index);
}
inline void BoolList::set_elements(int index, bool value) {
  elements_.Set(index, value);
  // @@protoc_insertion_point(field_set:ubii.dataStructure.BoolList.elements)
}
inline void BoolList::_internal_add_elements(bool value) {
  elements_.Add(value);
}
inline void BoolList::add_elements(bool value) {
  _internal_add_elements(value);
  // @@protoc_insertion_point(field_add:ubii.dataStructure.BoolList.elements)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
BoolList::_internal_elements() const {
  return elements_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
BoolList::elements() const {
  // @@protoc_insertion_point(field_list:ubii.dataStructure.BoolList.elements)
  return _internal_elements();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
BoolList::_internal_mutable_elements() {
  return &elements_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
BoolList::mutable_elements() {
  // @@protoc_insertion_point(field_mutable_list:ubii.dataStructure.BoolList.elements)
  return _internal_mutable_elements();
}

// -------------------------------------------------------------------

// Int32List

// repeated int32 elements = 1;
inline int Int32List::_internal_elements_size() const {
  return elements_.size();
}
inline int Int32List::elements_size() const {
  return _internal_elements_size();
}
inline void Int32List::clear_elements() {
  elements_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Int32List::_internal_elements(int index) const {
  return elements_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Int32List::elements(int index) const {
  // @@protoc_insertion_point(field_get:ubii.dataStructure.Int32List.elements)
  return _internal_elements(index);
}
inline void Int32List::set_elements(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  elements_.Set(index, value);
  // @@protoc_insertion_point(field_set:ubii.dataStructure.Int32List.elements)
}
inline void Int32List::_internal_add_elements(::PROTOBUF_NAMESPACE_ID::int32 value) {
  elements_.Add(value);
}
inline void Int32List::add_elements(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_elements(value);
  // @@protoc_insertion_point(field_add:ubii.dataStructure.Int32List.elements)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
Int32List::_internal_elements() const {
  return elements_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
Int32List::elements() const {
  // @@protoc_insertion_point(field_list:ubii.dataStructure.Int32List.elements)
  return _internal_elements();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
Int32List::_internal_mutable_elements() {
  return &elements_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
Int32List::mutable_elements() {
  // @@protoc_insertion_point(field_mutable_list:ubii.dataStructure.Int32List.elements)
  return _internal_mutable_elements();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace dataStructure
}  // namespace ubii

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2flists_2eproto
