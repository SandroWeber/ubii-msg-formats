// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/topicData/topicDataRecord/dataStructure/lists.proto

#ifndef PROTOBUF_INCLUDED_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2flists_2eproto
#define PROTOBUF_INCLUDED_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2flists_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2flists_2eproto 

namespace protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2flists_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[5];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2flists_2eproto
namespace ubii {
namespace dataStructure {
class BoolList;
class BoolListDefaultTypeInternal;
extern BoolListDefaultTypeInternal _BoolList_default_instance_;
class DoubleList;
class DoubleListDefaultTypeInternal;
extern DoubleListDefaultTypeInternal _DoubleList_default_instance_;
class FloatList;
class FloatListDefaultTypeInternal;
extern FloatListDefaultTypeInternal _FloatList_default_instance_;
class Int32List;
class Int32ListDefaultTypeInternal;
extern Int32ListDefaultTypeInternal _Int32List_default_instance_;
class StringList;
class StringListDefaultTypeInternal;
extern StringListDefaultTypeInternal _StringList_default_instance_;
}  // namespace dataStructure
}  // namespace ubii
namespace google {
namespace protobuf {
template<> ::ubii::dataStructure::BoolList* Arena::CreateMaybeMessage<::ubii::dataStructure::BoolList>(Arena*);
template<> ::ubii::dataStructure::DoubleList* Arena::CreateMaybeMessage<::ubii::dataStructure::DoubleList>(Arena*);
template<> ::ubii::dataStructure::FloatList* Arena::CreateMaybeMessage<::ubii::dataStructure::FloatList>(Arena*);
template<> ::ubii::dataStructure::Int32List* Arena::CreateMaybeMessage<::ubii::dataStructure::Int32List>(Arena*);
template<> ::ubii::dataStructure::StringList* Arena::CreateMaybeMessage<::ubii::dataStructure::StringList>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace ubii {
namespace dataStructure {

// ===================================================================

class StringList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ubii.dataStructure.StringList) */ {
 public:
  StringList();
  virtual ~StringList();

  StringList(const StringList& from);

  inline StringList& operator=(const StringList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StringList(StringList&& from) noexcept
    : StringList() {
    *this = ::std::move(from);
  }

  inline StringList& operator=(StringList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StringList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StringList* internal_default_instance() {
    return reinterpret_cast<const StringList*>(
               &_StringList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(StringList* other);
  friend void swap(StringList& a, StringList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StringList* New() const final {
    return CreateMaybeMessage<StringList>(NULL);
  }

  StringList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StringList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StringList& from);
  void MergeFrom(const StringList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StringList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string elements = 1;
  int elements_size() const;
  void clear_elements();
  static const int kElementsFieldNumber = 1;
  const ::std::string& elements(int index) const;
  ::std::string* mutable_elements(int index);
  void set_elements(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_elements(int index, ::std::string&& value);
  #endif
  void set_elements(int index, const char* value);
  void set_elements(int index, const char* value, size_t size);
  ::std::string* add_elements();
  void add_elements(const ::std::string& value);
  #if LANG_CXX11
  void add_elements(::std::string&& value);
  #endif
  void add_elements(const char* value);
  void add_elements(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& elements() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_elements();

  // @@protoc_insertion_point(class_scope:ubii.dataStructure.StringList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> elements_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2flists_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DoubleList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ubii.dataStructure.DoubleList) */ {
 public:
  DoubleList();
  virtual ~DoubleList();

  DoubleList(const DoubleList& from);

  inline DoubleList& operator=(const DoubleList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DoubleList(DoubleList&& from) noexcept
    : DoubleList() {
    *this = ::std::move(from);
  }

  inline DoubleList& operator=(DoubleList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DoubleList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DoubleList* internal_default_instance() {
    return reinterpret_cast<const DoubleList*>(
               &_DoubleList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(DoubleList* other);
  friend void swap(DoubleList& a, DoubleList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DoubleList* New() const final {
    return CreateMaybeMessage<DoubleList>(NULL);
  }

  DoubleList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DoubleList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DoubleList& from);
  void MergeFrom(const DoubleList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DoubleList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double elements = 1;
  int elements_size() const;
  void clear_elements();
  static const int kElementsFieldNumber = 1;
  double elements(int index) const;
  void set_elements(int index, double value);
  void add_elements(double value);
  const ::google::protobuf::RepeatedField< double >&
      elements() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_elements();

  // @@protoc_insertion_point(class_scope:ubii.dataStructure.DoubleList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > elements_;
  mutable int _elements_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2flists_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FloatList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ubii.dataStructure.FloatList) */ {
 public:
  FloatList();
  virtual ~FloatList();

  FloatList(const FloatList& from);

  inline FloatList& operator=(const FloatList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FloatList(FloatList&& from) noexcept
    : FloatList() {
    *this = ::std::move(from);
  }

  inline FloatList& operator=(FloatList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FloatList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FloatList* internal_default_instance() {
    return reinterpret_cast<const FloatList*>(
               &_FloatList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(FloatList* other);
  friend void swap(FloatList& a, FloatList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FloatList* New() const final {
    return CreateMaybeMessage<FloatList>(NULL);
  }

  FloatList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FloatList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FloatList& from);
  void MergeFrom(const FloatList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FloatList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float elements = 1;
  int elements_size() const;
  void clear_elements();
  static const int kElementsFieldNumber = 1;
  float elements(int index) const;
  void set_elements(int index, float value);
  void add_elements(float value);
  const ::google::protobuf::RepeatedField< float >&
      elements() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_elements();

  // @@protoc_insertion_point(class_scope:ubii.dataStructure.FloatList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > elements_;
  mutable int _elements_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2flists_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BoolList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ubii.dataStructure.BoolList) */ {
 public:
  BoolList();
  virtual ~BoolList();

  BoolList(const BoolList& from);

  inline BoolList& operator=(const BoolList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BoolList(BoolList&& from) noexcept
    : BoolList() {
    *this = ::std::move(from);
  }

  inline BoolList& operator=(BoolList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BoolList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BoolList* internal_default_instance() {
    return reinterpret_cast<const BoolList*>(
               &_BoolList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(BoolList* other);
  friend void swap(BoolList& a, BoolList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BoolList* New() const final {
    return CreateMaybeMessage<BoolList>(NULL);
  }

  BoolList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BoolList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BoolList& from);
  void MergeFrom(const BoolList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BoolList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bool elements = 1;
  int elements_size() const;
  void clear_elements();
  static const int kElementsFieldNumber = 1;
  bool elements(int index) const;
  void set_elements(int index, bool value);
  void add_elements(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      elements() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_elements();

  // @@protoc_insertion_point(class_scope:ubii.dataStructure.BoolList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< bool > elements_;
  mutable int _elements_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2flists_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Int32List : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ubii.dataStructure.Int32List) */ {
 public:
  Int32List();
  virtual ~Int32List();

  Int32List(const Int32List& from);

  inline Int32List& operator=(const Int32List& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Int32List(Int32List&& from) noexcept
    : Int32List() {
    *this = ::std::move(from);
  }

  inline Int32List& operator=(Int32List&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Int32List& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Int32List* internal_default_instance() {
    return reinterpret_cast<const Int32List*>(
               &_Int32List_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(Int32List* other);
  friend void swap(Int32List& a, Int32List& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Int32List* New() const final {
    return CreateMaybeMessage<Int32List>(NULL);
  }

  Int32List* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Int32List>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Int32List& from);
  void MergeFrom(const Int32List& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Int32List* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 elements = 1;
  int elements_size() const;
  void clear_elements();
  static const int kElementsFieldNumber = 1;
  ::google::protobuf::int32 elements(int index) const;
  void set_elements(int index, ::google::protobuf::int32 value);
  void add_elements(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      elements() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_elements();

  // @@protoc_insertion_point(class_scope:ubii.dataStructure.Int32List)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > elements_;
  mutable int _elements_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2flists_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// StringList

// repeated string elements = 1;
inline int StringList::elements_size() const {
  return elements_.size();
}
inline void StringList::clear_elements() {
  elements_.Clear();
}
inline const ::std::string& StringList::elements(int index) const {
  // @@protoc_insertion_point(field_get:ubii.dataStructure.StringList.elements)
  return elements_.Get(index);
}
inline ::std::string* StringList::mutable_elements(int index) {
  // @@protoc_insertion_point(field_mutable:ubii.dataStructure.StringList.elements)
  return elements_.Mutable(index);
}
inline void StringList::set_elements(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ubii.dataStructure.StringList.elements)
  elements_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void StringList::set_elements(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ubii.dataStructure.StringList.elements)
  elements_.Mutable(index)->assign(std::move(value));
}
#endif
inline void StringList::set_elements(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  elements_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ubii.dataStructure.StringList.elements)
}
inline void StringList::set_elements(int index, const char* value, size_t size) {
  elements_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ubii.dataStructure.StringList.elements)
}
inline ::std::string* StringList::add_elements() {
  // @@protoc_insertion_point(field_add_mutable:ubii.dataStructure.StringList.elements)
  return elements_.Add();
}
inline void StringList::add_elements(const ::std::string& value) {
  elements_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ubii.dataStructure.StringList.elements)
}
#if LANG_CXX11
inline void StringList::add_elements(::std::string&& value) {
  elements_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ubii.dataStructure.StringList.elements)
}
#endif
inline void StringList::add_elements(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  elements_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ubii.dataStructure.StringList.elements)
}
inline void StringList::add_elements(const char* value, size_t size) {
  elements_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ubii.dataStructure.StringList.elements)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
StringList::elements() const {
  // @@protoc_insertion_point(field_list:ubii.dataStructure.StringList.elements)
  return elements_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
StringList::mutable_elements() {
  // @@protoc_insertion_point(field_mutable_list:ubii.dataStructure.StringList.elements)
  return &elements_;
}

// -------------------------------------------------------------------

// DoubleList

// repeated double elements = 1;
inline int DoubleList::elements_size() const {
  return elements_.size();
}
inline void DoubleList::clear_elements() {
  elements_.Clear();
}
inline double DoubleList::elements(int index) const {
  // @@protoc_insertion_point(field_get:ubii.dataStructure.DoubleList.elements)
  return elements_.Get(index);
}
inline void DoubleList::set_elements(int index, double value) {
  elements_.Set(index, value);
  // @@protoc_insertion_point(field_set:ubii.dataStructure.DoubleList.elements)
}
inline void DoubleList::add_elements(double value) {
  elements_.Add(value);
  // @@protoc_insertion_point(field_add:ubii.dataStructure.DoubleList.elements)
}
inline const ::google::protobuf::RepeatedField< double >&
DoubleList::elements() const {
  // @@protoc_insertion_point(field_list:ubii.dataStructure.DoubleList.elements)
  return elements_;
}
inline ::google::protobuf::RepeatedField< double >*
DoubleList::mutable_elements() {
  // @@protoc_insertion_point(field_mutable_list:ubii.dataStructure.DoubleList.elements)
  return &elements_;
}

// -------------------------------------------------------------------

// FloatList

// repeated float elements = 1;
inline int FloatList::elements_size() const {
  return elements_.size();
}
inline void FloatList::clear_elements() {
  elements_.Clear();
}
inline float FloatList::elements(int index) const {
  // @@protoc_insertion_point(field_get:ubii.dataStructure.FloatList.elements)
  return elements_.Get(index);
}
inline void FloatList::set_elements(int index, float value) {
  elements_.Set(index, value);
  // @@protoc_insertion_point(field_set:ubii.dataStructure.FloatList.elements)
}
inline void FloatList::add_elements(float value) {
  elements_.Add(value);
  // @@protoc_insertion_point(field_add:ubii.dataStructure.FloatList.elements)
}
inline const ::google::protobuf::RepeatedField< float >&
FloatList::elements() const {
  // @@protoc_insertion_point(field_list:ubii.dataStructure.FloatList.elements)
  return elements_;
}
inline ::google::protobuf::RepeatedField< float >*
FloatList::mutable_elements() {
  // @@protoc_insertion_point(field_mutable_list:ubii.dataStructure.FloatList.elements)
  return &elements_;
}

// -------------------------------------------------------------------

// BoolList

// repeated bool elements = 1;
inline int BoolList::elements_size() const {
  return elements_.size();
}
inline void BoolList::clear_elements() {
  elements_.Clear();
}
inline bool BoolList::elements(int index) const {
  // @@protoc_insertion_point(field_get:ubii.dataStructure.BoolList.elements)
  return elements_.Get(index);
}
inline void BoolList::set_elements(int index, bool value) {
  elements_.Set(index, value);
  // @@protoc_insertion_point(field_set:ubii.dataStructure.BoolList.elements)
}
inline void BoolList::add_elements(bool value) {
  elements_.Add(value);
  // @@protoc_insertion_point(field_add:ubii.dataStructure.BoolList.elements)
}
inline const ::google::protobuf::RepeatedField< bool >&
BoolList::elements() const {
  // @@protoc_insertion_point(field_list:ubii.dataStructure.BoolList.elements)
  return elements_;
}
inline ::google::protobuf::RepeatedField< bool >*
BoolList::mutable_elements() {
  // @@protoc_insertion_point(field_mutable_list:ubii.dataStructure.BoolList.elements)
  return &elements_;
}

// -------------------------------------------------------------------

// Int32List

// repeated int32 elements = 1;
inline int Int32List::elements_size() const {
  return elements_.size();
}
inline void Int32List::clear_elements() {
  elements_.Clear();
}
inline ::google::protobuf::int32 Int32List::elements(int index) const {
  // @@protoc_insertion_point(field_get:ubii.dataStructure.Int32List.elements)
  return elements_.Get(index);
}
inline void Int32List::set_elements(int index, ::google::protobuf::int32 value) {
  elements_.Set(index, value);
  // @@protoc_insertion_point(field_set:ubii.dataStructure.Int32List.elements)
}
inline void Int32List::add_elements(::google::protobuf::int32 value) {
  elements_.Add(value);
  // @@protoc_insertion_point(field_add:ubii.dataStructure.Int32List.elements)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Int32List::elements() const {
  // @@protoc_insertion_point(field_list:ubii.dataStructure.Int32List.elements)
  return elements_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Int32List::mutable_elements() {
  // @@protoc_insertion_point(field_mutable_list:ubii.dataStructure.Int32List.elements)
  return &elements_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace dataStructure
}  // namespace ubii

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2flists_2eproto
