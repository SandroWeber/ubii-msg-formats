// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/topicData/topicDataRecord/dataStructure/touchEvent.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "proto/topicData/topicDataRecord/dataStructure/touchEvent.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ubii {
namespace dataStructure {

namespace {

const ::google::protobuf::Descriptor* TouchEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TouchEvent_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2ftouchEvent_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2ftouchEvent_2eproto() {
  protobuf_AddDesc_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2ftouchEvent_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "proto/topicData/topicDataRecord/dataStructure/touchEvent.proto");
  GOOGLE_CHECK(file != NULL);
  TouchEvent_descriptor_ = file->message_type(0);
  static const int TouchEvent_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TouchEvent, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TouchEvent, position_),
  };
  TouchEvent_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TouchEvent_descriptor_,
      TouchEvent::default_instance_,
      TouchEvent_offsets_,
      -1,
      -1,
      -1,
      sizeof(TouchEvent),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TouchEvent, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TouchEvent, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2ftouchEvent_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TouchEvent_descriptor_, &TouchEvent::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2ftouchEvent_2eproto() {
  delete TouchEvent::default_instance_;
  delete TouchEvent_reflection_;
}

void protobuf_AddDesc_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2ftouchEvent_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2ftouchEvent_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::ubii::dataStructure::protobuf_AddDesc_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fbuttonEventType_2eproto();
  ::ubii::dataStructure::protobuf_AddDesc_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector2_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n>proto/topicData/topicDataRecord/dataSt"
    "ructure/touchEvent.proto\022\022ubii.dataStruc"
    "ture\032Cproto/topicData/topicDataRecord/da"
    "taStructure/buttonEventType.proto\032;proto"
    "/topicData/topicDataRecord/dataStructure"
    "/vector2.proto\"n\n\nTouchEvent\0221\n\004type\030\001 \001"
    "(\0162#.ubii.dataStructure.ButtonEventType\022"
    "-\n\010position\030\002 \001(\0132\033.ubii.dataStructure.V"
    "ector2b\006proto3", 334);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proto/topicData/topicDataRecord/dataStructure/touchEvent.proto", &protobuf_RegisterTypes);
  TouchEvent::default_instance_ = new TouchEvent();
  TouchEvent::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2ftouchEvent_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2ftouchEvent_2eproto {
  StaticDescriptorInitializer_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2ftouchEvent_2eproto() {
    protobuf_AddDesc_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2ftouchEvent_2eproto();
  }
} static_descriptor_initializer_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2ftouchEvent_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TouchEvent::kTypeFieldNumber;
const int TouchEvent::kPositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TouchEvent::TouchEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ubii.dataStructure.TouchEvent)
}

void TouchEvent::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  position_ = const_cast< ::ubii::dataStructure::Vector2*>(&::ubii::dataStructure::Vector2::default_instance());
}

TouchEvent::TouchEvent(const TouchEvent& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ubii.dataStructure.TouchEvent)
}

void TouchEvent::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  type_ = 0;
  position_ = NULL;
}

TouchEvent::~TouchEvent() {
  // @@protoc_insertion_point(destructor:ubii.dataStructure.TouchEvent)
  SharedDtor();
}

void TouchEvent::SharedDtor() {
  if (this != default_instance_) {
    delete position_;
  }
}

void TouchEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TouchEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TouchEvent_descriptor_;
}

const TouchEvent& TouchEvent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2ftouchEvent_2eproto();
  return *default_instance_;
}

TouchEvent* TouchEvent::default_instance_ = NULL;

TouchEvent* TouchEvent::New(::google::protobuf::Arena* arena) const {
  TouchEvent* n = new TouchEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TouchEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:ubii.dataStructure.TouchEvent)
  type_ = 0;
  if (GetArenaNoVirtual() == NULL && position_ != NULL) delete position_;
  position_ = NULL;
}

bool TouchEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ubii.dataStructure.TouchEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ubii.dataStructure.ButtonEventType type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::ubii::dataStructure::ButtonEventType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_position;
        break;
      }

      // optional .ubii.dataStructure.Vector2 position = 2;
      case 2: {
        if (tag == 18) {
         parse_position:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ubii.dataStructure.TouchEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ubii.dataStructure.TouchEvent)
  return false;
#undef DO_
}

void TouchEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ubii.dataStructure.TouchEvent)
  // optional .ubii.dataStructure.ButtonEventType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional .ubii.dataStructure.Vector2 position = 2;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->position_, output);
  }

  // @@protoc_insertion_point(serialize_end:ubii.dataStructure.TouchEvent)
}

::google::protobuf::uint8* TouchEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ubii.dataStructure.TouchEvent)
  // optional .ubii.dataStructure.ButtonEventType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional .ubii.dataStructure.Vector2 position = 2;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->position_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ubii.dataStructure.TouchEvent)
  return target;
}

int TouchEvent::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ubii.dataStructure.TouchEvent)
  int total_size = 0;

  // optional .ubii.dataStructure.ButtonEventType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // optional .ubii.dataStructure.Vector2 position = 2;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->position_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TouchEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ubii.dataStructure.TouchEvent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TouchEvent* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TouchEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ubii.dataStructure.TouchEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ubii.dataStructure.TouchEvent)
    MergeFrom(*source);
  }
}

void TouchEvent::MergeFrom(const TouchEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ubii.dataStructure.TouchEvent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.has_position()) {
    mutable_position()->::ubii::dataStructure::Vector2::MergeFrom(from.position());
  }
}

void TouchEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ubii.dataStructure.TouchEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TouchEvent::CopyFrom(const TouchEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ubii.dataStructure.TouchEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TouchEvent::IsInitialized() const {

  return true;
}

void TouchEvent::Swap(TouchEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TouchEvent::InternalSwap(TouchEvent* other) {
  std::swap(type_, other->type_);
  std::swap(position_, other->position_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TouchEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TouchEvent_descriptor_;
  metadata.reflection = TouchEvent_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TouchEvent

// optional .ubii.dataStructure.ButtonEventType type = 1;
void TouchEvent::clear_type() {
  type_ = 0;
}
 ::ubii::dataStructure::ButtonEventType TouchEvent::type() const {
  // @@protoc_insertion_point(field_get:ubii.dataStructure.TouchEvent.type)
  return static_cast< ::ubii::dataStructure::ButtonEventType >(type_);
}
 void TouchEvent::set_type(::ubii::dataStructure::ButtonEventType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:ubii.dataStructure.TouchEvent.type)
}

// optional .ubii.dataStructure.Vector2 position = 2;
bool TouchEvent::has_position() const {
  return !_is_default_instance_ && position_ != NULL;
}
void TouchEvent::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) delete position_;
  position_ = NULL;
}
const ::ubii::dataStructure::Vector2& TouchEvent::position() const {
  // @@protoc_insertion_point(field_get:ubii.dataStructure.TouchEvent.position)
  return position_ != NULL ? *position_ : *default_instance_->position_;
}
::ubii::dataStructure::Vector2* TouchEvent::mutable_position() {
  
  if (position_ == NULL) {
    position_ = new ::ubii::dataStructure::Vector2;
  }
  // @@protoc_insertion_point(field_mutable:ubii.dataStructure.TouchEvent.position)
  return position_;
}
::ubii::dataStructure::Vector2* TouchEvent::release_position() {
  // @@protoc_insertion_point(field_release:ubii.dataStructure.TouchEvent.position)
  
  ::ubii::dataStructure::Vector2* temp = position_;
  position_ = NULL;
  return temp;
}
void TouchEvent::set_allocated_position(::ubii::dataStructure::Vector2* position) {
  delete position_;
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ubii.dataStructure.TouchEvent.position)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace dataStructure
}  // namespace ubii

// @@protoc_insertion_point(global_scope)
