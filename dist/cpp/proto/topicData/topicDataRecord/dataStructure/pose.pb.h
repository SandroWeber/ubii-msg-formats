// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/topicData/topicDataRecord/dataStructure/pose.proto

#ifndef PROTOBUF_INCLUDED_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fpose_2eproto
#define PROTOBUF_INCLUDED_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fpose_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "proto/topicData/topicDataRecord/dataStructure/vector3.pb.h"
#include "proto/topicData/topicDataRecord/dataStructure/quaternion.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fpose_2eproto 

namespace protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fpose_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fpose_2eproto
namespace ubii {
namespace dataStructure {
class Pose;
class PoseDefaultTypeInternal;
extern PoseDefaultTypeInternal _Pose_default_instance_;
}  // namespace dataStructure
}  // namespace ubii
namespace google {
namespace protobuf {
template<> ::ubii::dataStructure::Pose* Arena::CreateMaybeMessage<::ubii::dataStructure::Pose>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace ubii {
namespace dataStructure {

// ===================================================================

class Pose : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ubii.dataStructure.Pose) */ {
 public:
  Pose();
  virtual ~Pose();

  Pose(const Pose& from);

  inline Pose& operator=(const Pose& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Pose(Pose&& from) noexcept
    : Pose() {
    *this = ::std::move(from);
  }

  inline Pose& operator=(Pose&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Pose& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Pose* internal_default_instance() {
    return reinterpret_cast<const Pose*>(
               &_Pose_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Pose* other);
  friend void swap(Pose& a, Pose& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Pose* New() const final {
    return CreateMaybeMessage<Pose>(NULL);
  }

  Pose* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Pose>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Pose& from);
  void MergeFrom(const Pose& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Pose* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ubii.dataStructure.Vector3 vector3 = 1;
  bool has_vector3() const;
  void clear_vector3();
  static const int kVector3FieldNumber = 1;
  private:
  const ::ubii::dataStructure::Vector3& _internal_vector3() const;
  public:
  const ::ubii::dataStructure::Vector3& vector3() const;
  ::ubii::dataStructure::Vector3* release_vector3();
  ::ubii::dataStructure::Vector3* mutable_vector3();
  void set_allocated_vector3(::ubii::dataStructure::Vector3* vector3);

  // .ubii.dataStructure.Quaternion quaternion = 2;
  bool has_quaternion() const;
  void clear_quaternion();
  static const int kQuaternionFieldNumber = 2;
  private:
  const ::ubii::dataStructure::Quaternion& _internal_quaternion() const;
  public:
  const ::ubii::dataStructure::Quaternion& quaternion() const;
  ::ubii::dataStructure::Quaternion* release_quaternion();
  ::ubii::dataStructure::Quaternion* mutable_quaternion();
  void set_allocated_quaternion(::ubii::dataStructure::Quaternion* quaternion);

  // @@protoc_insertion_point(class_scope:ubii.dataStructure.Pose)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ubii::dataStructure::Vector3* vector3_;
  ::ubii::dataStructure::Quaternion* quaternion_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fpose_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Pose

// .ubii.dataStructure.Vector3 vector3 = 1;
inline bool Pose::has_vector3() const {
  return this != internal_default_instance() && vector3_ != NULL;
}
inline const ::ubii::dataStructure::Vector3& Pose::_internal_vector3() const {
  return *vector3_;
}
inline const ::ubii::dataStructure::Vector3& Pose::vector3() const {
  const ::ubii::dataStructure::Vector3* p = vector3_;
  // @@protoc_insertion_point(field_get:ubii.dataStructure.Pose.vector3)
  return p != NULL ? *p : *reinterpret_cast<const ::ubii::dataStructure::Vector3*>(
      &::ubii::dataStructure::_Vector3_default_instance_);
}
inline ::ubii::dataStructure::Vector3* Pose::release_vector3() {
  // @@protoc_insertion_point(field_release:ubii.dataStructure.Pose.vector3)
  
  ::ubii::dataStructure::Vector3* temp = vector3_;
  vector3_ = NULL;
  return temp;
}
inline ::ubii::dataStructure::Vector3* Pose::mutable_vector3() {
  
  if (vector3_ == NULL) {
    auto* p = CreateMaybeMessage<::ubii::dataStructure::Vector3>(GetArenaNoVirtual());
    vector3_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ubii.dataStructure.Pose.vector3)
  return vector3_;
}
inline void Pose::set_allocated_vector3(::ubii::dataStructure::Vector3* vector3) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(vector3_);
  }
  if (vector3) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vector3 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vector3, submessage_arena);
    }
    
  } else {
    
  }
  vector3_ = vector3;
  // @@protoc_insertion_point(field_set_allocated:ubii.dataStructure.Pose.vector3)
}

// .ubii.dataStructure.Quaternion quaternion = 2;
inline bool Pose::has_quaternion() const {
  return this != internal_default_instance() && quaternion_ != NULL;
}
inline const ::ubii::dataStructure::Quaternion& Pose::_internal_quaternion() const {
  return *quaternion_;
}
inline const ::ubii::dataStructure::Quaternion& Pose::quaternion() const {
  const ::ubii::dataStructure::Quaternion* p = quaternion_;
  // @@protoc_insertion_point(field_get:ubii.dataStructure.Pose.quaternion)
  return p != NULL ? *p : *reinterpret_cast<const ::ubii::dataStructure::Quaternion*>(
      &::ubii::dataStructure::_Quaternion_default_instance_);
}
inline ::ubii::dataStructure::Quaternion* Pose::release_quaternion() {
  // @@protoc_insertion_point(field_release:ubii.dataStructure.Pose.quaternion)
  
  ::ubii::dataStructure::Quaternion* temp = quaternion_;
  quaternion_ = NULL;
  return temp;
}
inline ::ubii::dataStructure::Quaternion* Pose::mutable_quaternion() {
  
  if (quaternion_ == NULL) {
    auto* p = CreateMaybeMessage<::ubii::dataStructure::Quaternion>(GetArenaNoVirtual());
    quaternion_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ubii.dataStructure.Pose.quaternion)
  return quaternion_;
}
inline void Pose::set_allocated_quaternion(::ubii::dataStructure::Quaternion* quaternion) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(quaternion_);
  }
  if (quaternion) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      quaternion = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, quaternion, submessage_arena);
    }
    
  } else {
    
  }
  quaternion_ = quaternion;
  // @@protoc_insertion_point(field_set_allocated:ubii.dataStructure.Pose.quaternion)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace dataStructure
}  // namespace ubii

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fpose_2eproto
