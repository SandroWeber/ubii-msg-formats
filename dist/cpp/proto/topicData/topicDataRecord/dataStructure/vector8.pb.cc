// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/topicData/topicDataRecord/dataStructure/vector8.proto

#include "proto/topicData/topicDataRecord/dataStructure/vector8.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace ubii {
namespace dataStructure {
class Vector8DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Vector8> _instance;
} _Vector8_default_instance_;
}  // namespace dataStructure
}  // namespace ubii
static void InitDefaultsscc_info_Vector8_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector8_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ubii::dataStructure::_Vector8_default_instance_;
    new (ptr) ::ubii::dataStructure::Vector8();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ubii::dataStructure::Vector8::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Vector8_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector8_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Vector8_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector8_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector8_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector8_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector8_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector8_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ubii::dataStructure::Vector8, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ubii::dataStructure::Vector8, v0_),
  PROTOBUF_FIELD_OFFSET(::ubii::dataStructure::Vector8, v1_),
  PROTOBUF_FIELD_OFFSET(::ubii::dataStructure::Vector8, v2_),
  PROTOBUF_FIELD_OFFSET(::ubii::dataStructure::Vector8, v3_),
  PROTOBUF_FIELD_OFFSET(::ubii::dataStructure::Vector8, v4_),
  PROTOBUF_FIELD_OFFSET(::ubii::dataStructure::Vector8, v5_),
  PROTOBUF_FIELD_OFFSET(::ubii::dataStructure::Vector8, v6_),
  PROTOBUF_FIELD_OFFSET(::ubii::dataStructure::Vector8, v7_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ubii::dataStructure::Vector8)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ubii::dataStructure::_Vector8_default_instance_),
};

const char descriptor_table_protodef_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector8_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n;proto/topicData/topicDataRecord/dataSt"
  "ructure/vector8.proto\022\022ubii.dataStructur"
  "e\"i\n\007Vector8\022\n\n\002v0\030\001 \001(\001\022\n\n\002v1\030\002 \001(\001\022\n\n\002"
  "v2\030\003 \001(\001\022\n\n\002v3\030\004 \001(\001\022\n\n\002v4\030\005 \001(\001\022\n\n\002v5\030\006"
  " \001(\001\022\n\n\002v6\030\007 \001(\001\022\n\n\002v7\030\010 \001(\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector8_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector8_2eproto_sccs[1] = {
  &scc_info_Vector8_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector8_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector8_2eproto_once;
static bool descriptor_table_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector8_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector8_2eproto = {
  &descriptor_table_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector8_2eproto_initialized, descriptor_table_protodef_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector8_2eproto, "proto/topicData/topicDataRecord/dataStructure/vector8.proto", 196,
  &descriptor_table_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector8_2eproto_once, descriptor_table_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector8_2eproto_sccs, descriptor_table_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector8_2eproto_deps, 1, 0,
  schemas, file_default_instances, TableStruct_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector8_2eproto::offsets,
  file_level_metadata_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector8_2eproto, 1, file_level_enum_descriptors_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector8_2eproto, file_level_service_descriptors_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector8_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector8_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector8_2eproto), true);
namespace ubii {
namespace dataStructure {

// ===================================================================

void Vector8::InitAsDefaultInstance() {
}
class Vector8::_Internal {
 public:
};

Vector8::Vector8()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ubii.dataStructure.Vector8)
}
Vector8::Vector8(const Vector8& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&v0_, &from.v0_,
    static_cast<size_t>(reinterpret_cast<char*>(&v7_) -
    reinterpret_cast<char*>(&v0_)) + sizeof(v7_));
  // @@protoc_insertion_point(copy_constructor:ubii.dataStructure.Vector8)
}

void Vector8::SharedCtor() {
  ::memset(&v0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&v7_) -
      reinterpret_cast<char*>(&v0_)) + sizeof(v7_));
}

Vector8::~Vector8() {
  // @@protoc_insertion_point(destructor:ubii.dataStructure.Vector8)
  SharedDtor();
}

void Vector8::SharedDtor() {
}

void Vector8::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Vector8& Vector8::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Vector8_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector8_2eproto.base);
  return *internal_default_instance();
}


void Vector8::Clear() {
// @@protoc_insertion_point(message_clear_start:ubii.dataStructure.Vector8)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&v0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&v7_) -
      reinterpret_cast<char*>(&v0_)) + sizeof(v7_));
  _internal_metadata_.Clear();
}

const char* Vector8::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // double v0 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          v0_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double v1 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          v1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double v2 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          v2_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double v3 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          v3_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double v4 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 41)) {
          v4_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double v5 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 49)) {
          v5_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double v6 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 57)) {
          v6_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double v7 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 65)) {
          v7_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Vector8::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ubii.dataStructure.Vector8)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double v0 = 1;
  if (!(this->v0() <= 0 && this->v0() >= 0)) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_v0(), target);
  }

  // double v1 = 2;
  if (!(this->v1() <= 0 && this->v1() >= 0)) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_v1(), target);
  }

  // double v2 = 3;
  if (!(this->v2() <= 0 && this->v2() >= 0)) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_v2(), target);
  }

  // double v3 = 4;
  if (!(this->v3() <= 0 && this->v3() >= 0)) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_v3(), target);
  }

  // double v4 = 5;
  if (!(this->v4() <= 0 && this->v4() >= 0)) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(5, this->_internal_v4(), target);
  }

  // double v5 = 6;
  if (!(this->v5() <= 0 && this->v5() >= 0)) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(6, this->_internal_v5(), target);
  }

  // double v6 = 7;
  if (!(this->v6() <= 0 && this->v6() >= 0)) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(7, this->_internal_v6(), target);
  }

  // double v7 = 8;
  if (!(this->v7() <= 0 && this->v7() >= 0)) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(8, this->_internal_v7(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ubii.dataStructure.Vector8)
  return target;
}

size_t Vector8::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ubii.dataStructure.Vector8)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double v0 = 1;
  if (!(this->v0() <= 0 && this->v0() >= 0)) {
    total_size += 1 + 8;
  }

  // double v1 = 2;
  if (!(this->v1() <= 0 && this->v1() >= 0)) {
    total_size += 1 + 8;
  }

  // double v2 = 3;
  if (!(this->v2() <= 0 && this->v2() >= 0)) {
    total_size += 1 + 8;
  }

  // double v3 = 4;
  if (!(this->v3() <= 0 && this->v3() >= 0)) {
    total_size += 1 + 8;
  }

  // double v4 = 5;
  if (!(this->v4() <= 0 && this->v4() >= 0)) {
    total_size += 1 + 8;
  }

  // double v5 = 6;
  if (!(this->v5() <= 0 && this->v5() >= 0)) {
    total_size += 1 + 8;
  }

  // double v6 = 7;
  if (!(this->v6() <= 0 && this->v6() >= 0)) {
    total_size += 1 + 8;
  }

  // double v7 = 8;
  if (!(this->v7() <= 0 && this->v7() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vector8::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ubii.dataStructure.Vector8)
  GOOGLE_DCHECK_NE(&from, this);
  const Vector8* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Vector8>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ubii.dataStructure.Vector8)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ubii.dataStructure.Vector8)
    MergeFrom(*source);
  }
}

void Vector8::MergeFrom(const Vector8& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ubii.dataStructure.Vector8)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.v0() <= 0 && from.v0() >= 0)) {
    _internal_set_v0(from._internal_v0());
  }
  if (!(from.v1() <= 0 && from.v1() >= 0)) {
    _internal_set_v1(from._internal_v1());
  }
  if (!(from.v2() <= 0 && from.v2() >= 0)) {
    _internal_set_v2(from._internal_v2());
  }
  if (!(from.v3() <= 0 && from.v3() >= 0)) {
    _internal_set_v3(from._internal_v3());
  }
  if (!(from.v4() <= 0 && from.v4() >= 0)) {
    _internal_set_v4(from._internal_v4());
  }
  if (!(from.v5() <= 0 && from.v5() >= 0)) {
    _internal_set_v5(from._internal_v5());
  }
  if (!(from.v6() <= 0 && from.v6() >= 0)) {
    _internal_set_v6(from._internal_v6());
  }
  if (!(from.v7() <= 0 && from.v7() >= 0)) {
    _internal_set_v7(from._internal_v7());
  }
}

void Vector8::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ubii.dataStructure.Vector8)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vector8::CopyFrom(const Vector8& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ubii.dataStructure.Vector8)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vector8::IsInitialized() const {
  return true;
}

void Vector8::InternalSwap(Vector8* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(v0_, other->v0_);
  swap(v1_, other->v1_);
  swap(v2_, other->v2_);
  swap(v3_, other->v3_);
  swap(v4_, other->v4_);
  swap(v5_, other->v5_);
  swap(v6_, other->v6_);
  swap(v7_, other->v7_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Vector8::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace dataStructure
}  // namespace ubii
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ubii::dataStructure::Vector8* Arena::CreateMaybeMessage< ::ubii::dataStructure::Vector8 >(Arena* arena) {
  return Arena::CreateInternal< ::ubii::dataStructure::Vector8 >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
