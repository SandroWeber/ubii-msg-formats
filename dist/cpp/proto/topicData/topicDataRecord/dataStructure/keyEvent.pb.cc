// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/topicData/topicDataRecord/dataStructure/keyEvent.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "proto/topicData/topicDataRecord/dataStructure/keyEvent.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ubii {
namespace dataStructure {

namespace {

const ::google::protobuf::Descriptor* KeyEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  KeyEvent_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fkeyEvent_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fkeyEvent_2eproto() {
  protobuf_AddDesc_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fkeyEvent_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "proto/topicData/topicDataRecord/dataStructure/keyEvent.proto");
  GOOGLE_CHECK(file != NULL);
  KeyEvent_descriptor_ = file->message_type(0);
  static const int KeyEvent_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyEvent, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyEvent, key_),
  };
  KeyEvent_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      KeyEvent_descriptor_,
      KeyEvent::default_instance_,
      KeyEvent_offsets_,
      -1,
      -1,
      -1,
      sizeof(KeyEvent),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyEvent, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyEvent, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fkeyEvent_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      KeyEvent_descriptor_, &KeyEvent::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fkeyEvent_2eproto() {
  delete KeyEvent::default_instance_;
  delete KeyEvent_reflection_;
}

void protobuf_AddDesc_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fkeyEvent_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fkeyEvent_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::ubii::dataStructure::protobuf_AddDesc_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fbuttonEventType_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n<proto/topicData/topicDataRecord/dataSt"
    "ructure/keyEvent.proto\022\022ubii.dataStructu"
    "re\032Cproto/topicData/topicDataRecord/data"
    "Structure/buttonEventType.proto\"J\n\010KeyEv"
    "ent\0221\n\004type\030\001 \001(\0162#.ubii.dataStructure.B"
    "uttonEventType\022\013\n\003key\030\002 \001(\tb\006proto3", 235);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proto/topicData/topicDataRecord/dataStructure/keyEvent.proto", &protobuf_RegisterTypes);
  KeyEvent::default_instance_ = new KeyEvent();
  KeyEvent::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fkeyEvent_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fkeyEvent_2eproto {
  StaticDescriptorInitializer_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fkeyEvent_2eproto() {
    protobuf_AddDesc_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fkeyEvent_2eproto();
  }
} static_descriptor_initializer_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fkeyEvent_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyEvent::kTypeFieldNumber;
const int KeyEvent::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyEvent::KeyEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ubii.dataStructure.KeyEvent)
}

void KeyEvent::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

KeyEvent::KeyEvent(const KeyEvent& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ubii.dataStructure.KeyEvent)
}

void KeyEvent::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

KeyEvent::~KeyEvent() {
  // @@protoc_insertion_point(destructor:ubii.dataStructure.KeyEvent)
  SharedDtor();
}

void KeyEvent::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void KeyEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KeyEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return KeyEvent_descriptor_;
}

const KeyEvent& KeyEvent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fkeyEvent_2eproto();
  return *default_instance_;
}

KeyEvent* KeyEvent::default_instance_ = NULL;

KeyEvent* KeyEvent::New(::google::protobuf::Arena* arena) const {
  KeyEvent* n = new KeyEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KeyEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:ubii.dataStructure.KeyEvent)
  type_ = 0;
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool KeyEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ubii.dataStructure.KeyEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ubii.dataStructure.ButtonEventType type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::ubii::dataStructure::ButtonEventType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_key;
        break;
      }

      // optional string key = 2;
      case 2: {
        if (tag == 18) {
         parse_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.dataStructure.KeyEvent.key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ubii.dataStructure.KeyEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ubii.dataStructure.KeyEvent)
  return false;
#undef DO_
}

void KeyEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ubii.dataStructure.KeyEvent)
  // optional .ubii.dataStructure.ButtonEventType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional string key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.dataStructure.KeyEvent.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->key(), output);
  }

  // @@protoc_insertion_point(serialize_end:ubii.dataStructure.KeyEvent)
}

::google::protobuf::uint8* KeyEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ubii.dataStructure.KeyEvent)
  // optional .ubii.dataStructure.ButtonEventType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional string key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.dataStructure.KeyEvent.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->key(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ubii.dataStructure.KeyEvent)
  return target;
}

int KeyEvent::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ubii.dataStructure.KeyEvent)
  int total_size = 0;

  // optional .ubii.dataStructure.ButtonEventType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // optional string key = 2;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KeyEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ubii.dataStructure.KeyEvent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const KeyEvent* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const KeyEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ubii.dataStructure.KeyEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ubii.dataStructure.KeyEvent)
    MergeFrom(*source);
  }
}

void KeyEvent::MergeFrom(const KeyEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ubii.dataStructure.KeyEvent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
}

void KeyEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ubii.dataStructure.KeyEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyEvent::CopyFrom(const KeyEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ubii.dataStructure.KeyEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyEvent::IsInitialized() const {

  return true;
}

void KeyEvent::Swap(KeyEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyEvent::InternalSwap(KeyEvent* other) {
  std::swap(type_, other->type_);
  key_.Swap(&other->key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KeyEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = KeyEvent_descriptor_;
  metadata.reflection = KeyEvent_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// KeyEvent

// optional .ubii.dataStructure.ButtonEventType type = 1;
void KeyEvent::clear_type() {
  type_ = 0;
}
 ::ubii::dataStructure::ButtonEventType KeyEvent::type() const {
  // @@protoc_insertion_point(field_get:ubii.dataStructure.KeyEvent.type)
  return static_cast< ::ubii::dataStructure::ButtonEventType >(type_);
}
 void KeyEvent::set_type(::ubii::dataStructure::ButtonEventType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:ubii.dataStructure.KeyEvent.type)
}

// optional string key = 2;
void KeyEvent::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& KeyEvent::key() const {
  // @@protoc_insertion_point(field_get:ubii.dataStructure.KeyEvent.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void KeyEvent::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ubii.dataStructure.KeyEvent.key)
}
 void KeyEvent::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ubii.dataStructure.KeyEvent.key)
}
 void KeyEvent::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ubii.dataStructure.KeyEvent.key)
}
 ::std::string* KeyEvent::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:ubii.dataStructure.KeyEvent.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* KeyEvent::release_key() {
  // @@protoc_insertion_point(field_release:ubii.dataStructure.KeyEvent.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void KeyEvent::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:ubii.dataStructure.KeyEvent.key)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace dataStructure
}  // namespace ubii

// @@protoc_insertion_point(global_scope)
