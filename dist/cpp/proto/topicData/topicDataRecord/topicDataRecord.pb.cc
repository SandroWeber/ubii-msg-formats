// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/topicData/topicDataRecord/topicDataRecord.proto

#include "proto/topicData/topicDataRecord/topicDataRecord.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fcolor_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fcolor_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Color;
}  // namespace protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fcolor_2eproto
namespace protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fmatrix3x2_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fmatrix3x2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Matrix3x2;
}  // namespace protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fmatrix3x2_2eproto
namespace protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fmatrix4x4_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fmatrix4x4_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Matrix4x4;
}  // namespace protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fmatrix4x4_2eproto
namespace protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fquaternion_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fquaternion_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Quaternion;
}  // namespace protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fquaternion_2eproto
namespace protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector2_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Vector2;
}  // namespace protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector2_2eproto
namespace protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector3_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Vector3;
}  // namespace protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector3_2eproto
namespace protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector4_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector4_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Vector4;
}  // namespace protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector4_2eproto
namespace protobuf_proto_2ftopicData_2ftopicDataRecord_2ftopicDataRecord_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2ftopicData_2ftopicDataRecord_2ftopicDataRecord_2eproto ::google::protobuf::internal::SCCInfo<7> scc_info_TopicDataRecord;
}  // namespace protobuf_proto_2ftopicData_2ftopicDataRecord_2ftopicDataRecord_2eproto
namespace ubii {
namespace topicData {
class TopicDataRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TopicDataRecord>
      _instance;
  double number_;
  bool boolean_;
  ::google::protobuf::internal::ArenaStringPtr string_;
  const ::ubii::dataStructure::Vector2* vector2_;
  const ::ubii::dataStructure::Vector3* vector3_;
  const ::ubii::dataStructure::Vector4* vector4_;
  const ::ubii::dataStructure::Quaternion* quaternion_;
  const ::ubii::dataStructure::Matrix3x2* matrix3x2_;
  const ::ubii::dataStructure::Matrix4x4* matrix4x4_;
  const ::ubii::dataStructure::Color* color_;
} _TopicDataRecord_default_instance_;
class TopicDataRecordListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TopicDataRecordList>
      _instance;
} _TopicDataRecordList_default_instance_;
}  // namespace topicData
}  // namespace ubii
namespace protobuf_proto_2ftopicData_2ftopicDataRecord_2ftopicDataRecord_2eproto {
static void InitDefaultsTopicDataRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ubii::topicData::_TopicDataRecord_default_instance_;
    new (ptr) ::ubii::topicData::TopicDataRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ubii::topicData::TopicDataRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<7> scc_info_TopicDataRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 7, InitDefaultsTopicDataRecord}, {
      &protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector2_2eproto::scc_info_Vector2.base,
      &protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector3_2eproto::scc_info_Vector3.base,
      &protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector4_2eproto::scc_info_Vector4.base,
      &protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fquaternion_2eproto::scc_info_Quaternion.base,
      &protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fmatrix3x2_2eproto::scc_info_Matrix3x2.base,
      &protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fmatrix4x4_2eproto::scc_info_Matrix4x4.base,
      &protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fcolor_2eproto::scc_info_Color.base,}};

static void InitDefaultsTopicDataRecordList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ubii::topicData::_TopicDataRecordList_default_instance_;
    new (ptr) ::ubii::topicData::TopicDataRecordList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ubii::topicData::TopicDataRecordList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TopicDataRecordList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTopicDataRecordList}, {
      &protobuf_proto_2ftopicData_2ftopicDataRecord_2ftopicDataRecord_2eproto::scc_info_TopicDataRecord.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TopicDataRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TopicDataRecordList.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ubii::topicData::TopicDataRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ubii::topicData::TopicDataRecord, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ubii::topicData::TopicDataRecord, topic_),
  offsetof(::ubii::topicData::TopicDataRecordDefaultTypeInternal, number_),
  offsetof(::ubii::topicData::TopicDataRecordDefaultTypeInternal, boolean_),
  offsetof(::ubii::topicData::TopicDataRecordDefaultTypeInternal, string_),
  offsetof(::ubii::topicData::TopicDataRecordDefaultTypeInternal, vector2_),
  offsetof(::ubii::topicData::TopicDataRecordDefaultTypeInternal, vector3_),
  offsetof(::ubii::topicData::TopicDataRecordDefaultTypeInternal, vector4_),
  offsetof(::ubii::topicData::TopicDataRecordDefaultTypeInternal, quaternion_),
  offsetof(::ubii::topicData::TopicDataRecordDefaultTypeInternal, matrix3x2_),
  offsetof(::ubii::topicData::TopicDataRecordDefaultTypeInternal, matrix4x4_),
  offsetof(::ubii::topicData::TopicDataRecordDefaultTypeInternal, color_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ubii::topicData::TopicDataRecord, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ubii::topicData::TopicDataRecordList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ubii::topicData::TopicDataRecordList, list_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ubii::topicData::TopicDataRecord)},
  { 17, -1, sizeof(::ubii::topicData::TopicDataRecordList)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ubii::topicData::_TopicDataRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ubii::topicData::_TopicDataRecordList_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "proto/topicData/topicDataRecord/topicDataRecord.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n5proto/topicData/topicDataRecord/topicD"
      "ataRecord.proto\022\016ubii.topicData\032;proto/t"
      "opicData/topicDataRecord/dataStructure/v"
      "ector2.proto\032;proto/topicData/topicDataR"
      "ecord/dataStructure/vector3.proto\032;proto"
      "/topicData/topicDataRecord/dataStructure"
      "/vector4.proto\032>proto/topicData/topicDat"
      "aRecord/dataStructure/quaternion.proto\032="
      "proto/topicData/topicDataRecord/dataStru"
      "cture/matrix3x2.proto\032=proto/topicData/t"
      "opicDataRecord/dataStructure/matrix4x4.p"
      "roto\0329proto/topicData/topicDataRecord/da"
      "taStructure/color.proto\"\271\003\n\017TopicDataRec"
      "ord\022\r\n\005topic\030\001 \001(\t\022\020\n\006number\030\002 \001(\001H\000\022\021\n\007"
      "boolean\030\003 \001(\010H\000\022\020\n\006string\030\004 \001(\tH\000\022.\n\007vec"
      "tor2\030\005 \001(\0132\033.ubii.dataStructure.Vector2H"
      "\000\022.\n\007vector3\030\006 \001(\0132\033.ubii.dataStructure."
      "Vector3H\000\022.\n\007vector4\030\007 \001(\0132\033.ubii.dataSt"
      "ructure.Vector4H\000\0224\n\nquaternion\030\010 \001(\0132\036."
      "ubii.dataStructure.QuaternionH\000\0222\n\tmatri"
      "x3x2\030\t \001(\0132\035.ubii.dataStructure.Matrix3x"
      "2H\000\0222\n\tmatrix4x4\030\n \001(\0132\035.ubii.dataStruct"
      "ure.Matrix4x4H\000\022*\n\005color\030\013 \001(\0132\031.ubii.da"
      "taStructure.ColorH\000B\006\n\004type\"D\n\023TopicData"
      "RecordList\022-\n\004list\030\001 \003(\0132\037.ubii.topicDat"
      "a.TopicDataRecordb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1025);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proto/topicData/topicDataRecord/topicDataRecord.proto", &protobuf_RegisterTypes);
  ::protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector2_2eproto::AddDescriptors();
  ::protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector3_2eproto::AddDescriptors();
  ::protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fvector4_2eproto::AddDescriptors();
  ::protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fquaternion_2eproto::AddDescriptors();
  ::protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fmatrix3x2_2eproto::AddDescriptors();
  ::protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fmatrix4x4_2eproto::AddDescriptors();
  ::protobuf_proto_2ftopicData_2ftopicDataRecord_2fdataStructure_2fcolor_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_proto_2ftopicData_2ftopicDataRecord_2ftopicDataRecord_2eproto
namespace ubii {
namespace topicData {

// ===================================================================

void TopicDataRecord::InitAsDefaultInstance() {
  ::ubii::topicData::_TopicDataRecord_default_instance_.number_ = 0;
  ::ubii::topicData::_TopicDataRecord_default_instance_.boolean_ = false;
  ::ubii::topicData::_TopicDataRecord_default_instance_.string_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::ubii::topicData::_TopicDataRecord_default_instance_.vector2_ = const_cast< ::ubii::dataStructure::Vector2*>(
      ::ubii::dataStructure::Vector2::internal_default_instance());
  ::ubii::topicData::_TopicDataRecord_default_instance_.vector3_ = const_cast< ::ubii::dataStructure::Vector3*>(
      ::ubii::dataStructure::Vector3::internal_default_instance());
  ::ubii::topicData::_TopicDataRecord_default_instance_.vector4_ = const_cast< ::ubii::dataStructure::Vector4*>(
      ::ubii::dataStructure::Vector4::internal_default_instance());
  ::ubii::topicData::_TopicDataRecord_default_instance_.quaternion_ = const_cast< ::ubii::dataStructure::Quaternion*>(
      ::ubii::dataStructure::Quaternion::internal_default_instance());
  ::ubii::topicData::_TopicDataRecord_default_instance_.matrix3x2_ = const_cast< ::ubii::dataStructure::Matrix3x2*>(
      ::ubii::dataStructure::Matrix3x2::internal_default_instance());
  ::ubii::topicData::_TopicDataRecord_default_instance_.matrix4x4_ = const_cast< ::ubii::dataStructure::Matrix4x4*>(
      ::ubii::dataStructure::Matrix4x4::internal_default_instance());
  ::ubii::topicData::_TopicDataRecord_default_instance_.color_ = const_cast< ::ubii::dataStructure::Color*>(
      ::ubii::dataStructure::Color::internal_default_instance());
}
void TopicDataRecord::set_allocated_vector2(::ubii::dataStructure::Vector2* vector2) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (vector2) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vector2 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vector2, submessage_arena);
    }
    set_has_vector2();
    type_.vector2_ = vector2;
  }
  // @@protoc_insertion_point(field_set_allocated:ubii.topicData.TopicDataRecord.vector2)
}
void TopicDataRecord::clear_vector2() {
  if (has_vector2()) {
    delete type_.vector2_;
    clear_has_type();
  }
}
void TopicDataRecord::set_allocated_vector3(::ubii::dataStructure::Vector3* vector3) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (vector3) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vector3 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vector3, submessage_arena);
    }
    set_has_vector3();
    type_.vector3_ = vector3;
  }
  // @@protoc_insertion_point(field_set_allocated:ubii.topicData.TopicDataRecord.vector3)
}
void TopicDataRecord::clear_vector3() {
  if (has_vector3()) {
    delete type_.vector3_;
    clear_has_type();
  }
}
void TopicDataRecord::set_allocated_vector4(::ubii::dataStructure::Vector4* vector4) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (vector4) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vector4 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vector4, submessage_arena);
    }
    set_has_vector4();
    type_.vector4_ = vector4;
  }
  // @@protoc_insertion_point(field_set_allocated:ubii.topicData.TopicDataRecord.vector4)
}
void TopicDataRecord::clear_vector4() {
  if (has_vector4()) {
    delete type_.vector4_;
    clear_has_type();
  }
}
void TopicDataRecord::set_allocated_quaternion(::ubii::dataStructure::Quaternion* quaternion) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (quaternion) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      quaternion = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, quaternion, submessage_arena);
    }
    set_has_quaternion();
    type_.quaternion_ = quaternion;
  }
  // @@protoc_insertion_point(field_set_allocated:ubii.topicData.TopicDataRecord.quaternion)
}
void TopicDataRecord::clear_quaternion() {
  if (has_quaternion()) {
    delete type_.quaternion_;
    clear_has_type();
  }
}
void TopicDataRecord::set_allocated_matrix3x2(::ubii::dataStructure::Matrix3x2* matrix3x2) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (matrix3x2) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      matrix3x2 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, matrix3x2, submessage_arena);
    }
    set_has_matrix3x2();
    type_.matrix3x2_ = matrix3x2;
  }
  // @@protoc_insertion_point(field_set_allocated:ubii.topicData.TopicDataRecord.matrix3x2)
}
void TopicDataRecord::clear_matrix3x2() {
  if (has_matrix3x2()) {
    delete type_.matrix3x2_;
    clear_has_type();
  }
}
void TopicDataRecord::set_allocated_matrix4x4(::ubii::dataStructure::Matrix4x4* matrix4x4) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (matrix4x4) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      matrix4x4 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, matrix4x4, submessage_arena);
    }
    set_has_matrix4x4();
    type_.matrix4x4_ = matrix4x4;
  }
  // @@protoc_insertion_point(field_set_allocated:ubii.topicData.TopicDataRecord.matrix4x4)
}
void TopicDataRecord::clear_matrix4x4() {
  if (has_matrix4x4()) {
    delete type_.matrix4x4_;
    clear_has_type();
  }
}
void TopicDataRecord::set_allocated_color(::ubii::dataStructure::Color* color) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (color) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      color = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, color, submessage_arena);
    }
    set_has_color();
    type_.color_ = color;
  }
  // @@protoc_insertion_point(field_set_allocated:ubii.topicData.TopicDataRecord.color)
}
void TopicDataRecord::clear_color() {
  if (has_color()) {
    delete type_.color_;
    clear_has_type();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TopicDataRecord::kTopicFieldNumber;
const int TopicDataRecord::kNumberFieldNumber;
const int TopicDataRecord::kBooleanFieldNumber;
const int TopicDataRecord::kStringFieldNumber;
const int TopicDataRecord::kVector2FieldNumber;
const int TopicDataRecord::kVector3FieldNumber;
const int TopicDataRecord::kVector4FieldNumber;
const int TopicDataRecord::kQuaternionFieldNumber;
const int TopicDataRecord::kMatrix3X2FieldNumber;
const int TopicDataRecord::kMatrix4X4FieldNumber;
const int TopicDataRecord::kColorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TopicDataRecord::TopicDataRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2ftopicData_2ftopicDataRecord_2ftopicDataRecord_2eproto::scc_info_TopicDataRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ubii.topicData.TopicDataRecord)
}
TopicDataRecord::TopicDataRecord(const TopicDataRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.topic().size() > 0) {
    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  clear_has_type();
  switch (from.type_case()) {
    case kNumber: {
      set_number(from.number());
      break;
    }
    case kBoolean: {
      set_boolean(from.boolean());
      break;
    }
    case kString: {
      set_string(from.string());
      break;
    }
    case kVector2: {
      mutable_vector2()->::ubii::dataStructure::Vector2::MergeFrom(from.vector2());
      break;
    }
    case kVector3: {
      mutable_vector3()->::ubii::dataStructure::Vector3::MergeFrom(from.vector3());
      break;
    }
    case kVector4: {
      mutable_vector4()->::ubii::dataStructure::Vector4::MergeFrom(from.vector4());
      break;
    }
    case kQuaternion: {
      mutable_quaternion()->::ubii::dataStructure::Quaternion::MergeFrom(from.quaternion());
      break;
    }
    case kMatrix3X2: {
      mutable_matrix3x2()->::ubii::dataStructure::Matrix3x2::MergeFrom(from.matrix3x2());
      break;
    }
    case kMatrix4X4: {
      mutable_matrix4x4()->::ubii::dataStructure::Matrix4x4::MergeFrom(from.matrix4x4());
      break;
    }
    case kColor: {
      mutable_color()->::ubii::dataStructure::Color::MergeFrom(from.color());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ubii.topicData.TopicDataRecord)
}

void TopicDataRecord::SharedCtor() {
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}

TopicDataRecord::~TopicDataRecord() {
  // @@protoc_insertion_point(destructor:ubii.topicData.TopicDataRecord)
  SharedDtor();
}

void TopicDataRecord::SharedDtor() {
  topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_type()) {
    clear_type();
  }
}

void TopicDataRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TopicDataRecord::descriptor() {
  ::protobuf_proto_2ftopicData_2ftopicDataRecord_2ftopicDataRecord_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2ftopicData_2ftopicDataRecord_2ftopicDataRecord_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TopicDataRecord& TopicDataRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2ftopicData_2ftopicDataRecord_2ftopicDataRecord_2eproto::scc_info_TopicDataRecord.base);
  return *internal_default_instance();
}


void TopicDataRecord::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:ubii.topicData.TopicDataRecord)
  switch (type_case()) {
    case kNumber: {
      // No need to clear
      break;
    }
    case kBoolean: {
      // No need to clear
      break;
    }
    case kString: {
      type_.string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kVector2: {
      delete type_.vector2_;
      break;
    }
    case kVector3: {
      delete type_.vector3_;
      break;
    }
    case kVector4: {
      delete type_.vector4_;
      break;
    }
    case kQuaternion: {
      delete type_.quaternion_;
      break;
    }
    case kMatrix3X2: {
      delete type_.matrix3x2_;
      break;
    }
    case kMatrix4X4: {
      delete type_.matrix4x4_;
      break;
    }
    case kColor: {
      delete type_.color_;
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPE_NOT_SET;
}


void TopicDataRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:ubii.topicData.TopicDataRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_type();
  _internal_metadata_.Clear();
}

bool TopicDataRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ubii.topicData.TopicDataRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string topic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_topic()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->topic().data(), static_cast<int>(this->topic().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.topicData.TopicDataRecord.topic"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          clear_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &type_.number_)));
          set_has_number();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool boolean = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          clear_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &type_.boolean_)));
          set_has_boolean();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string string = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->string().data(), static_cast<int>(this->string().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.topicData.TopicDataRecord.string"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ubii.dataStructure.Vector2 vector2 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vector2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ubii.dataStructure.Vector3 vector3 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vector3()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ubii.dataStructure.Vector4 vector4 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vector4()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ubii.dataStructure.Quaternion quaternion = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_quaternion()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ubii.dataStructure.Matrix3x2 matrix3x2 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_matrix3x2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ubii.dataStructure.Matrix4x4 matrix4x4 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_matrix4x4()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ubii.dataStructure.Color color = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_color()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ubii.topicData.TopicDataRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ubii.topicData.TopicDataRecord)
  return false;
#undef DO_
}

void TopicDataRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ubii.topicData.TopicDataRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string topic = 1;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.topicData.TopicDataRecord.topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->topic(), output);
  }

  // double number = 2;
  if (has_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->number(), output);
  }

  // bool boolean = 3;
  if (has_boolean()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->boolean(), output);
  }

  // string string = 4;
  if (has_string()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string().data(), static_cast<int>(this->string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.topicData.TopicDataRecord.string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->string(), output);
  }

  // .ubii.dataStructure.Vector2 vector2 = 5;
  if (has_vector2()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_vector2(), output);
  }

  // .ubii.dataStructure.Vector3 vector3 = 6;
  if (has_vector3()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_vector3(), output);
  }

  // .ubii.dataStructure.Vector4 vector4 = 7;
  if (has_vector4()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_vector4(), output);
  }

  // .ubii.dataStructure.Quaternion quaternion = 8;
  if (has_quaternion()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_quaternion(), output);
  }

  // .ubii.dataStructure.Matrix3x2 matrix3x2 = 9;
  if (has_matrix3x2()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_matrix3x2(), output);
  }

  // .ubii.dataStructure.Matrix4x4 matrix4x4 = 10;
  if (has_matrix4x4()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_matrix4x4(), output);
  }

  // .ubii.dataStructure.Color color = 11;
  if (has_color()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_color(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ubii.topicData.TopicDataRecord)
}

::google::protobuf::uint8* TopicDataRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ubii.topicData.TopicDataRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string topic = 1;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.topicData.TopicDataRecord.topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->topic(), target);
  }

  // double number = 2;
  if (has_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->number(), target);
  }

  // bool boolean = 3;
  if (has_boolean()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->boolean(), target);
  }

  // string string = 4;
  if (has_string()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string().data(), static_cast<int>(this->string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.topicData.TopicDataRecord.string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->string(), target);
  }

  // .ubii.dataStructure.Vector2 vector2 = 5;
  if (has_vector2()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_vector2(), deterministic, target);
  }

  // .ubii.dataStructure.Vector3 vector3 = 6;
  if (has_vector3()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_vector3(), deterministic, target);
  }

  // .ubii.dataStructure.Vector4 vector4 = 7;
  if (has_vector4()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_vector4(), deterministic, target);
  }

  // .ubii.dataStructure.Quaternion quaternion = 8;
  if (has_quaternion()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_quaternion(), deterministic, target);
  }

  // .ubii.dataStructure.Matrix3x2 matrix3x2 = 9;
  if (has_matrix3x2()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_matrix3x2(), deterministic, target);
  }

  // .ubii.dataStructure.Matrix4x4 matrix4x4 = 10;
  if (has_matrix4x4()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_matrix4x4(), deterministic, target);
  }

  // .ubii.dataStructure.Color color = 11;
  if (has_color()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_color(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ubii.topicData.TopicDataRecord)
  return target;
}

size_t TopicDataRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ubii.topicData.TopicDataRecord)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string topic = 1;
  if (this->topic().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->topic());
  }

  switch (type_case()) {
    // double number = 2;
    case kNumber: {
      total_size += 1 + 8;
      break;
    }
    // bool boolean = 3;
    case kBoolean: {
      total_size += 1 + 1;
      break;
    }
    // string string = 4;
    case kString: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string());
      break;
    }
    // .ubii.dataStructure.Vector2 vector2 = 5;
    case kVector2: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.vector2_);
      break;
    }
    // .ubii.dataStructure.Vector3 vector3 = 6;
    case kVector3: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.vector3_);
      break;
    }
    // .ubii.dataStructure.Vector4 vector4 = 7;
    case kVector4: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.vector4_);
      break;
    }
    // .ubii.dataStructure.Quaternion quaternion = 8;
    case kQuaternion: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.quaternion_);
      break;
    }
    // .ubii.dataStructure.Matrix3x2 matrix3x2 = 9;
    case kMatrix3X2: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.matrix3x2_);
      break;
    }
    // .ubii.dataStructure.Matrix4x4 matrix4x4 = 10;
    case kMatrix4X4: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.matrix4x4_);
      break;
    }
    // .ubii.dataStructure.Color color = 11;
    case kColor: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.color_);
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TopicDataRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ubii.topicData.TopicDataRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const TopicDataRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TopicDataRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ubii.topicData.TopicDataRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ubii.topicData.TopicDataRecord)
    MergeFrom(*source);
  }
}

void TopicDataRecord::MergeFrom(const TopicDataRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ubii.topicData.TopicDataRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.topic().size() > 0) {

    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  switch (from.type_case()) {
    case kNumber: {
      set_number(from.number());
      break;
    }
    case kBoolean: {
      set_boolean(from.boolean());
      break;
    }
    case kString: {
      set_string(from.string());
      break;
    }
    case kVector2: {
      mutable_vector2()->::ubii::dataStructure::Vector2::MergeFrom(from.vector2());
      break;
    }
    case kVector3: {
      mutable_vector3()->::ubii::dataStructure::Vector3::MergeFrom(from.vector3());
      break;
    }
    case kVector4: {
      mutable_vector4()->::ubii::dataStructure::Vector4::MergeFrom(from.vector4());
      break;
    }
    case kQuaternion: {
      mutable_quaternion()->::ubii::dataStructure::Quaternion::MergeFrom(from.quaternion());
      break;
    }
    case kMatrix3X2: {
      mutable_matrix3x2()->::ubii::dataStructure::Matrix3x2::MergeFrom(from.matrix3x2());
      break;
    }
    case kMatrix4X4: {
      mutable_matrix4x4()->::ubii::dataStructure::Matrix4x4::MergeFrom(from.matrix4x4());
      break;
    }
    case kColor: {
      mutable_color()->::ubii::dataStructure::Color::MergeFrom(from.color());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
}

void TopicDataRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ubii.topicData.TopicDataRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopicDataRecord::CopyFrom(const TopicDataRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ubii.topicData.TopicDataRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopicDataRecord::IsInitialized() const {
  return true;
}

void TopicDataRecord::Swap(TopicDataRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TopicDataRecord::InternalSwap(TopicDataRecord* other) {
  using std::swap;
  topic_.Swap(&other->topic_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TopicDataRecord::GetMetadata() const {
  protobuf_proto_2ftopicData_2ftopicDataRecord_2ftopicDataRecord_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2ftopicData_2ftopicDataRecord_2ftopicDataRecord_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TopicDataRecordList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TopicDataRecordList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TopicDataRecordList::TopicDataRecordList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2ftopicData_2ftopicDataRecord_2ftopicDataRecord_2eproto::scc_info_TopicDataRecordList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ubii.topicData.TopicDataRecordList)
}
TopicDataRecordList::TopicDataRecordList(const TopicDataRecordList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ubii.topicData.TopicDataRecordList)
}

void TopicDataRecordList::SharedCtor() {
}

TopicDataRecordList::~TopicDataRecordList() {
  // @@protoc_insertion_point(destructor:ubii.topicData.TopicDataRecordList)
  SharedDtor();
}

void TopicDataRecordList::SharedDtor() {
}

void TopicDataRecordList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TopicDataRecordList::descriptor() {
  ::protobuf_proto_2ftopicData_2ftopicDataRecord_2ftopicDataRecord_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2ftopicData_2ftopicDataRecord_2ftopicDataRecord_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TopicDataRecordList& TopicDataRecordList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2ftopicData_2ftopicDataRecord_2ftopicDataRecord_2eproto::scc_info_TopicDataRecordList.base);
  return *internal_default_instance();
}


void TopicDataRecordList::Clear() {
// @@protoc_insertion_point(message_clear_start:ubii.topicData.TopicDataRecordList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _internal_metadata_.Clear();
}

bool TopicDataRecordList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ubii.topicData.TopicDataRecordList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ubii.topicData.TopicDataRecord list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ubii.topicData.TopicDataRecordList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ubii.topicData.TopicDataRecordList)
  return false;
#undef DO_
}

void TopicDataRecordList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ubii.topicData.TopicDataRecordList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ubii.topicData.TopicDataRecord list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->list(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ubii.topicData.TopicDataRecordList)
}

::google::protobuf::uint8* TopicDataRecordList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ubii.topicData.TopicDataRecordList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ubii.topicData.TopicDataRecord list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ubii.topicData.TopicDataRecordList)
  return target;
}

size_t TopicDataRecordList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ubii.topicData.TopicDataRecordList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ubii.topicData.TopicDataRecord list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TopicDataRecordList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ubii.topicData.TopicDataRecordList)
  GOOGLE_DCHECK_NE(&from, this);
  const TopicDataRecordList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TopicDataRecordList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ubii.topicData.TopicDataRecordList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ubii.topicData.TopicDataRecordList)
    MergeFrom(*source);
  }
}

void TopicDataRecordList::MergeFrom(const TopicDataRecordList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ubii.topicData.TopicDataRecordList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void TopicDataRecordList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ubii.topicData.TopicDataRecordList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopicDataRecordList::CopyFrom(const TopicDataRecordList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ubii.topicData.TopicDataRecordList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopicDataRecordList::IsInitialized() const {
  return true;
}

void TopicDataRecordList::Swap(TopicDataRecordList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TopicDataRecordList::InternalSwap(TopicDataRecordList* other) {
  using std::swap;
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TopicDataRecordList::GetMetadata() const {
  protobuf_proto_2ftopicData_2ftopicDataRecord_2ftopicDataRecord_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2ftopicData_2ftopicDataRecord_2ftopicDataRecord_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace topicData
}  // namespace ubii
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ubii::topicData::TopicDataRecord* Arena::CreateMaybeMessage< ::ubii::topicData::TopicDataRecord >(Arena* arena) {
  return Arena::CreateInternal< ::ubii::topicData::TopicDataRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ubii::topicData::TopicDataRecordList* Arena::CreateMaybeMessage< ::ubii::topicData::TopicDataRecordList >(Arena* arena) {
  return Arena::CreateInternal< ::ubii::topicData::TopicDataRecordList >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
