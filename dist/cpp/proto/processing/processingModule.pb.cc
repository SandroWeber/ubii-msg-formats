// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/processing/processingModule.proto

#include "proto/processing/processingModule.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_proto_2fprocessing_2fprocessingModule_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ModuleIO_proto_2fprocessing_2fprocessingModule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2fprocessing_2fprocessingModule_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_ProcessingMode_proto_2fprocessing_2fprocessingModule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2fprocessing_2fprocessingModule_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProcessingMode_Free_proto_2fprocessing_2fprocessingModule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2fprocessing_2fprocessingModule_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProcessingMode_Frequency_proto_2fprocessing_2fprocessingModule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2fprocessing_2fprocessingModule_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProcessingMode_Lockstep_proto_2fprocessing_2fprocessingModule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2fprocessing_2fprocessingModule_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProcessingMode_TriggerOnInput_proto_2fprocessing_2fprocessingModule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2fprocessing_2fprocessingModule_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ProcessingModule_proto_2fprocessing_2fprocessingModule_2eproto;
namespace ubii {
namespace processing {
class ProcessingMode_FrequencyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProcessingMode_Frequency> _instance;
} _ProcessingMode_Frequency_default_instance_;
class ProcessingMode_LockstepDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProcessingMode_Lockstep> _instance;
} _ProcessingMode_Lockstep_default_instance_;
class ProcessingMode_TriggerOnInputDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProcessingMode_TriggerOnInput> _instance;
} _ProcessingMode_TriggerOnInput_default_instance_;
class ProcessingMode_FreeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProcessingMode_Free> _instance;
} _ProcessingMode_Free_default_instance_;
class ProcessingModeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProcessingMode> _instance;
  const ::ubii::processing::ProcessingMode_Frequency* frequency_;
  const ::ubii::processing::ProcessingMode_Lockstep* lockstep_;
  const ::ubii::processing::ProcessingMode_TriggerOnInput* trigger_on_input_;
  const ::ubii::processing::ProcessingMode_Free* free_;
} _ProcessingMode_default_instance_;
class ModuleIODefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ModuleIO> _instance;
} _ModuleIO_default_instance_;
class ProcessingModuleDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProcessingModule> _instance;
} _ProcessingModule_default_instance_;
class ProcessingModuleListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProcessingModuleList> _instance;
} _ProcessingModuleList_default_instance_;
}  // namespace processing
}  // namespace ubii
static void InitDefaultsscc_info_ModuleIO_proto_2fprocessing_2fprocessingModule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ubii::processing::_ModuleIO_default_instance_;
    new (ptr) ::ubii::processing::ModuleIO();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ubii::processing::ModuleIO::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ModuleIO_proto_2fprocessing_2fprocessingModule_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ModuleIO_proto_2fprocessing_2fprocessingModule_2eproto}, {}};

static void InitDefaultsscc_info_ProcessingMode_proto_2fprocessing_2fprocessingModule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ubii::processing::_ProcessingMode_default_instance_;
    new (ptr) ::ubii::processing::ProcessingMode();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ubii::processing::ProcessingMode::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_ProcessingMode_proto_2fprocessing_2fprocessingModule_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_ProcessingMode_proto_2fprocessing_2fprocessingModule_2eproto}, {
      &scc_info_ProcessingMode_Frequency_proto_2fprocessing_2fprocessingModule_2eproto.base,
      &scc_info_ProcessingMode_Lockstep_proto_2fprocessing_2fprocessingModule_2eproto.base,
      &scc_info_ProcessingMode_TriggerOnInput_proto_2fprocessing_2fprocessingModule_2eproto.base,
      &scc_info_ProcessingMode_Free_proto_2fprocessing_2fprocessingModule_2eproto.base,}};

static void InitDefaultsscc_info_ProcessingMode_Free_proto_2fprocessing_2fprocessingModule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ubii::processing::_ProcessingMode_Free_default_instance_;
    new (ptr) ::ubii::processing::ProcessingMode_Free();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ubii::processing::ProcessingMode_Free::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProcessingMode_Free_proto_2fprocessing_2fprocessingModule_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProcessingMode_Free_proto_2fprocessing_2fprocessingModule_2eproto}, {}};

static void InitDefaultsscc_info_ProcessingMode_Frequency_proto_2fprocessing_2fprocessingModule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ubii::processing::_ProcessingMode_Frequency_default_instance_;
    new (ptr) ::ubii::processing::ProcessingMode_Frequency();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ubii::processing::ProcessingMode_Frequency::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProcessingMode_Frequency_proto_2fprocessing_2fprocessingModule_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProcessingMode_Frequency_proto_2fprocessing_2fprocessingModule_2eproto}, {}};

static void InitDefaultsscc_info_ProcessingMode_Lockstep_proto_2fprocessing_2fprocessingModule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ubii::processing::_ProcessingMode_Lockstep_default_instance_;
    new (ptr) ::ubii::processing::ProcessingMode_Lockstep();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ubii::processing::ProcessingMode_Lockstep::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProcessingMode_Lockstep_proto_2fprocessing_2fprocessingModule_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProcessingMode_Lockstep_proto_2fprocessing_2fprocessingModule_2eproto}, {}};

static void InitDefaultsscc_info_ProcessingMode_TriggerOnInput_proto_2fprocessing_2fprocessingModule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ubii::processing::_ProcessingMode_TriggerOnInput_default_instance_;
    new (ptr) ::ubii::processing::ProcessingMode_TriggerOnInput();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ubii::processing::ProcessingMode_TriggerOnInput::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProcessingMode_TriggerOnInput_proto_2fprocessing_2fprocessingModule_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProcessingMode_TriggerOnInput_proto_2fprocessing_2fprocessingModule_2eproto}, {}};

static void InitDefaultsscc_info_ProcessingModule_proto_2fprocessing_2fprocessingModule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ubii::processing::_ProcessingModule_default_instance_;
    new (ptr) ::ubii::processing::ProcessingModule();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ubii::processing::ProcessingModule::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ProcessingModule_proto_2fprocessing_2fprocessingModule_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ProcessingModule_proto_2fprocessing_2fprocessingModule_2eproto}, {
      &scc_info_ProcessingMode_proto_2fprocessing_2fprocessingModule_2eproto.base,
      &scc_info_ModuleIO_proto_2fprocessing_2fprocessingModule_2eproto.base,}};

static void InitDefaultsscc_info_ProcessingModuleList_proto_2fprocessing_2fprocessingModule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ubii::processing::_ProcessingModuleList_default_instance_;
    new (ptr) ::ubii::processing::ProcessingModuleList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ubii::processing::ProcessingModuleList::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ProcessingModuleList_proto_2fprocessing_2fprocessingModule_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ProcessingModuleList_proto_2fprocessing_2fprocessingModule_2eproto}, {
      &scc_info_ProcessingModule_proto_2fprocessing_2fprocessingModule_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_proto_2fprocessing_2fprocessingModule_2eproto[8];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_proto_2fprocessing_2fprocessingModule_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_proto_2fprocessing_2fprocessingModule_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_proto_2fprocessing_2fprocessingModule_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ubii::processing::ProcessingMode_Frequency, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ubii::processing::ProcessingMode_Frequency, hertz_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ubii::processing::ProcessingMode_Lockstep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ubii::processing::ProcessingMode_Lockstep, process_request_endpoint_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ubii::processing::ProcessingMode_TriggerOnInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ubii::processing::ProcessingMode_TriggerOnInput, min_delay_ms_),
  PROTOBUF_FIELD_OFFSET(::ubii::processing::ProcessingMode_TriggerOnInput, all_inputs_need_update_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ubii::processing::ProcessingMode_Free, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ubii::processing::ProcessingMode, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::ubii::processing::ProcessingMode, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::ubii::processing::ProcessingModeDefaultTypeInternal, frequency_),
  offsetof(::ubii::processing::ProcessingModeDefaultTypeInternal, lockstep_),
  offsetof(::ubii::processing::ProcessingModeDefaultTypeInternal, trigger_on_input_),
  offsetof(::ubii::processing::ProcessingModeDefaultTypeInternal, free_),
  PROTOBUF_FIELD_OFFSET(::ubii::processing::ProcessingMode, mode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ubii::processing::ModuleIO, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ubii::processing::ModuleIO, internal_name_),
  PROTOBUF_FIELD_OFFSET(::ubii::processing::ModuleIO, message_format_),
  PROTOBUF_FIELD_OFFSET(::ubii::processing::ModuleIO, is_record_list_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ubii::processing::ProcessingModule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ubii::processing::ProcessingModule, id_),
  PROTOBUF_FIELD_OFFSET(::ubii::processing::ProcessingModule, name_),
  PROTOBUF_FIELD_OFFSET(::ubii::processing::ProcessingModule, authors_),
  PROTOBUF_FIELD_OFFSET(::ubii::processing::ProcessingModule, tags_),
  PROTOBUF_FIELD_OFFSET(::ubii::processing::ProcessingModule, description_),
  PROTOBUF_FIELD_OFFSET(::ubii::processing::ProcessingModule, node_id_),
  PROTOBUF_FIELD_OFFSET(::ubii::processing::ProcessingModule, session_id_),
  PROTOBUF_FIELD_OFFSET(::ubii::processing::ProcessingModule, status_),
  PROTOBUF_FIELD_OFFSET(::ubii::processing::ProcessingModule, processing_mode_),
  PROTOBUF_FIELD_OFFSET(::ubii::processing::ProcessingModule, inputs_),
  PROTOBUF_FIELD_OFFSET(::ubii::processing::ProcessingModule, outputs_),
  PROTOBUF_FIELD_OFFSET(::ubii::processing::ProcessingModule, language_),
  PROTOBUF_FIELD_OFFSET(::ubii::processing::ProcessingModule, on_processing_stringified_),
  PROTOBUF_FIELD_OFFSET(::ubii::processing::ProcessingModule, on_created_stringified_),
  PROTOBUF_FIELD_OFFSET(::ubii::processing::ProcessingModule, on_halted_stringified_),
  PROTOBUF_FIELD_OFFSET(::ubii::processing::ProcessingModule, on_destroyed_stringified_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ubii::processing::ProcessingModuleList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ubii::processing::ProcessingModuleList, elements_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ubii::processing::ProcessingMode_Frequency)},
  { 6, -1, sizeof(::ubii::processing::ProcessingMode_Lockstep)},
  { 12, -1, sizeof(::ubii::processing::ProcessingMode_TriggerOnInput)},
  { 19, -1, sizeof(::ubii::processing::ProcessingMode_Free)},
  { 24, -1, sizeof(::ubii::processing::ProcessingMode)},
  { 34, -1, sizeof(::ubii::processing::ModuleIO)},
  { 42, -1, sizeof(::ubii::processing::ProcessingModule)},
  { 63, -1, sizeof(::ubii::processing::ProcessingModuleList)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ubii::processing::_ProcessingMode_Frequency_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ubii::processing::_ProcessingMode_Lockstep_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ubii::processing::_ProcessingMode_TriggerOnInput_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ubii::processing::_ProcessingMode_Free_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ubii::processing::_ProcessingMode_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ubii::processing::_ModuleIO_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ubii::processing::_ProcessingModule_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ubii::processing::_ProcessingModuleList_default_instance_),
};

const char descriptor_table_protodef_proto_2fprocessing_2fprocessingModule_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\'proto/processing/processingModule.prot"
  "o\022\017ubii.processing\"\262\003\n\016ProcessingMode\022>\n"
  "\tfrequency\030\001 \001(\0132).ubii.processing.Proce"
  "ssingMode.FrequencyH\000\022<\n\010lockstep\030\002 \001(\0132"
  "(.ubii.processing.ProcessingMode.Lockste"
  "pH\000\022J\n\020trigger_on_input\030\003 \001(\0132..ubii.pro"
  "cessing.ProcessingMode.TriggerOnInputH\000\022"
  "4\n\004free\030\004 \001(\0132$.ubii.processing.Processi"
  "ngMode.FreeH\000\032\032\n\tFrequency\022\r\n\005hertz\030\001 \001("
  "\005\032,\n\010Lockstep\022 \n\030process_request_endpoin"
  "t\030\001 \001(\t\032F\n\016TriggerOnInput\022\024\n\014min_delay_m"
  "s\030\001 \001(\005\022\036\n\026all_inputs_need_update\030\002 \001(\010\032"
  "\006\n\004FreeB\006\n\004mode\"Q\n\010ModuleIO\022\025\n\rinternal_"
  "name\030\001 \001(\t\022\026\n\016message_format\030\002 \001(\t\022\026\n\016is"
  "_record_list\030\003 \001(\010\"\234\005\n\020ProcessingModule\022"
  "\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\017\n\007authors\030\003 \003"
  "(\t\022\014\n\004tags\030\004 \003(\t\022\023\n\013description\030\005 \001(\t\022\017\n"
  "\007node_id\030\006 \001(\t\022\022\n\nsession_id\030\007 \001(\t\0228\n\006st"
  "atus\030\010 \001(\0162(.ubii.processing.ProcessingM"
  "odule.Status\0228\n\017processing_mode\030\t \001(\0132\037."
  "ubii.processing.ProcessingMode\022)\n\006inputs"
  "\030\n \003(\0132\031.ubii.processing.ModuleIO\022*\n\007out"
  "puts\030\013 \003(\0132\031.ubii.processing.ModuleIO\022<\n"
  "\010language\030\014 \001(\0162*.ubii.processing.Proces"
  "singModule.Language\022!\n\031on_processing_str"
  "ingified\030\r \001(\t\022\036\n\026on_created_stringified"
  "\030\016 \001(\t\022\035\n\025on_halted_stringified\030\017 \001(\t\022 \n"
  "\030on_destroyed_stringified\030\020 \001(\t\"Q\n\006Statu"
  "s\022\017\n\013INITIALIZED\020\000\022\013\n\007CREATED\020\001\022\016\n\nPROCE"
  "SSING\020\002\022\n\n\006HALTED\020\003\022\r\n\tDESTROYED\020\004\"5\n\010La"
  "nguage\022\007\n\003CPP\020\000\022\006\n\002PY\020\001\022\006\n\002JS\020\002\022\006\n\002CS\020\003\022"
  "\010\n\004JAVA\020\004\"K\n\024ProcessingModuleList\0223\n\010ele"
  "ments\030\001 \003(\0132!.ubii.processing.Processing"
  "Moduleb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_proto_2fprocessing_2fprocessingModule_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_proto_2fprocessing_2fprocessingModule_2eproto_sccs[8] = {
  &scc_info_ModuleIO_proto_2fprocessing_2fprocessingModule_2eproto.base,
  &scc_info_ProcessingMode_proto_2fprocessing_2fprocessingModule_2eproto.base,
  &scc_info_ProcessingMode_Free_proto_2fprocessing_2fprocessingModule_2eproto.base,
  &scc_info_ProcessingMode_Frequency_proto_2fprocessing_2fprocessingModule_2eproto.base,
  &scc_info_ProcessingMode_Lockstep_proto_2fprocessing_2fprocessingModule_2eproto.base,
  &scc_info_ProcessingMode_TriggerOnInput_proto_2fprocessing_2fprocessingModule_2eproto.base,
  &scc_info_ProcessingModule_proto_2fprocessing_2fprocessingModule_2eproto.base,
  &scc_info_ProcessingModuleList_proto_2fprocessing_2fprocessingModule_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_proto_2fprocessing_2fprocessingModule_2eproto_once;
static bool descriptor_table_proto_2fprocessing_2fprocessingModule_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_2fprocessing_2fprocessingModule_2eproto = {
  &descriptor_table_proto_2fprocessing_2fprocessingModule_2eproto_initialized, descriptor_table_protodef_proto_2fprocessing_2fprocessingModule_2eproto, "proto/processing/processingModule.proto", 1334,
  &descriptor_table_proto_2fprocessing_2fprocessingModule_2eproto_once, descriptor_table_proto_2fprocessing_2fprocessingModule_2eproto_sccs, descriptor_table_proto_2fprocessing_2fprocessingModule_2eproto_deps, 8, 0,
  schemas, file_default_instances, TableStruct_proto_2fprocessing_2fprocessingModule_2eproto::offsets,
  file_level_metadata_proto_2fprocessing_2fprocessingModule_2eproto, 8, file_level_enum_descriptors_proto_2fprocessing_2fprocessingModule_2eproto, file_level_service_descriptors_proto_2fprocessing_2fprocessingModule_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_proto_2fprocessing_2fprocessingModule_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_proto_2fprocessing_2fprocessingModule_2eproto), true);
namespace ubii {
namespace processing {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProcessingModule_Status_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_proto_2fprocessing_2fprocessingModule_2eproto);
  return file_level_enum_descriptors_proto_2fprocessing_2fprocessingModule_2eproto[0];
}
bool ProcessingModule_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr ProcessingModule_Status ProcessingModule::INITIALIZED;
constexpr ProcessingModule_Status ProcessingModule::CREATED;
constexpr ProcessingModule_Status ProcessingModule::PROCESSING;
constexpr ProcessingModule_Status ProcessingModule::HALTED;
constexpr ProcessingModule_Status ProcessingModule::DESTROYED;
constexpr ProcessingModule_Status ProcessingModule::Status_MIN;
constexpr ProcessingModule_Status ProcessingModule::Status_MAX;
constexpr int ProcessingModule::Status_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProcessingModule_Language_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_proto_2fprocessing_2fprocessingModule_2eproto);
  return file_level_enum_descriptors_proto_2fprocessing_2fprocessingModule_2eproto[1];
}
bool ProcessingModule_Language_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr ProcessingModule_Language ProcessingModule::CPP;
constexpr ProcessingModule_Language ProcessingModule::PY;
constexpr ProcessingModule_Language ProcessingModule::JS;
constexpr ProcessingModule_Language ProcessingModule::CS;
constexpr ProcessingModule_Language ProcessingModule::JAVA;
constexpr ProcessingModule_Language ProcessingModule::Language_MIN;
constexpr ProcessingModule_Language ProcessingModule::Language_MAX;
constexpr int ProcessingModule::Language_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void ProcessingMode_Frequency::InitAsDefaultInstance() {
}
class ProcessingMode_Frequency::_Internal {
 public:
};

ProcessingMode_Frequency::ProcessingMode_Frequency()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ubii.processing.ProcessingMode.Frequency)
}
ProcessingMode_Frequency::ProcessingMode_Frequency(const ProcessingMode_Frequency& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hertz_ = from.hertz_;
  // @@protoc_insertion_point(copy_constructor:ubii.processing.ProcessingMode.Frequency)
}

void ProcessingMode_Frequency::SharedCtor() {
  hertz_ = 0;
}

ProcessingMode_Frequency::~ProcessingMode_Frequency() {
  // @@protoc_insertion_point(destructor:ubii.processing.ProcessingMode.Frequency)
  SharedDtor();
}

void ProcessingMode_Frequency::SharedDtor() {
}

void ProcessingMode_Frequency::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProcessingMode_Frequency& ProcessingMode_Frequency::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProcessingMode_Frequency_proto_2fprocessing_2fprocessingModule_2eproto.base);
  return *internal_default_instance();
}


void ProcessingMode_Frequency::Clear() {
// @@protoc_insertion_point(message_clear_start:ubii.processing.ProcessingMode.Frequency)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hertz_ = 0;
  _internal_metadata_.Clear();
}

const char* ProcessingMode_Frequency::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 hertz = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          hertz_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProcessingMode_Frequency::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ubii.processing.ProcessingMode.Frequency)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 hertz = 1;
  if (this->hertz() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_hertz(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ubii.processing.ProcessingMode.Frequency)
  return target;
}

size_t ProcessingMode_Frequency::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ubii.processing.ProcessingMode.Frequency)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 hertz = 1;
  if (this->hertz() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_hertz());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProcessingMode_Frequency::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ubii.processing.ProcessingMode.Frequency)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcessingMode_Frequency* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProcessingMode_Frequency>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ubii.processing.ProcessingMode.Frequency)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ubii.processing.ProcessingMode.Frequency)
    MergeFrom(*source);
  }
}

void ProcessingMode_Frequency::MergeFrom(const ProcessingMode_Frequency& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ubii.processing.ProcessingMode.Frequency)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hertz() != 0) {
    _internal_set_hertz(from._internal_hertz());
  }
}

void ProcessingMode_Frequency::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ubii.processing.ProcessingMode.Frequency)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcessingMode_Frequency::CopyFrom(const ProcessingMode_Frequency& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ubii.processing.ProcessingMode.Frequency)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcessingMode_Frequency::IsInitialized() const {
  return true;
}

void ProcessingMode_Frequency::InternalSwap(ProcessingMode_Frequency* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(hertz_, other->hertz_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProcessingMode_Frequency::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProcessingMode_Lockstep::InitAsDefaultInstance() {
}
class ProcessingMode_Lockstep::_Internal {
 public:
};

ProcessingMode_Lockstep::ProcessingMode_Lockstep()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ubii.processing.ProcessingMode.Lockstep)
}
ProcessingMode_Lockstep::ProcessingMode_Lockstep(const ProcessingMode_Lockstep& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  process_request_endpoint_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_process_request_endpoint().empty()) {
    process_request_endpoint_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.process_request_endpoint_);
  }
  // @@protoc_insertion_point(copy_constructor:ubii.processing.ProcessingMode.Lockstep)
}

void ProcessingMode_Lockstep::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProcessingMode_Lockstep_proto_2fprocessing_2fprocessingModule_2eproto.base);
  process_request_endpoint_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ProcessingMode_Lockstep::~ProcessingMode_Lockstep() {
  // @@protoc_insertion_point(destructor:ubii.processing.ProcessingMode.Lockstep)
  SharedDtor();
}

void ProcessingMode_Lockstep::SharedDtor() {
  process_request_endpoint_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProcessingMode_Lockstep::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProcessingMode_Lockstep& ProcessingMode_Lockstep::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProcessingMode_Lockstep_proto_2fprocessing_2fprocessingModule_2eproto.base);
  return *internal_default_instance();
}


void ProcessingMode_Lockstep::Clear() {
// @@protoc_insertion_point(message_clear_start:ubii.processing.ProcessingMode.Lockstep)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  process_request_endpoint_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* ProcessingMode_Lockstep::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string process_request_endpoint = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_process_request_endpoint();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ubii.processing.ProcessingMode.Lockstep.process_request_endpoint"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProcessingMode_Lockstep::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ubii.processing.ProcessingMode.Lockstep)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string process_request_endpoint = 1;
  if (this->process_request_endpoint().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_process_request_endpoint().data(), static_cast<int>(this->_internal_process_request_endpoint().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ubii.processing.ProcessingMode.Lockstep.process_request_endpoint");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_process_request_endpoint(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ubii.processing.ProcessingMode.Lockstep)
  return target;
}

size_t ProcessingMode_Lockstep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ubii.processing.ProcessingMode.Lockstep)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string process_request_endpoint = 1;
  if (this->process_request_endpoint().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_process_request_endpoint());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProcessingMode_Lockstep::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ubii.processing.ProcessingMode.Lockstep)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcessingMode_Lockstep* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProcessingMode_Lockstep>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ubii.processing.ProcessingMode.Lockstep)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ubii.processing.ProcessingMode.Lockstep)
    MergeFrom(*source);
  }
}

void ProcessingMode_Lockstep::MergeFrom(const ProcessingMode_Lockstep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ubii.processing.ProcessingMode.Lockstep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.process_request_endpoint().size() > 0) {

    process_request_endpoint_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.process_request_endpoint_);
  }
}

void ProcessingMode_Lockstep::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ubii.processing.ProcessingMode.Lockstep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcessingMode_Lockstep::CopyFrom(const ProcessingMode_Lockstep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ubii.processing.ProcessingMode.Lockstep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcessingMode_Lockstep::IsInitialized() const {
  return true;
}

void ProcessingMode_Lockstep::InternalSwap(ProcessingMode_Lockstep* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  process_request_endpoint_.Swap(&other->process_request_endpoint_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata ProcessingMode_Lockstep::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProcessingMode_TriggerOnInput::InitAsDefaultInstance() {
}
class ProcessingMode_TriggerOnInput::_Internal {
 public:
};

ProcessingMode_TriggerOnInput::ProcessingMode_TriggerOnInput()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ubii.processing.ProcessingMode.TriggerOnInput)
}
ProcessingMode_TriggerOnInput::ProcessingMode_TriggerOnInput(const ProcessingMode_TriggerOnInput& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&min_delay_ms_, &from.min_delay_ms_,
    static_cast<size_t>(reinterpret_cast<char*>(&all_inputs_need_update_) -
    reinterpret_cast<char*>(&min_delay_ms_)) + sizeof(all_inputs_need_update_));
  // @@protoc_insertion_point(copy_constructor:ubii.processing.ProcessingMode.TriggerOnInput)
}

void ProcessingMode_TriggerOnInput::SharedCtor() {
  ::memset(&min_delay_ms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&all_inputs_need_update_) -
      reinterpret_cast<char*>(&min_delay_ms_)) + sizeof(all_inputs_need_update_));
}

ProcessingMode_TriggerOnInput::~ProcessingMode_TriggerOnInput() {
  // @@protoc_insertion_point(destructor:ubii.processing.ProcessingMode.TriggerOnInput)
  SharedDtor();
}

void ProcessingMode_TriggerOnInput::SharedDtor() {
}

void ProcessingMode_TriggerOnInput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProcessingMode_TriggerOnInput& ProcessingMode_TriggerOnInput::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProcessingMode_TriggerOnInput_proto_2fprocessing_2fprocessingModule_2eproto.base);
  return *internal_default_instance();
}


void ProcessingMode_TriggerOnInput::Clear() {
// @@protoc_insertion_point(message_clear_start:ubii.processing.ProcessingMode.TriggerOnInput)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&min_delay_ms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&all_inputs_need_update_) -
      reinterpret_cast<char*>(&min_delay_ms_)) + sizeof(all_inputs_need_update_));
  _internal_metadata_.Clear();
}

const char* ProcessingMode_TriggerOnInput::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 min_delay_ms = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          min_delay_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool all_inputs_need_update = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          all_inputs_need_update_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProcessingMode_TriggerOnInput::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ubii.processing.ProcessingMode.TriggerOnInput)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 min_delay_ms = 1;
  if (this->min_delay_ms() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_min_delay_ms(), target);
  }

  // bool all_inputs_need_update = 2;
  if (this->all_inputs_need_update() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_all_inputs_need_update(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ubii.processing.ProcessingMode.TriggerOnInput)
  return target;
}

size_t ProcessingMode_TriggerOnInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ubii.processing.ProcessingMode.TriggerOnInput)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 min_delay_ms = 1;
  if (this->min_delay_ms() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_min_delay_ms());
  }

  // bool all_inputs_need_update = 2;
  if (this->all_inputs_need_update() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProcessingMode_TriggerOnInput::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ubii.processing.ProcessingMode.TriggerOnInput)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcessingMode_TriggerOnInput* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProcessingMode_TriggerOnInput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ubii.processing.ProcessingMode.TriggerOnInput)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ubii.processing.ProcessingMode.TriggerOnInput)
    MergeFrom(*source);
  }
}

void ProcessingMode_TriggerOnInput::MergeFrom(const ProcessingMode_TriggerOnInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ubii.processing.ProcessingMode.TriggerOnInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.min_delay_ms() != 0) {
    _internal_set_min_delay_ms(from._internal_min_delay_ms());
  }
  if (from.all_inputs_need_update() != 0) {
    _internal_set_all_inputs_need_update(from._internal_all_inputs_need_update());
  }
}

void ProcessingMode_TriggerOnInput::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ubii.processing.ProcessingMode.TriggerOnInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcessingMode_TriggerOnInput::CopyFrom(const ProcessingMode_TriggerOnInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ubii.processing.ProcessingMode.TriggerOnInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcessingMode_TriggerOnInput::IsInitialized() const {
  return true;
}

void ProcessingMode_TriggerOnInput::InternalSwap(ProcessingMode_TriggerOnInput* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(min_delay_ms_, other->min_delay_ms_);
  swap(all_inputs_need_update_, other->all_inputs_need_update_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProcessingMode_TriggerOnInput::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProcessingMode_Free::InitAsDefaultInstance() {
}
class ProcessingMode_Free::_Internal {
 public:
};

ProcessingMode_Free::ProcessingMode_Free()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ubii.processing.ProcessingMode.Free)
}
ProcessingMode_Free::ProcessingMode_Free(const ProcessingMode_Free& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ubii.processing.ProcessingMode.Free)
}

void ProcessingMode_Free::SharedCtor() {
}

ProcessingMode_Free::~ProcessingMode_Free() {
  // @@protoc_insertion_point(destructor:ubii.processing.ProcessingMode.Free)
  SharedDtor();
}

void ProcessingMode_Free::SharedDtor() {
}

void ProcessingMode_Free::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProcessingMode_Free& ProcessingMode_Free::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProcessingMode_Free_proto_2fprocessing_2fprocessingModule_2eproto.base);
  return *internal_default_instance();
}


void ProcessingMode_Free::Clear() {
// @@protoc_insertion_point(message_clear_start:ubii.processing.ProcessingMode.Free)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* ProcessingMode_Free::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProcessingMode_Free::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ubii.processing.ProcessingMode.Free)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ubii.processing.ProcessingMode.Free)
  return target;
}

size_t ProcessingMode_Free::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ubii.processing.ProcessingMode.Free)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProcessingMode_Free::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ubii.processing.ProcessingMode.Free)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcessingMode_Free* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProcessingMode_Free>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ubii.processing.ProcessingMode.Free)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ubii.processing.ProcessingMode.Free)
    MergeFrom(*source);
  }
}

void ProcessingMode_Free::MergeFrom(const ProcessingMode_Free& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ubii.processing.ProcessingMode.Free)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ProcessingMode_Free::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ubii.processing.ProcessingMode.Free)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcessingMode_Free::CopyFrom(const ProcessingMode_Free& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ubii.processing.ProcessingMode.Free)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcessingMode_Free::IsInitialized() const {
  return true;
}

void ProcessingMode_Free::InternalSwap(ProcessingMode_Free* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProcessingMode_Free::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProcessingMode::InitAsDefaultInstance() {
  ::ubii::processing::_ProcessingMode_default_instance_.frequency_ = const_cast< ::ubii::processing::ProcessingMode_Frequency*>(
      ::ubii::processing::ProcessingMode_Frequency::internal_default_instance());
  ::ubii::processing::_ProcessingMode_default_instance_.lockstep_ = const_cast< ::ubii::processing::ProcessingMode_Lockstep*>(
      ::ubii::processing::ProcessingMode_Lockstep::internal_default_instance());
  ::ubii::processing::_ProcessingMode_default_instance_.trigger_on_input_ = const_cast< ::ubii::processing::ProcessingMode_TriggerOnInput*>(
      ::ubii::processing::ProcessingMode_TriggerOnInput::internal_default_instance());
  ::ubii::processing::_ProcessingMode_default_instance_.free_ = const_cast< ::ubii::processing::ProcessingMode_Free*>(
      ::ubii::processing::ProcessingMode_Free::internal_default_instance());
}
class ProcessingMode::_Internal {
 public:
  static const ::ubii::processing::ProcessingMode_Frequency& frequency(const ProcessingMode* msg);
  static const ::ubii::processing::ProcessingMode_Lockstep& lockstep(const ProcessingMode* msg);
  static const ::ubii::processing::ProcessingMode_TriggerOnInput& trigger_on_input(const ProcessingMode* msg);
  static const ::ubii::processing::ProcessingMode_Free& free(const ProcessingMode* msg);
};

const ::ubii::processing::ProcessingMode_Frequency&
ProcessingMode::_Internal::frequency(const ProcessingMode* msg) {
  return *msg->mode_.frequency_;
}
const ::ubii::processing::ProcessingMode_Lockstep&
ProcessingMode::_Internal::lockstep(const ProcessingMode* msg) {
  return *msg->mode_.lockstep_;
}
const ::ubii::processing::ProcessingMode_TriggerOnInput&
ProcessingMode::_Internal::trigger_on_input(const ProcessingMode* msg) {
  return *msg->mode_.trigger_on_input_;
}
const ::ubii::processing::ProcessingMode_Free&
ProcessingMode::_Internal::free(const ProcessingMode* msg) {
  return *msg->mode_.free_;
}
void ProcessingMode::set_allocated_frequency(::ubii::processing::ProcessingMode_Frequency* frequency) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_mode();
  if (frequency) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      frequency = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, frequency, submessage_arena);
    }
    set_has_frequency();
    mode_.frequency_ = frequency;
  }
  // @@protoc_insertion_point(field_set_allocated:ubii.processing.ProcessingMode.frequency)
}
void ProcessingMode::set_allocated_lockstep(::ubii::processing::ProcessingMode_Lockstep* lockstep) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_mode();
  if (lockstep) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      lockstep = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, lockstep, submessage_arena);
    }
    set_has_lockstep();
    mode_.lockstep_ = lockstep;
  }
  // @@protoc_insertion_point(field_set_allocated:ubii.processing.ProcessingMode.lockstep)
}
void ProcessingMode::set_allocated_trigger_on_input(::ubii::processing::ProcessingMode_TriggerOnInput* trigger_on_input) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_mode();
  if (trigger_on_input) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      trigger_on_input = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, trigger_on_input, submessage_arena);
    }
    set_has_trigger_on_input();
    mode_.trigger_on_input_ = trigger_on_input;
  }
  // @@protoc_insertion_point(field_set_allocated:ubii.processing.ProcessingMode.trigger_on_input)
}
void ProcessingMode::set_allocated_free(::ubii::processing::ProcessingMode_Free* free) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_mode();
  if (free) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      free = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, free, submessage_arena);
    }
    set_has_free();
    mode_.free_ = free;
  }
  // @@protoc_insertion_point(field_set_allocated:ubii.processing.ProcessingMode.free)
}
ProcessingMode::ProcessingMode()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ubii.processing.ProcessingMode)
}
ProcessingMode::ProcessingMode(const ProcessingMode& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_mode();
  switch (from.mode_case()) {
    case kFrequency: {
      _internal_mutable_frequency()->::ubii::processing::ProcessingMode_Frequency::MergeFrom(from._internal_frequency());
      break;
    }
    case kLockstep: {
      _internal_mutable_lockstep()->::ubii::processing::ProcessingMode_Lockstep::MergeFrom(from._internal_lockstep());
      break;
    }
    case kTriggerOnInput: {
      _internal_mutable_trigger_on_input()->::ubii::processing::ProcessingMode_TriggerOnInput::MergeFrom(from._internal_trigger_on_input());
      break;
    }
    case kFree: {
      _internal_mutable_free()->::ubii::processing::ProcessingMode_Free::MergeFrom(from._internal_free());
      break;
    }
    case MODE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ubii.processing.ProcessingMode)
}

void ProcessingMode::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProcessingMode_proto_2fprocessing_2fprocessingModule_2eproto.base);
  clear_has_mode();
}

ProcessingMode::~ProcessingMode() {
  // @@protoc_insertion_point(destructor:ubii.processing.ProcessingMode)
  SharedDtor();
}

void ProcessingMode::SharedDtor() {
  if (has_mode()) {
    clear_mode();
  }
}

void ProcessingMode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProcessingMode& ProcessingMode::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProcessingMode_proto_2fprocessing_2fprocessingModule_2eproto.base);
  return *internal_default_instance();
}


void ProcessingMode::clear_mode() {
// @@protoc_insertion_point(one_of_clear_start:ubii.processing.ProcessingMode)
  switch (mode_case()) {
    case kFrequency: {
      delete mode_.frequency_;
      break;
    }
    case kLockstep: {
      delete mode_.lockstep_;
      break;
    }
    case kTriggerOnInput: {
      delete mode_.trigger_on_input_;
      break;
    }
    case kFree: {
      delete mode_.free_;
      break;
    }
    case MODE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MODE_NOT_SET;
}


void ProcessingMode::Clear() {
// @@protoc_insertion_point(message_clear_start:ubii.processing.ProcessingMode)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_mode();
  _internal_metadata_.Clear();
}

const char* ProcessingMode::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ubii.processing.ProcessingMode.Frequency frequency = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_frequency(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ubii.processing.ProcessingMode.Lockstep lockstep = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_lockstep(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ubii.processing.ProcessingMode.TriggerOnInput trigger_on_input = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_trigger_on_input(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ubii.processing.ProcessingMode.Free free = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_free(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProcessingMode::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ubii.processing.ProcessingMode)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ubii.processing.ProcessingMode.Frequency frequency = 1;
  if (_internal_has_frequency()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::frequency(this), target, stream);
  }

  // .ubii.processing.ProcessingMode.Lockstep lockstep = 2;
  if (_internal_has_lockstep()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::lockstep(this), target, stream);
  }

  // .ubii.processing.ProcessingMode.TriggerOnInput trigger_on_input = 3;
  if (_internal_has_trigger_on_input()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::trigger_on_input(this), target, stream);
  }

  // .ubii.processing.ProcessingMode.Free free = 4;
  if (_internal_has_free()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::free(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ubii.processing.ProcessingMode)
  return target;
}

size_t ProcessingMode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ubii.processing.ProcessingMode)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (mode_case()) {
    // .ubii.processing.ProcessingMode.Frequency frequency = 1;
    case kFrequency: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mode_.frequency_);
      break;
    }
    // .ubii.processing.ProcessingMode.Lockstep lockstep = 2;
    case kLockstep: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mode_.lockstep_);
      break;
    }
    // .ubii.processing.ProcessingMode.TriggerOnInput trigger_on_input = 3;
    case kTriggerOnInput: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mode_.trigger_on_input_);
      break;
    }
    // .ubii.processing.ProcessingMode.Free free = 4;
    case kFree: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mode_.free_);
      break;
    }
    case MODE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProcessingMode::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ubii.processing.ProcessingMode)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcessingMode* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProcessingMode>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ubii.processing.ProcessingMode)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ubii.processing.ProcessingMode)
    MergeFrom(*source);
  }
}

void ProcessingMode::MergeFrom(const ProcessingMode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ubii.processing.ProcessingMode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.mode_case()) {
    case kFrequency: {
      _internal_mutable_frequency()->::ubii::processing::ProcessingMode_Frequency::MergeFrom(from._internal_frequency());
      break;
    }
    case kLockstep: {
      _internal_mutable_lockstep()->::ubii::processing::ProcessingMode_Lockstep::MergeFrom(from._internal_lockstep());
      break;
    }
    case kTriggerOnInput: {
      _internal_mutable_trigger_on_input()->::ubii::processing::ProcessingMode_TriggerOnInput::MergeFrom(from._internal_trigger_on_input());
      break;
    }
    case kFree: {
      _internal_mutable_free()->::ubii::processing::ProcessingMode_Free::MergeFrom(from._internal_free());
      break;
    }
    case MODE_NOT_SET: {
      break;
    }
  }
}

void ProcessingMode::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ubii.processing.ProcessingMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcessingMode::CopyFrom(const ProcessingMode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ubii.processing.ProcessingMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcessingMode::IsInitialized() const {
  return true;
}

void ProcessingMode::InternalSwap(ProcessingMode* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(mode_, other->mode_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProcessingMode::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ModuleIO::InitAsDefaultInstance() {
}
class ModuleIO::_Internal {
 public:
};

ModuleIO::ModuleIO()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ubii.processing.ModuleIO)
}
ModuleIO::ModuleIO(const ModuleIO& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  internal_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_internal_name().empty()) {
    internal_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.internal_name_);
  }
  message_format_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message_format().empty()) {
    message_format_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.message_format_);
  }
  is_record_list_ = from.is_record_list_;
  // @@protoc_insertion_point(copy_constructor:ubii.processing.ModuleIO)
}

void ModuleIO::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ModuleIO_proto_2fprocessing_2fprocessingModule_2eproto.base);
  internal_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_format_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  is_record_list_ = false;
}

ModuleIO::~ModuleIO() {
  // @@protoc_insertion_point(destructor:ubii.processing.ModuleIO)
  SharedDtor();
}

void ModuleIO::SharedDtor() {
  internal_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_format_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ModuleIO::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ModuleIO& ModuleIO::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ModuleIO_proto_2fprocessing_2fprocessingModule_2eproto.base);
  return *internal_default_instance();
}


void ModuleIO::Clear() {
// @@protoc_insertion_point(message_clear_start:ubii.processing.ModuleIO)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  internal_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_format_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  is_record_list_ = false;
  _internal_metadata_.Clear();
}

const char* ModuleIO::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string internal_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_internal_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ubii.processing.ModuleIO.internal_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string message_format = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_message_format();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ubii.processing.ModuleIO.message_format"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool is_record_list = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          is_record_list_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ModuleIO::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ubii.processing.ModuleIO)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string internal_name = 1;
  if (this->internal_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_internal_name().data(), static_cast<int>(this->_internal_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ubii.processing.ModuleIO.internal_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_internal_name(), target);
  }

  // string message_format = 2;
  if (this->message_format().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message_format().data(), static_cast<int>(this->_internal_message_format().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ubii.processing.ModuleIO.message_format");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message_format(), target);
  }

  // bool is_record_list = 3;
  if (this->is_record_list() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_is_record_list(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ubii.processing.ModuleIO)
  return target;
}

size_t ModuleIO::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ubii.processing.ModuleIO)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string internal_name = 1;
  if (this->internal_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_internal_name());
  }

  // string message_format = 2;
  if (this->message_format().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message_format());
  }

  // bool is_record_list = 3;
  if (this->is_record_list() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModuleIO::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ubii.processing.ModuleIO)
  GOOGLE_DCHECK_NE(&from, this);
  const ModuleIO* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ModuleIO>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ubii.processing.ModuleIO)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ubii.processing.ModuleIO)
    MergeFrom(*source);
  }
}

void ModuleIO::MergeFrom(const ModuleIO& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ubii.processing.ModuleIO)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.internal_name().size() > 0) {

    internal_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.internal_name_);
  }
  if (from.message_format().size() > 0) {

    message_format_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.message_format_);
  }
  if (from.is_record_list() != 0) {
    _internal_set_is_record_list(from._internal_is_record_list());
  }
}

void ModuleIO::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ubii.processing.ModuleIO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModuleIO::CopyFrom(const ModuleIO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ubii.processing.ModuleIO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleIO::IsInitialized() const {
  return true;
}

void ModuleIO::InternalSwap(ModuleIO* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  internal_name_.Swap(&other->internal_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  message_format_.Swap(&other->message_format_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(is_record_list_, other->is_record_list_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleIO::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProcessingModule::InitAsDefaultInstance() {
  ::ubii::processing::_ProcessingModule_default_instance_._instance.get_mutable()->processing_mode_ = const_cast< ::ubii::processing::ProcessingMode*>(
      ::ubii::processing::ProcessingMode::internal_default_instance());
}
class ProcessingModule::_Internal {
 public:
  static const ::ubii::processing::ProcessingMode& processing_mode(const ProcessingModule* msg);
};

const ::ubii::processing::ProcessingMode&
ProcessingModule::_Internal::processing_mode(const ProcessingModule* msg) {
  return *msg->processing_mode_;
}
ProcessingModule::ProcessingModule()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ubii.processing.ProcessingModule)
}
ProcessingModule::ProcessingModule(const ProcessingModule& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      authors_(from.authors_),
      tags_(from.tags_),
      inputs_(from.inputs_),
      outputs_(from.outputs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  node_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_node_id().empty()) {
    node_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.node_id_);
  }
  session_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_session_id().empty()) {
    session_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
  on_processing_stringified_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_on_processing_stringified().empty()) {
    on_processing_stringified_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.on_processing_stringified_);
  }
  on_created_stringified_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_on_created_stringified().empty()) {
    on_created_stringified_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.on_created_stringified_);
  }
  on_halted_stringified_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_on_halted_stringified().empty()) {
    on_halted_stringified_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.on_halted_stringified_);
  }
  on_destroyed_stringified_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_on_destroyed_stringified().empty()) {
    on_destroyed_stringified_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.on_destroyed_stringified_);
  }
  if (from._internal_has_processing_mode()) {
    processing_mode_ = new ::ubii::processing::ProcessingMode(*from.processing_mode_);
  } else {
    processing_mode_ = nullptr;
  }
  ::memcpy(&status_, &from.status_,
    static_cast<size_t>(reinterpret_cast<char*>(&language_) -
    reinterpret_cast<char*>(&status_)) + sizeof(language_));
  // @@protoc_insertion_point(copy_constructor:ubii.processing.ProcessingModule)
}

void ProcessingModule::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProcessingModule_proto_2fprocessing_2fprocessingModule_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  node_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  session_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  on_processing_stringified_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  on_created_stringified_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  on_halted_stringified_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  on_destroyed_stringified_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&processing_mode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&language_) -
      reinterpret_cast<char*>(&processing_mode_)) + sizeof(language_));
}

ProcessingModule::~ProcessingModule() {
  // @@protoc_insertion_point(destructor:ubii.processing.ProcessingModule)
  SharedDtor();
}

void ProcessingModule::SharedDtor() {
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  node_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  session_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  on_processing_stringified_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  on_created_stringified_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  on_halted_stringified_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  on_destroyed_stringified_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete processing_mode_;
}

void ProcessingModule::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProcessingModule& ProcessingModule::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProcessingModule_proto_2fprocessing_2fprocessingModule_2eproto.base);
  return *internal_default_instance();
}


void ProcessingModule::Clear() {
// @@protoc_insertion_point(message_clear_start:ubii.processing.ProcessingModule)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  authors_.Clear();
  tags_.Clear();
  inputs_.Clear();
  outputs_.Clear();
  id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  node_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  session_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  on_processing_stringified_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  on_created_stringified_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  on_halted_stringified_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  on_destroyed_stringified_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && processing_mode_ != nullptr) {
    delete processing_mode_;
  }
  processing_mode_ = nullptr;
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&language_) -
      reinterpret_cast<char*>(&status_)) + sizeof(language_));
  _internal_metadata_.Clear();
}

const char* ProcessingModule::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ubii.processing.ProcessingModule.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ubii.processing.ProcessingModule.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string authors = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_authors();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ubii.processing.ProcessingModule.authors"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string tags = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_tags();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ubii.processing.ProcessingModule.tags"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // string description = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ubii.processing.ProcessingModule.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string node_id = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_node_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ubii.processing.ProcessingModule.node_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string session_id = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_session_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ubii.processing.ProcessingModule.session_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ubii.processing.ProcessingModule.Status status = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::ubii::processing::ProcessingModule_Status>(val));
        } else goto handle_unusual;
        continue;
      // .ubii.processing.ProcessingMode processing_mode = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_processing_mode(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ubii.processing.ModuleIO inputs = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_inputs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .ubii.processing.ModuleIO outputs = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_outputs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<90>(ptr));
        } else goto handle_unusual;
        continue;
      // .ubii.processing.ProcessingModule.Language language = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_language(static_cast<::ubii::processing::ProcessingModule_Language>(val));
        } else goto handle_unusual;
        continue;
      // string on_processing_stringified = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          auto str = _internal_mutable_on_processing_stringified();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ubii.processing.ProcessingModule.on_processing_stringified"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string on_created_stringified = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          auto str = _internal_mutable_on_created_stringified();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ubii.processing.ProcessingModule.on_created_stringified"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string on_halted_stringified = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          auto str = _internal_mutable_on_halted_stringified();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ubii.processing.ProcessingModule.on_halted_stringified"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string on_destroyed_stringified = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          auto str = _internal_mutable_on_destroyed_stringified();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ubii.processing.ProcessingModule.on_destroyed_stringified"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProcessingModule::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ubii.processing.ProcessingModule)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ubii.processing.ProcessingModule.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ubii.processing.ProcessingModule.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // repeated string authors = 3;
  for (int i = 0, n = this->_internal_authors_size(); i < n; i++) {
    const auto& s = this->_internal_authors(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ubii.processing.ProcessingModule.authors");
    target = stream->WriteString(3, s, target);
  }

  // repeated string tags = 4;
  for (int i = 0, n = this->_internal_tags_size(); i < n; i++) {
    const auto& s = this->_internal_tags(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ubii.processing.ProcessingModule.tags");
    target = stream->WriteString(4, s, target);
  }

  // string description = 5;
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ubii.processing.ProcessingModule.description");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_description(), target);
  }

  // string node_id = 6;
  if (this->node_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_node_id().data(), static_cast<int>(this->_internal_node_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ubii.processing.ProcessingModule.node_id");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_node_id(), target);
  }

  // string session_id = 7;
  if (this->session_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_session_id().data(), static_cast<int>(this->_internal_session_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ubii.processing.ProcessingModule.session_id");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_session_id(), target);
  }

  // .ubii.processing.ProcessingModule.Status status = 8;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      8, this->_internal_status(), target);
  }

  // .ubii.processing.ProcessingMode processing_mode = 9;
  if (this->has_processing_mode()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::processing_mode(this), target, stream);
  }

  // repeated .ubii.processing.ModuleIO inputs = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_inputs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, this->_internal_inputs(i), target, stream);
  }

  // repeated .ubii.processing.ModuleIO outputs = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_outputs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, this->_internal_outputs(i), target, stream);
  }

  // .ubii.processing.ProcessingModule.Language language = 12;
  if (this->language() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      12, this->_internal_language(), target);
  }

  // string on_processing_stringified = 13;
  if (this->on_processing_stringified().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_on_processing_stringified().data(), static_cast<int>(this->_internal_on_processing_stringified().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ubii.processing.ProcessingModule.on_processing_stringified");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_on_processing_stringified(), target);
  }

  // string on_created_stringified = 14;
  if (this->on_created_stringified().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_on_created_stringified().data(), static_cast<int>(this->_internal_on_created_stringified().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ubii.processing.ProcessingModule.on_created_stringified");
    target = stream->WriteStringMaybeAliased(
        14, this->_internal_on_created_stringified(), target);
  }

  // string on_halted_stringified = 15;
  if (this->on_halted_stringified().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_on_halted_stringified().data(), static_cast<int>(this->_internal_on_halted_stringified().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ubii.processing.ProcessingModule.on_halted_stringified");
    target = stream->WriteStringMaybeAliased(
        15, this->_internal_on_halted_stringified(), target);
  }

  // string on_destroyed_stringified = 16;
  if (this->on_destroyed_stringified().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_on_destroyed_stringified().data(), static_cast<int>(this->_internal_on_destroyed_stringified().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ubii.processing.ProcessingModule.on_destroyed_stringified");
    target = stream->WriteStringMaybeAliased(
        16, this->_internal_on_destroyed_stringified(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ubii.processing.ProcessingModule)
  return target;
}

size_t ProcessingModule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ubii.processing.ProcessingModule)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string authors = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(authors_.size());
  for (int i = 0, n = authors_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      authors_.Get(i));
  }

  // repeated string tags = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(tags_.size());
  for (int i = 0, n = tags_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      tags_.Get(i));
  }

  // repeated .ubii.processing.ModuleIO inputs = 10;
  total_size += 1UL * this->_internal_inputs_size();
  for (const auto& msg : this->inputs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ubii.processing.ModuleIO outputs = 11;
  total_size += 1UL * this->_internal_outputs_size();
  for (const auto& msg : this->outputs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string description = 5;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string node_id = 6;
  if (this->node_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_node_id());
  }

  // string session_id = 7;
  if (this->session_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_session_id());
  }

  // string on_processing_stringified = 13;
  if (this->on_processing_stringified().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_on_processing_stringified());
  }

  // string on_created_stringified = 14;
  if (this->on_created_stringified().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_on_created_stringified());
  }

  // string on_halted_stringified = 15;
  if (this->on_halted_stringified().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_on_halted_stringified());
  }

  // string on_destroyed_stringified = 16;
  if (this->on_destroyed_stringified().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_on_destroyed_stringified());
  }

  // .ubii.processing.ProcessingMode processing_mode = 9;
  if (this->has_processing_mode()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *processing_mode_);
  }

  // .ubii.processing.ProcessingModule.Status status = 8;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  // .ubii.processing.ProcessingModule.Language language = 12;
  if (this->language() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_language());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProcessingModule::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ubii.processing.ProcessingModule)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcessingModule* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProcessingModule>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ubii.processing.ProcessingModule)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ubii.processing.ProcessingModule)
    MergeFrom(*source);
  }
}

void ProcessingModule::MergeFrom(const ProcessingModule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ubii.processing.ProcessingModule)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  authors_.MergeFrom(from.authors_);
  tags_.MergeFrom(from.tags_);
  inputs_.MergeFrom(from.inputs_);
  outputs_.MergeFrom(from.outputs_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.node_id().size() > 0) {

    node_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.node_id_);
  }
  if (from.session_id().size() > 0) {

    session_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
  if (from.on_processing_stringified().size() > 0) {

    on_processing_stringified_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.on_processing_stringified_);
  }
  if (from.on_created_stringified().size() > 0) {

    on_created_stringified_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.on_created_stringified_);
  }
  if (from.on_halted_stringified().size() > 0) {

    on_halted_stringified_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.on_halted_stringified_);
  }
  if (from.on_destroyed_stringified().size() > 0) {

    on_destroyed_stringified_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.on_destroyed_stringified_);
  }
  if (from.has_processing_mode()) {
    _internal_mutable_processing_mode()->::ubii::processing::ProcessingMode::MergeFrom(from._internal_processing_mode());
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
  if (from.language() != 0) {
    _internal_set_language(from._internal_language());
  }
}

void ProcessingModule::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ubii.processing.ProcessingModule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcessingModule::CopyFrom(const ProcessingModule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ubii.processing.ProcessingModule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcessingModule::IsInitialized() const {
  return true;
}

void ProcessingModule::InternalSwap(ProcessingModule* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  authors_.InternalSwap(&other->authors_);
  tags_.InternalSwap(&other->tags_);
  inputs_.InternalSwap(&other->inputs_);
  outputs_.InternalSwap(&other->outputs_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  node_id_.Swap(&other->node_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  session_id_.Swap(&other->session_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  on_processing_stringified_.Swap(&other->on_processing_stringified_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  on_created_stringified_.Swap(&other->on_created_stringified_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  on_halted_stringified_.Swap(&other->on_halted_stringified_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  on_destroyed_stringified_.Swap(&other->on_destroyed_stringified_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(processing_mode_, other->processing_mode_);
  swap(status_, other->status_);
  swap(language_, other->language_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProcessingModule::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProcessingModuleList::InitAsDefaultInstance() {
}
class ProcessingModuleList::_Internal {
 public:
};

ProcessingModuleList::ProcessingModuleList()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ubii.processing.ProcessingModuleList)
}
ProcessingModuleList::ProcessingModuleList(const ProcessingModuleList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      elements_(from.elements_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ubii.processing.ProcessingModuleList)
}

void ProcessingModuleList::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProcessingModuleList_proto_2fprocessing_2fprocessingModule_2eproto.base);
}

ProcessingModuleList::~ProcessingModuleList() {
  // @@protoc_insertion_point(destructor:ubii.processing.ProcessingModuleList)
  SharedDtor();
}

void ProcessingModuleList::SharedDtor() {
}

void ProcessingModuleList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProcessingModuleList& ProcessingModuleList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProcessingModuleList_proto_2fprocessing_2fprocessingModule_2eproto.base);
  return *internal_default_instance();
}


void ProcessingModuleList::Clear() {
// @@protoc_insertion_point(message_clear_start:ubii.processing.ProcessingModuleList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  elements_.Clear();
  _internal_metadata_.Clear();
}

const char* ProcessingModuleList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .ubii.processing.ProcessingModule elements = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_elements(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProcessingModuleList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ubii.processing.ProcessingModuleList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ubii.processing.ProcessingModule elements = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_elements_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_elements(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ubii.processing.ProcessingModuleList)
  return target;
}

size_t ProcessingModuleList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ubii.processing.ProcessingModuleList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ubii.processing.ProcessingModule elements = 1;
  total_size += 1UL * this->_internal_elements_size();
  for (const auto& msg : this->elements_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProcessingModuleList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ubii.processing.ProcessingModuleList)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcessingModuleList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProcessingModuleList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ubii.processing.ProcessingModuleList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ubii.processing.ProcessingModuleList)
    MergeFrom(*source);
  }
}

void ProcessingModuleList::MergeFrom(const ProcessingModuleList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ubii.processing.ProcessingModuleList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  elements_.MergeFrom(from.elements_);
}

void ProcessingModuleList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ubii.processing.ProcessingModuleList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcessingModuleList::CopyFrom(const ProcessingModuleList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ubii.processing.ProcessingModuleList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcessingModuleList::IsInitialized() const {
  return true;
}

void ProcessingModuleList::InternalSwap(ProcessingModuleList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  elements_.InternalSwap(&other->elements_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProcessingModuleList::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace processing
}  // namespace ubii
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ubii::processing::ProcessingMode_Frequency* Arena::CreateMaybeMessage< ::ubii::processing::ProcessingMode_Frequency >(Arena* arena) {
  return Arena::CreateInternal< ::ubii::processing::ProcessingMode_Frequency >(arena);
}
template<> PROTOBUF_NOINLINE ::ubii::processing::ProcessingMode_Lockstep* Arena::CreateMaybeMessage< ::ubii::processing::ProcessingMode_Lockstep >(Arena* arena) {
  return Arena::CreateInternal< ::ubii::processing::ProcessingMode_Lockstep >(arena);
}
template<> PROTOBUF_NOINLINE ::ubii::processing::ProcessingMode_TriggerOnInput* Arena::CreateMaybeMessage< ::ubii::processing::ProcessingMode_TriggerOnInput >(Arena* arena) {
  return Arena::CreateInternal< ::ubii::processing::ProcessingMode_TriggerOnInput >(arena);
}
template<> PROTOBUF_NOINLINE ::ubii::processing::ProcessingMode_Free* Arena::CreateMaybeMessage< ::ubii::processing::ProcessingMode_Free >(Arena* arena) {
  return Arena::CreateInternal< ::ubii::processing::ProcessingMode_Free >(arena);
}
template<> PROTOBUF_NOINLINE ::ubii::processing::ProcessingMode* Arena::CreateMaybeMessage< ::ubii::processing::ProcessingMode >(Arena* arena) {
  return Arena::CreateInternal< ::ubii::processing::ProcessingMode >(arena);
}
template<> PROTOBUF_NOINLINE ::ubii::processing::ModuleIO* Arena::CreateMaybeMessage< ::ubii::processing::ModuleIO >(Arena* arena) {
  return Arena::CreateInternal< ::ubii::processing::ModuleIO >(arena);
}
template<> PROTOBUF_NOINLINE ::ubii::processing::ProcessingModule* Arena::CreateMaybeMessage< ::ubii::processing::ProcessingModule >(Arena* arena) {
  return Arena::CreateInternal< ::ubii::processing::ProcessingModule >(arena);
}
template<> PROTOBUF_NOINLINE ::ubii::processing::ProcessingModuleList* Arena::CreateMaybeMessage< ::ubii::processing::ProcessingModuleList >(Arena* arena) {
  return Arena::CreateInternal< ::ubii::processing::ProcessingModuleList >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
