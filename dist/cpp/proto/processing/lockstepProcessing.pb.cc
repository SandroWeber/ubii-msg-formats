// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/processing/lockstepProcessing.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "proto/processing/lockstepProcessing.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ubii {
namespace processing {

namespace {

const ::google::protobuf::Descriptor* LockstepProcessingRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LockstepProcessingRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* LockstepProcessingReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LockstepProcessingReply_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_proto_2fprocessing_2flockstepProcessing_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_proto_2fprocessing_2flockstepProcessing_2eproto() {
  protobuf_AddDesc_proto_2fprocessing_2flockstepProcessing_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "proto/processing/lockstepProcessing.proto");
  GOOGLE_CHECK(file != NULL);
  LockstepProcessingRequest_descriptor_ = file->message_type(0);
  static const int LockstepProcessingRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockstepProcessingRequest, processing_module_ids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockstepProcessingRequest, records_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockstepProcessingRequest, delta_time_ms_),
  };
  LockstepProcessingRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LockstepProcessingRequest_descriptor_,
      LockstepProcessingRequest::default_instance_,
      LockstepProcessingRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(LockstepProcessingRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockstepProcessingRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockstepProcessingRequest, _is_default_instance_));
  LockstepProcessingReply_descriptor_ = file->message_type(1);
  static const int LockstepProcessingReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockstepProcessingReply, processing_module_ids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockstepProcessingReply, records_),
  };
  LockstepProcessingReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LockstepProcessingReply_descriptor_,
      LockstepProcessingReply::default_instance_,
      LockstepProcessingReply_offsets_,
      -1,
      -1,
      -1,
      sizeof(LockstepProcessingReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockstepProcessingReply, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockstepProcessingReply, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_proto_2fprocessing_2flockstepProcessing_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LockstepProcessingRequest_descriptor_, &LockstepProcessingRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LockstepProcessingReply_descriptor_, &LockstepProcessingReply::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_proto_2fprocessing_2flockstepProcessing_2eproto() {
  delete LockstepProcessingRequest::default_instance_;
  delete LockstepProcessingRequest_reflection_;
  delete LockstepProcessingReply::default_instance_;
  delete LockstepProcessingReply_reflection_;
}

void protobuf_AddDesc_proto_2fprocessing_2flockstepProcessing_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_proto_2fprocessing_2flockstepProcessing_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::ubii::topicData::protobuf_AddDesc_proto_2ftopicData_2ftopicDataRecord_2ftopicDataRecord_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n)proto/processing/lockstepProcessing.pr"
    "oto\022\017ubii.processing\0325proto/topicData/to"
    "picDataRecord/topicDataRecord.proto\"\203\001\n\031"
    "LockstepProcessingRequest\022\035\n\025processing_"
    "module_ids\030\001 \003(\t\0220\n\007records\030\002 \003(\0132\037.ubii"
    ".topicData.TopicDataRecord\022\025\n\rdelta_time"
    "_ms\030\003 \001(\005\"j\n\027LockstepProcessingReply\022\035\n\025"
    "processing_module_ids\030\001 \003(\t\0220\n\007records\030\002"
    " \003(\0132\037.ubii.topicData.TopicDataRecordb\006p"
    "roto3", 365);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proto/processing/lockstepProcessing.proto", &protobuf_RegisterTypes);
  LockstepProcessingRequest::default_instance_ = new LockstepProcessingRequest();
  LockstepProcessingReply::default_instance_ = new LockstepProcessingReply();
  LockstepProcessingRequest::default_instance_->InitAsDefaultInstance();
  LockstepProcessingReply::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_proto_2fprocessing_2flockstepProcessing_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_proto_2fprocessing_2flockstepProcessing_2eproto {
  StaticDescriptorInitializer_proto_2fprocessing_2flockstepProcessing_2eproto() {
    protobuf_AddDesc_proto_2fprocessing_2flockstepProcessing_2eproto();
  }
} static_descriptor_initializer_proto_2fprocessing_2flockstepProcessing_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LockstepProcessingRequest::kProcessingModuleIdsFieldNumber;
const int LockstepProcessingRequest::kRecordsFieldNumber;
const int LockstepProcessingRequest::kDeltaTimeMsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LockstepProcessingRequest::LockstepProcessingRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ubii.processing.LockstepProcessingRequest)
}

void LockstepProcessingRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

LockstepProcessingRequest::LockstepProcessingRequest(const LockstepProcessingRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ubii.processing.LockstepProcessingRequest)
}

void LockstepProcessingRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  delta_time_ms_ = 0;
}

LockstepProcessingRequest::~LockstepProcessingRequest() {
  // @@protoc_insertion_point(destructor:ubii.processing.LockstepProcessingRequest)
  SharedDtor();
}

void LockstepProcessingRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LockstepProcessingRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LockstepProcessingRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LockstepProcessingRequest_descriptor_;
}

const LockstepProcessingRequest& LockstepProcessingRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fprocessing_2flockstepProcessing_2eproto();
  return *default_instance_;
}

LockstepProcessingRequest* LockstepProcessingRequest::default_instance_ = NULL;

LockstepProcessingRequest* LockstepProcessingRequest::New(::google::protobuf::Arena* arena) const {
  LockstepProcessingRequest* n = new LockstepProcessingRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LockstepProcessingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ubii.processing.LockstepProcessingRequest)
  delta_time_ms_ = 0;
  processing_module_ids_.Clear();
  records_.Clear();
}

bool LockstepProcessingRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ubii.processing.LockstepProcessingRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string processing_module_ids = 1;
      case 1: {
        if (tag == 10) {
         parse_processing_module_ids:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_processing_module_ids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->processing_module_ids(this->processing_module_ids_size() - 1).data(),
            this->processing_module_ids(this->processing_module_ids_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.processing.LockstepProcessingRequest.processing_module_ids"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_processing_module_ids;
        if (input->ExpectTag(18)) goto parse_records;
        break;
      }

      // repeated .ubii.topicData.TopicDataRecord records = 2;
      case 2: {
        if (tag == 18) {
         parse_records:
          DO_(input->IncrementRecursionDepth());
         parse_loop_records:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_records()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_records;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(24)) goto parse_delta_time_ms;
        break;
      }

      // optional int32 delta_time_ms = 3;
      case 3: {
        if (tag == 24) {
         parse_delta_time_ms:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delta_time_ms_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ubii.processing.LockstepProcessingRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ubii.processing.LockstepProcessingRequest)
  return false;
#undef DO_
}

void LockstepProcessingRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ubii.processing.LockstepProcessingRequest)
  // repeated string processing_module_ids = 1;
  for (int i = 0; i < this->processing_module_ids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->processing_module_ids(i).data(), this->processing_module_ids(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.processing.LockstepProcessingRequest.processing_module_ids");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->processing_module_ids(i), output);
  }

  // repeated .ubii.topicData.TopicDataRecord records = 2;
  for (unsigned int i = 0, n = this->records_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->records(i), output);
  }

  // optional int32 delta_time_ms = 3;
  if (this->delta_time_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->delta_time_ms(), output);
  }

  // @@protoc_insertion_point(serialize_end:ubii.processing.LockstepProcessingRequest)
}

::google::protobuf::uint8* LockstepProcessingRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ubii.processing.LockstepProcessingRequest)
  // repeated string processing_module_ids = 1;
  for (int i = 0; i < this->processing_module_ids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->processing_module_ids(i).data(), this->processing_module_ids(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.processing.LockstepProcessingRequest.processing_module_ids");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->processing_module_ids(i), target);
  }

  // repeated .ubii.topicData.TopicDataRecord records = 2;
  for (unsigned int i = 0, n = this->records_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->records(i), false, target);
  }

  // optional int32 delta_time_ms = 3;
  if (this->delta_time_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->delta_time_ms(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ubii.processing.LockstepProcessingRequest)
  return target;
}

int LockstepProcessingRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ubii.processing.LockstepProcessingRequest)
  int total_size = 0;

  // optional int32 delta_time_ms = 3;
  if (this->delta_time_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->delta_time_ms());
  }

  // repeated string processing_module_ids = 1;
  total_size += 1 * this->processing_module_ids_size();
  for (int i = 0; i < this->processing_module_ids_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->processing_module_ids(i));
  }

  // repeated .ubii.topicData.TopicDataRecord records = 2;
  total_size += 1 * this->records_size();
  for (int i = 0; i < this->records_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->records(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LockstepProcessingRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ubii.processing.LockstepProcessingRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LockstepProcessingRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LockstepProcessingRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ubii.processing.LockstepProcessingRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ubii.processing.LockstepProcessingRequest)
    MergeFrom(*source);
  }
}

void LockstepProcessingRequest::MergeFrom(const LockstepProcessingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ubii.processing.LockstepProcessingRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  processing_module_ids_.MergeFrom(from.processing_module_ids_);
  records_.MergeFrom(from.records_);
  if (from.delta_time_ms() != 0) {
    set_delta_time_ms(from.delta_time_ms());
  }
}

void LockstepProcessingRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ubii.processing.LockstepProcessingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LockstepProcessingRequest::CopyFrom(const LockstepProcessingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ubii.processing.LockstepProcessingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LockstepProcessingRequest::IsInitialized() const {

  return true;
}

void LockstepProcessingRequest::Swap(LockstepProcessingRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LockstepProcessingRequest::InternalSwap(LockstepProcessingRequest* other) {
  processing_module_ids_.UnsafeArenaSwap(&other->processing_module_ids_);
  records_.UnsafeArenaSwap(&other->records_);
  std::swap(delta_time_ms_, other->delta_time_ms_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LockstepProcessingRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LockstepProcessingRequest_descriptor_;
  metadata.reflection = LockstepProcessingRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LockstepProcessingRequest

// repeated string processing_module_ids = 1;
int LockstepProcessingRequest::processing_module_ids_size() const {
  return processing_module_ids_.size();
}
void LockstepProcessingRequest::clear_processing_module_ids() {
  processing_module_ids_.Clear();
}
 const ::std::string& LockstepProcessingRequest::processing_module_ids(int index) const {
  // @@protoc_insertion_point(field_get:ubii.processing.LockstepProcessingRequest.processing_module_ids)
  return processing_module_ids_.Get(index);
}
 ::std::string* LockstepProcessingRequest::mutable_processing_module_ids(int index) {
  // @@protoc_insertion_point(field_mutable:ubii.processing.LockstepProcessingRequest.processing_module_ids)
  return processing_module_ids_.Mutable(index);
}
 void LockstepProcessingRequest::set_processing_module_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ubii.processing.LockstepProcessingRequest.processing_module_ids)
  processing_module_ids_.Mutable(index)->assign(value);
}
 void LockstepProcessingRequest::set_processing_module_ids(int index, const char* value) {
  processing_module_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ubii.processing.LockstepProcessingRequest.processing_module_ids)
}
 void LockstepProcessingRequest::set_processing_module_ids(int index, const char* value, size_t size) {
  processing_module_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ubii.processing.LockstepProcessingRequest.processing_module_ids)
}
 ::std::string* LockstepProcessingRequest::add_processing_module_ids() {
  // @@protoc_insertion_point(field_add_mutable:ubii.processing.LockstepProcessingRequest.processing_module_ids)
  return processing_module_ids_.Add();
}
 void LockstepProcessingRequest::add_processing_module_ids(const ::std::string& value) {
  processing_module_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ubii.processing.LockstepProcessingRequest.processing_module_ids)
}
 void LockstepProcessingRequest::add_processing_module_ids(const char* value) {
  processing_module_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ubii.processing.LockstepProcessingRequest.processing_module_ids)
}
 void LockstepProcessingRequest::add_processing_module_ids(const char* value, size_t size) {
  processing_module_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ubii.processing.LockstepProcessingRequest.processing_module_ids)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
LockstepProcessingRequest::processing_module_ids() const {
  // @@protoc_insertion_point(field_list:ubii.processing.LockstepProcessingRequest.processing_module_ids)
  return processing_module_ids_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
LockstepProcessingRequest::mutable_processing_module_ids() {
  // @@protoc_insertion_point(field_mutable_list:ubii.processing.LockstepProcessingRequest.processing_module_ids)
  return &processing_module_ids_;
}

// repeated .ubii.topicData.TopicDataRecord records = 2;
int LockstepProcessingRequest::records_size() const {
  return records_.size();
}
void LockstepProcessingRequest::clear_records() {
  records_.Clear();
}
const ::ubii::topicData::TopicDataRecord& LockstepProcessingRequest::records(int index) const {
  // @@protoc_insertion_point(field_get:ubii.processing.LockstepProcessingRequest.records)
  return records_.Get(index);
}
::ubii::topicData::TopicDataRecord* LockstepProcessingRequest::mutable_records(int index) {
  // @@protoc_insertion_point(field_mutable:ubii.processing.LockstepProcessingRequest.records)
  return records_.Mutable(index);
}
::ubii::topicData::TopicDataRecord* LockstepProcessingRequest::add_records() {
  // @@protoc_insertion_point(field_add:ubii.processing.LockstepProcessingRequest.records)
  return records_.Add();
}
::google::protobuf::RepeatedPtrField< ::ubii::topicData::TopicDataRecord >*
LockstepProcessingRequest::mutable_records() {
  // @@protoc_insertion_point(field_mutable_list:ubii.processing.LockstepProcessingRequest.records)
  return &records_;
}
const ::google::protobuf::RepeatedPtrField< ::ubii::topicData::TopicDataRecord >&
LockstepProcessingRequest::records() const {
  // @@protoc_insertion_point(field_list:ubii.processing.LockstepProcessingRequest.records)
  return records_;
}

// optional int32 delta_time_ms = 3;
void LockstepProcessingRequest::clear_delta_time_ms() {
  delta_time_ms_ = 0;
}
 ::google::protobuf::int32 LockstepProcessingRequest::delta_time_ms() const {
  // @@protoc_insertion_point(field_get:ubii.processing.LockstepProcessingRequest.delta_time_ms)
  return delta_time_ms_;
}
 void LockstepProcessingRequest::set_delta_time_ms(::google::protobuf::int32 value) {
  
  delta_time_ms_ = value;
  // @@protoc_insertion_point(field_set:ubii.processing.LockstepProcessingRequest.delta_time_ms)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LockstepProcessingReply::kProcessingModuleIdsFieldNumber;
const int LockstepProcessingReply::kRecordsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LockstepProcessingReply::LockstepProcessingReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ubii.processing.LockstepProcessingReply)
}

void LockstepProcessingReply::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

LockstepProcessingReply::LockstepProcessingReply(const LockstepProcessingReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ubii.processing.LockstepProcessingReply)
}

void LockstepProcessingReply::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
}

LockstepProcessingReply::~LockstepProcessingReply() {
  // @@protoc_insertion_point(destructor:ubii.processing.LockstepProcessingReply)
  SharedDtor();
}

void LockstepProcessingReply::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LockstepProcessingReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LockstepProcessingReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LockstepProcessingReply_descriptor_;
}

const LockstepProcessingReply& LockstepProcessingReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fprocessing_2flockstepProcessing_2eproto();
  return *default_instance_;
}

LockstepProcessingReply* LockstepProcessingReply::default_instance_ = NULL;

LockstepProcessingReply* LockstepProcessingReply::New(::google::protobuf::Arena* arena) const {
  LockstepProcessingReply* n = new LockstepProcessingReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LockstepProcessingReply::Clear() {
// @@protoc_insertion_point(message_clear_start:ubii.processing.LockstepProcessingReply)
  processing_module_ids_.Clear();
  records_.Clear();
}

bool LockstepProcessingReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ubii.processing.LockstepProcessingReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string processing_module_ids = 1;
      case 1: {
        if (tag == 10) {
         parse_processing_module_ids:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_processing_module_ids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->processing_module_ids(this->processing_module_ids_size() - 1).data(),
            this->processing_module_ids(this->processing_module_ids_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.processing.LockstepProcessingReply.processing_module_ids"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_processing_module_ids;
        if (input->ExpectTag(18)) goto parse_records;
        break;
      }

      // repeated .ubii.topicData.TopicDataRecord records = 2;
      case 2: {
        if (tag == 18) {
         parse_records:
          DO_(input->IncrementRecursionDepth());
         parse_loop_records:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_records()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_records;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ubii.processing.LockstepProcessingReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ubii.processing.LockstepProcessingReply)
  return false;
#undef DO_
}

void LockstepProcessingReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ubii.processing.LockstepProcessingReply)
  // repeated string processing_module_ids = 1;
  for (int i = 0; i < this->processing_module_ids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->processing_module_ids(i).data(), this->processing_module_ids(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.processing.LockstepProcessingReply.processing_module_ids");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->processing_module_ids(i), output);
  }

  // repeated .ubii.topicData.TopicDataRecord records = 2;
  for (unsigned int i = 0, n = this->records_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->records(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ubii.processing.LockstepProcessingReply)
}

::google::protobuf::uint8* LockstepProcessingReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ubii.processing.LockstepProcessingReply)
  // repeated string processing_module_ids = 1;
  for (int i = 0; i < this->processing_module_ids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->processing_module_ids(i).data(), this->processing_module_ids(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.processing.LockstepProcessingReply.processing_module_ids");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->processing_module_ids(i), target);
  }

  // repeated .ubii.topicData.TopicDataRecord records = 2;
  for (unsigned int i = 0, n = this->records_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->records(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ubii.processing.LockstepProcessingReply)
  return target;
}

int LockstepProcessingReply::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ubii.processing.LockstepProcessingReply)
  int total_size = 0;

  // repeated string processing_module_ids = 1;
  total_size += 1 * this->processing_module_ids_size();
  for (int i = 0; i < this->processing_module_ids_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->processing_module_ids(i));
  }

  // repeated .ubii.topicData.TopicDataRecord records = 2;
  total_size += 1 * this->records_size();
  for (int i = 0; i < this->records_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->records(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LockstepProcessingReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ubii.processing.LockstepProcessingReply)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LockstepProcessingReply* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LockstepProcessingReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ubii.processing.LockstepProcessingReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ubii.processing.LockstepProcessingReply)
    MergeFrom(*source);
  }
}

void LockstepProcessingReply::MergeFrom(const LockstepProcessingReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ubii.processing.LockstepProcessingReply)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  processing_module_ids_.MergeFrom(from.processing_module_ids_);
  records_.MergeFrom(from.records_);
}

void LockstepProcessingReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ubii.processing.LockstepProcessingReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LockstepProcessingReply::CopyFrom(const LockstepProcessingReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ubii.processing.LockstepProcessingReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LockstepProcessingReply::IsInitialized() const {

  return true;
}

void LockstepProcessingReply::Swap(LockstepProcessingReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LockstepProcessingReply::InternalSwap(LockstepProcessingReply* other) {
  processing_module_ids_.UnsafeArenaSwap(&other->processing_module_ids_);
  records_.UnsafeArenaSwap(&other->records_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LockstepProcessingReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LockstepProcessingReply_descriptor_;
  metadata.reflection = LockstepProcessingReply_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LockstepProcessingReply

// repeated string processing_module_ids = 1;
int LockstepProcessingReply::processing_module_ids_size() const {
  return processing_module_ids_.size();
}
void LockstepProcessingReply::clear_processing_module_ids() {
  processing_module_ids_.Clear();
}
 const ::std::string& LockstepProcessingReply::processing_module_ids(int index) const {
  // @@protoc_insertion_point(field_get:ubii.processing.LockstepProcessingReply.processing_module_ids)
  return processing_module_ids_.Get(index);
}
 ::std::string* LockstepProcessingReply::mutable_processing_module_ids(int index) {
  // @@protoc_insertion_point(field_mutable:ubii.processing.LockstepProcessingReply.processing_module_ids)
  return processing_module_ids_.Mutable(index);
}
 void LockstepProcessingReply::set_processing_module_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ubii.processing.LockstepProcessingReply.processing_module_ids)
  processing_module_ids_.Mutable(index)->assign(value);
}
 void LockstepProcessingReply::set_processing_module_ids(int index, const char* value) {
  processing_module_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ubii.processing.LockstepProcessingReply.processing_module_ids)
}
 void LockstepProcessingReply::set_processing_module_ids(int index, const char* value, size_t size) {
  processing_module_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ubii.processing.LockstepProcessingReply.processing_module_ids)
}
 ::std::string* LockstepProcessingReply::add_processing_module_ids() {
  // @@protoc_insertion_point(field_add_mutable:ubii.processing.LockstepProcessingReply.processing_module_ids)
  return processing_module_ids_.Add();
}
 void LockstepProcessingReply::add_processing_module_ids(const ::std::string& value) {
  processing_module_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ubii.processing.LockstepProcessingReply.processing_module_ids)
}
 void LockstepProcessingReply::add_processing_module_ids(const char* value) {
  processing_module_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ubii.processing.LockstepProcessingReply.processing_module_ids)
}
 void LockstepProcessingReply::add_processing_module_ids(const char* value, size_t size) {
  processing_module_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ubii.processing.LockstepProcessingReply.processing_module_ids)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
LockstepProcessingReply::processing_module_ids() const {
  // @@protoc_insertion_point(field_list:ubii.processing.LockstepProcessingReply.processing_module_ids)
  return processing_module_ids_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
LockstepProcessingReply::mutable_processing_module_ids() {
  // @@protoc_insertion_point(field_mutable_list:ubii.processing.LockstepProcessingReply.processing_module_ids)
  return &processing_module_ids_;
}

// repeated .ubii.topicData.TopicDataRecord records = 2;
int LockstepProcessingReply::records_size() const {
  return records_.size();
}
void LockstepProcessingReply::clear_records() {
  records_.Clear();
}
const ::ubii::topicData::TopicDataRecord& LockstepProcessingReply::records(int index) const {
  // @@protoc_insertion_point(field_get:ubii.processing.LockstepProcessingReply.records)
  return records_.Get(index);
}
::ubii::topicData::TopicDataRecord* LockstepProcessingReply::mutable_records(int index) {
  // @@protoc_insertion_point(field_mutable:ubii.processing.LockstepProcessingReply.records)
  return records_.Mutable(index);
}
::ubii::topicData::TopicDataRecord* LockstepProcessingReply::add_records() {
  // @@protoc_insertion_point(field_add:ubii.processing.LockstepProcessingReply.records)
  return records_.Add();
}
::google::protobuf::RepeatedPtrField< ::ubii::topicData::TopicDataRecord >*
LockstepProcessingReply::mutable_records() {
  // @@protoc_insertion_point(field_mutable_list:ubii.processing.LockstepProcessingReply.records)
  return &records_;
}
const ::google::protobuf::RepeatedPtrField< ::ubii::topicData::TopicDataRecord >&
LockstepProcessingReply::records() const {
  // @@protoc_insertion_point(field_list:ubii.processing.LockstepProcessingReply.records)
  return records_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace processing
}  // namespace ubii

// @@protoc_insertion_point(global_scope)
