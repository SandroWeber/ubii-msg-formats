// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/processing/lockstepProcessing.proto

#include "proto/processing/lockstepProcessing.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_proto_2ftopicData_2ftopicDataRecord_2ftopicDataRecord_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2ftopicData_2ftopicDataRecord_2ftopicDataRecord_2eproto ::google::protobuf::internal::SCCInfo<30> scc_info_TopicDataRecord;
}  // namespace protobuf_proto_2ftopicData_2ftopicDataRecord_2ftopicDataRecord_2eproto
namespace ubii {
namespace processing {
class LockstepProcessingRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LockstepProcessingRequest>
      _instance;
} _LockstepProcessingRequest_default_instance_;
class LockstepProcessingReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LockstepProcessingReply>
      _instance;
} _LockstepProcessingReply_default_instance_;
}  // namespace processing
}  // namespace ubii
namespace protobuf_proto_2fprocessing_2flockstepProcessing_2eproto {
static void InitDefaultsLockstepProcessingRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ubii::processing::_LockstepProcessingRequest_default_instance_;
    new (ptr) ::ubii::processing::LockstepProcessingRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ubii::processing::LockstepProcessingRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LockstepProcessingRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLockstepProcessingRequest}, {
      &protobuf_proto_2ftopicData_2ftopicDataRecord_2ftopicDataRecord_2eproto::scc_info_TopicDataRecord.base,}};

static void InitDefaultsLockstepProcessingReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ubii::processing::_LockstepProcessingReply_default_instance_;
    new (ptr) ::ubii::processing::LockstepProcessingReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ubii::processing::LockstepProcessingReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LockstepProcessingReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLockstepProcessingReply}, {
      &protobuf_proto_2ftopicData_2ftopicDataRecord_2ftopicDataRecord_2eproto::scc_info_TopicDataRecord.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_LockstepProcessingRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LockstepProcessingReply.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ubii::processing::LockstepProcessingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ubii::processing::LockstepProcessingRequest, processing_module_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ubii::processing::LockstepProcessingRequest, records_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ubii::processing::LockstepProcessingRequest, delta_time_ms_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ubii::processing::LockstepProcessingReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ubii::processing::LockstepProcessingReply, processing_module_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ubii::processing::LockstepProcessingReply, records_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ubii::processing::LockstepProcessingRequest)},
  { 8, -1, sizeof(::ubii::processing::LockstepProcessingReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ubii::processing::_LockstepProcessingRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ubii::processing::_LockstepProcessingReply_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "proto/processing/lockstepProcessing.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n)proto/processing/lockstepProcessing.pr"
      "oto\022\017ubii.processing\0325proto/topicData/to"
      "picDataRecord/topicDataRecord.proto\"\203\001\n\031"
      "LockstepProcessingRequest\022\035\n\025processing_"
      "module_ids\030\001 \003(\t\0220\n\007records\030\002 \003(\0132\037.ubii"
      ".topicData.TopicDataRecord\022\025\n\rdelta_time"
      "_ms\030\003 \001(\005\"j\n\027LockstepProcessingReply\022\035\n\025"
      "processing_module_ids\030\001 \003(\t\0220\n\007records\030\002"
      " \003(\0132\037.ubii.topicData.TopicDataRecordb\006p"
      "roto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 365);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proto/processing/lockstepProcessing.proto", &protobuf_RegisterTypes);
  ::protobuf_proto_2ftopicData_2ftopicDataRecord_2ftopicDataRecord_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_proto_2fprocessing_2flockstepProcessing_2eproto
namespace ubii {
namespace processing {

// ===================================================================

void LockstepProcessingRequest::InitAsDefaultInstance() {
}
void LockstepProcessingRequest::clear_records() {
  records_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LockstepProcessingRequest::kProcessingModuleIdsFieldNumber;
const int LockstepProcessingRequest::kRecordsFieldNumber;
const int LockstepProcessingRequest::kDeltaTimeMsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LockstepProcessingRequest::LockstepProcessingRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fprocessing_2flockstepProcessing_2eproto::scc_info_LockstepProcessingRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ubii.processing.LockstepProcessingRequest)
}
LockstepProcessingRequest::LockstepProcessingRequest(const LockstepProcessingRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      processing_module_ids_(from.processing_module_ids_),
      records_(from.records_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  delta_time_ms_ = from.delta_time_ms_;
  // @@protoc_insertion_point(copy_constructor:ubii.processing.LockstepProcessingRequest)
}

void LockstepProcessingRequest::SharedCtor() {
  delta_time_ms_ = 0;
}

LockstepProcessingRequest::~LockstepProcessingRequest() {
  // @@protoc_insertion_point(destructor:ubii.processing.LockstepProcessingRequest)
  SharedDtor();
}

void LockstepProcessingRequest::SharedDtor() {
}

void LockstepProcessingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LockstepProcessingRequest::descriptor() {
  ::protobuf_proto_2fprocessing_2flockstepProcessing_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fprocessing_2flockstepProcessing_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LockstepProcessingRequest& LockstepProcessingRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fprocessing_2flockstepProcessing_2eproto::scc_info_LockstepProcessingRequest.base);
  return *internal_default_instance();
}


void LockstepProcessingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ubii.processing.LockstepProcessingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  processing_module_ids_.Clear();
  records_.Clear();
  delta_time_ms_ = 0;
  _internal_metadata_.Clear();
}

bool LockstepProcessingRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ubii.processing.LockstepProcessingRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string processing_module_ids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_processing_module_ids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->processing_module_ids(this->processing_module_ids_size() - 1).data(),
            static_cast<int>(this->processing_module_ids(this->processing_module_ids_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.processing.LockstepProcessingRequest.processing_module_ids"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ubii.topicData.TopicDataRecord records = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_records()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 delta_time_ms = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delta_time_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ubii.processing.LockstepProcessingRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ubii.processing.LockstepProcessingRequest)
  return false;
#undef DO_
}

void LockstepProcessingRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ubii.processing.LockstepProcessingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string processing_module_ids = 1;
  for (int i = 0, n = this->processing_module_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->processing_module_ids(i).data(), static_cast<int>(this->processing_module_ids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.processing.LockstepProcessingRequest.processing_module_ids");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->processing_module_ids(i), output);
  }

  // repeated .ubii.topicData.TopicDataRecord records = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->records_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->records(static_cast<int>(i)),
      output);
  }

  // int32 delta_time_ms = 3;
  if (this->delta_time_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->delta_time_ms(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ubii.processing.LockstepProcessingRequest)
}

::google::protobuf::uint8* LockstepProcessingRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ubii.processing.LockstepProcessingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string processing_module_ids = 1;
  for (int i = 0, n = this->processing_module_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->processing_module_ids(i).data(), static_cast<int>(this->processing_module_ids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.processing.LockstepProcessingRequest.processing_module_ids");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->processing_module_ids(i), target);
  }

  // repeated .ubii.topicData.TopicDataRecord records = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->records_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->records(static_cast<int>(i)), deterministic, target);
  }

  // int32 delta_time_ms = 3;
  if (this->delta_time_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->delta_time_ms(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ubii.processing.LockstepProcessingRequest)
  return target;
}

size_t LockstepProcessingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ubii.processing.LockstepProcessingRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string processing_module_ids = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->processing_module_ids_size());
  for (int i = 0, n = this->processing_module_ids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->processing_module_ids(i));
  }

  // repeated .ubii.topicData.TopicDataRecord records = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->records_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->records(static_cast<int>(i)));
    }
  }

  // int32 delta_time_ms = 3;
  if (this->delta_time_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->delta_time_ms());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LockstepProcessingRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ubii.processing.LockstepProcessingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LockstepProcessingRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LockstepProcessingRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ubii.processing.LockstepProcessingRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ubii.processing.LockstepProcessingRequest)
    MergeFrom(*source);
  }
}

void LockstepProcessingRequest::MergeFrom(const LockstepProcessingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ubii.processing.LockstepProcessingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  processing_module_ids_.MergeFrom(from.processing_module_ids_);
  records_.MergeFrom(from.records_);
  if (from.delta_time_ms() != 0) {
    set_delta_time_ms(from.delta_time_ms());
  }
}

void LockstepProcessingRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ubii.processing.LockstepProcessingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LockstepProcessingRequest::CopyFrom(const LockstepProcessingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ubii.processing.LockstepProcessingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LockstepProcessingRequest::IsInitialized() const {
  return true;
}

void LockstepProcessingRequest::Swap(LockstepProcessingRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LockstepProcessingRequest::InternalSwap(LockstepProcessingRequest* other) {
  using std::swap;
  processing_module_ids_.InternalSwap(CastToBase(&other->processing_module_ids_));
  CastToBase(&records_)->InternalSwap(CastToBase(&other->records_));
  swap(delta_time_ms_, other->delta_time_ms_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LockstepProcessingRequest::GetMetadata() const {
  protobuf_proto_2fprocessing_2flockstepProcessing_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fprocessing_2flockstepProcessing_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LockstepProcessingReply::InitAsDefaultInstance() {
}
void LockstepProcessingReply::clear_records() {
  records_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LockstepProcessingReply::kProcessingModuleIdsFieldNumber;
const int LockstepProcessingReply::kRecordsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LockstepProcessingReply::LockstepProcessingReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fprocessing_2flockstepProcessing_2eproto::scc_info_LockstepProcessingReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ubii.processing.LockstepProcessingReply)
}
LockstepProcessingReply::LockstepProcessingReply(const LockstepProcessingReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      processing_module_ids_(from.processing_module_ids_),
      records_(from.records_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ubii.processing.LockstepProcessingReply)
}

void LockstepProcessingReply::SharedCtor() {
}

LockstepProcessingReply::~LockstepProcessingReply() {
  // @@protoc_insertion_point(destructor:ubii.processing.LockstepProcessingReply)
  SharedDtor();
}

void LockstepProcessingReply::SharedDtor() {
}

void LockstepProcessingReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LockstepProcessingReply::descriptor() {
  ::protobuf_proto_2fprocessing_2flockstepProcessing_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fprocessing_2flockstepProcessing_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LockstepProcessingReply& LockstepProcessingReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fprocessing_2flockstepProcessing_2eproto::scc_info_LockstepProcessingReply.base);
  return *internal_default_instance();
}


void LockstepProcessingReply::Clear() {
// @@protoc_insertion_point(message_clear_start:ubii.processing.LockstepProcessingReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  processing_module_ids_.Clear();
  records_.Clear();
  _internal_metadata_.Clear();
}

bool LockstepProcessingReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ubii.processing.LockstepProcessingReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string processing_module_ids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_processing_module_ids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->processing_module_ids(this->processing_module_ids_size() - 1).data(),
            static_cast<int>(this->processing_module_ids(this->processing_module_ids_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.processing.LockstepProcessingReply.processing_module_ids"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ubii.topicData.TopicDataRecord records = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_records()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ubii.processing.LockstepProcessingReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ubii.processing.LockstepProcessingReply)
  return false;
#undef DO_
}

void LockstepProcessingReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ubii.processing.LockstepProcessingReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string processing_module_ids = 1;
  for (int i = 0, n = this->processing_module_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->processing_module_ids(i).data(), static_cast<int>(this->processing_module_ids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.processing.LockstepProcessingReply.processing_module_ids");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->processing_module_ids(i), output);
  }

  // repeated .ubii.topicData.TopicDataRecord records = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->records_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->records(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ubii.processing.LockstepProcessingReply)
}

::google::protobuf::uint8* LockstepProcessingReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ubii.processing.LockstepProcessingReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string processing_module_ids = 1;
  for (int i = 0, n = this->processing_module_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->processing_module_ids(i).data(), static_cast<int>(this->processing_module_ids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.processing.LockstepProcessingReply.processing_module_ids");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->processing_module_ids(i), target);
  }

  // repeated .ubii.topicData.TopicDataRecord records = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->records_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->records(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ubii.processing.LockstepProcessingReply)
  return target;
}

size_t LockstepProcessingReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ubii.processing.LockstepProcessingReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string processing_module_ids = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->processing_module_ids_size());
  for (int i = 0, n = this->processing_module_ids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->processing_module_ids(i));
  }

  // repeated .ubii.topicData.TopicDataRecord records = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->records_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->records(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LockstepProcessingReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ubii.processing.LockstepProcessingReply)
  GOOGLE_DCHECK_NE(&from, this);
  const LockstepProcessingReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LockstepProcessingReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ubii.processing.LockstepProcessingReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ubii.processing.LockstepProcessingReply)
    MergeFrom(*source);
  }
}

void LockstepProcessingReply::MergeFrom(const LockstepProcessingReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ubii.processing.LockstepProcessingReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  processing_module_ids_.MergeFrom(from.processing_module_ids_);
  records_.MergeFrom(from.records_);
}

void LockstepProcessingReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ubii.processing.LockstepProcessingReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LockstepProcessingReply::CopyFrom(const LockstepProcessingReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ubii.processing.LockstepProcessingReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LockstepProcessingReply::IsInitialized() const {
  return true;
}

void LockstepProcessingReply::Swap(LockstepProcessingReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LockstepProcessingReply::InternalSwap(LockstepProcessingReply* other) {
  using std::swap;
  processing_module_ids_.InternalSwap(CastToBase(&other->processing_module_ids_));
  CastToBase(&records_)->InternalSwap(CastToBase(&other->records_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LockstepProcessingReply::GetMetadata() const {
  protobuf_proto_2fprocessing_2flockstepProcessing_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fprocessing_2flockstepProcessing_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace processing
}  // namespace ubii
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ubii::processing::LockstepProcessingRequest* Arena::CreateMaybeMessage< ::ubii::processing::LockstepProcessingRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ubii::processing::LockstepProcessingRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ubii::processing::LockstepProcessingReply* Arena::CreateMaybeMessage< ::ubii::processing::LockstepProcessingReply >(Arena* arena) {
  return Arena::CreateInternal< ::ubii::processing::LockstepProcessingReply >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
