// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/interactions/interaction.proto

#include "proto/interactions/interaction.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_proto_2finteractions_2fioFormat_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IOFormat_proto_2finteractions_2fioFormat_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2finteractions_2finteraction_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Interaction_proto_2finteractions_2finteraction_2eproto;
namespace ubii {
namespace interactions {
class InteractionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Interaction> _instance;
} _Interaction_default_instance_;
class InteractionListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InteractionList> _instance;
} _InteractionList_default_instance_;
}  // namespace interactions
}  // namespace ubii
static void InitDefaultsscc_info_Interaction_proto_2finteractions_2finteraction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ubii::interactions::_Interaction_default_instance_;
    new (ptr) ::ubii::interactions::Interaction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ubii::interactions::Interaction::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Interaction_proto_2finteractions_2finteraction_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Interaction_proto_2finteractions_2finteraction_2eproto}, {
      &scc_info_IOFormat_proto_2finteractions_2fioFormat_2eproto.base,}};

static void InitDefaultsscc_info_InteractionList_proto_2finteractions_2finteraction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ubii::interactions::_InteractionList_default_instance_;
    new (ptr) ::ubii::interactions::InteractionList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ubii::interactions::InteractionList::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_InteractionList_proto_2finteractions_2finteraction_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_InteractionList_proto_2finteractions_2finteraction_2eproto}, {
      &scc_info_Interaction_proto_2finteractions_2finteraction_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_proto_2finteractions_2finteraction_2eproto[2];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_proto_2finteractions_2finteraction_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_proto_2finteractions_2finteraction_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_proto_2finteractions_2finteraction_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ubii::interactions::Interaction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ubii::interactions::Interaction, id_),
  PROTOBUF_FIELD_OFFSET(::ubii::interactions::Interaction, name_),
  PROTOBUF_FIELD_OFFSET(::ubii::interactions::Interaction, processing_callback_),
  PROTOBUF_FIELD_OFFSET(::ubii::interactions::Interaction, input_formats_),
  PROTOBUF_FIELD_OFFSET(::ubii::interactions::Interaction, output_formats_),
  PROTOBUF_FIELD_OFFSET(::ubii::interactions::Interaction, on_created_),
  PROTOBUF_FIELD_OFFSET(::ubii::interactions::Interaction, process_frequency_),
  PROTOBUF_FIELD_OFFSET(::ubii::interactions::Interaction, authors_),
  PROTOBUF_FIELD_OFFSET(::ubii::interactions::Interaction, tags_),
  PROTOBUF_FIELD_OFFSET(::ubii::interactions::Interaction, description_),
  PROTOBUF_FIELD_OFFSET(::ubii::interactions::Interaction, status_),
  PROTOBUF_FIELD_OFFSET(::ubii::interactions::Interaction, editable_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ubii::interactions::InteractionList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ubii::interactions::InteractionList, elements_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ubii::interactions::Interaction)},
  { 17, -1, sizeof(::ubii::interactions::InteractionList)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ubii::interactions::_Interaction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ubii::interactions::_InteractionList_default_instance_),
};

const char descriptor_table_protodef_proto_2finteractions_2finteraction_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n$proto/interactions/interaction.proto\022\021"
  "ubii.interactions\032!proto/interactions/io"
  "Format.proto\"\330\002\n\013Interaction\022\n\n\002id\030\001 \001(\t"
  "\022\014\n\004name\030\002 \001(\t\022\033\n\023processing_callback\030\003 "
  "\001(\t\0222\n\rinput_formats\030\004 \003(\0132\033.ubii.intera"
  "ctions.IOFormat\0223\n\016output_formats\030\005 \003(\0132"
  "\033.ubii.interactions.IOFormat\022\022\n\non_creat"
  "ed\030\006 \001(\t\022\031\n\021process_frequency\030\007 \001(\002\022\017\n\007a"
  "uthors\030\010 \003(\t\022\014\n\004tags\030\t \003(\t\022\023\n\013descriptio"
  "n\030\n \001(\t\0224\n\006status\030\013 \001(\0162$.ubii.interacti"
  "ons.InteractionStatus\022\020\n\010editable\030\014 \001(\010\""
  "C\n\017InteractionList\0220\n\010elements\030\001 \003(\0132\036.u"
  "bii.interactions.Interaction*M\n\021Interact"
  "ionStatus\022\013\n\007CREATED\020\000\022\017\n\013INITIALIZED\020\001\022"
  "\016\n\nPROCESSING\020\002\022\n\n\006HALTED\020\003b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_proto_2finteractions_2finteraction_2eproto_deps[1] = {
  &::descriptor_table_proto_2finteractions_2fioFormat_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_proto_2finteractions_2finteraction_2eproto_sccs[2] = {
  &scc_info_Interaction_proto_2finteractions_2finteraction_2eproto.base,
  &scc_info_InteractionList_proto_2finteractions_2finteraction_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_proto_2finteractions_2finteraction_2eproto_once;
static bool descriptor_table_proto_2finteractions_2finteraction_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_2finteractions_2finteraction_2eproto = {
  &descriptor_table_proto_2finteractions_2finteraction_2eproto_initialized, descriptor_table_protodef_proto_2finteractions_2finteraction_2eproto, "proto/interactions/interaction.proto", 595,
  &descriptor_table_proto_2finteractions_2finteraction_2eproto_once, descriptor_table_proto_2finteractions_2finteraction_2eproto_sccs, descriptor_table_proto_2finteractions_2finteraction_2eproto_deps, 2, 1,
  schemas, file_default_instances, TableStruct_proto_2finteractions_2finteraction_2eproto::offsets,
  file_level_metadata_proto_2finteractions_2finteraction_2eproto, 2, file_level_enum_descriptors_proto_2finteractions_2finteraction_2eproto, file_level_service_descriptors_proto_2finteractions_2finteraction_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_proto_2finteractions_2finteraction_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_proto_2finteractions_2finteraction_2eproto), true);
namespace ubii {
namespace interactions {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* InteractionStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_proto_2finteractions_2finteraction_2eproto);
  return file_level_enum_descriptors_proto_2finteractions_2finteraction_2eproto[0];
}
bool InteractionStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Interaction::InitAsDefaultInstance() {
}
class Interaction::_Internal {
 public:
};

void Interaction::clear_input_formats() {
  input_formats_.Clear();
}
void Interaction::clear_output_formats() {
  output_formats_.Clear();
}
Interaction::Interaction()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ubii.interactions.Interaction)
}
Interaction::Interaction(const Interaction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      input_formats_(from.input_formats_),
      output_formats_(from.output_formats_),
      authors_(from.authors_),
      tags_(from.tags_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  processing_callback_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_processing_callback().empty()) {
    processing_callback_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.processing_callback_);
  }
  on_created_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_on_created().empty()) {
    on_created_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.on_created_);
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  ::memcpy(&process_frequency_, &from.process_frequency_,
    static_cast<size_t>(reinterpret_cast<char*>(&editable_) -
    reinterpret_cast<char*>(&process_frequency_)) + sizeof(editable_));
  // @@protoc_insertion_point(copy_constructor:ubii.interactions.Interaction)
}

void Interaction::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Interaction_proto_2finteractions_2finteraction_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  processing_callback_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  on_created_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&process_frequency_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&editable_) -
      reinterpret_cast<char*>(&process_frequency_)) + sizeof(editable_));
}

Interaction::~Interaction() {
  // @@protoc_insertion_point(destructor:ubii.interactions.Interaction)
  SharedDtor();
}

void Interaction::SharedDtor() {
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  processing_callback_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  on_created_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Interaction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Interaction& Interaction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Interaction_proto_2finteractions_2finteraction_2eproto.base);
  return *internal_default_instance();
}


void Interaction::Clear() {
// @@protoc_insertion_point(message_clear_start:ubii.interactions.Interaction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  input_formats_.Clear();
  output_formats_.Clear();
  authors_.Clear();
  tags_.Clear();
  id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  processing_callback_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  on_created_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&process_frequency_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&editable_) -
      reinterpret_cast<char*>(&process_frequency_)) + sizeof(editable_));
  _internal_metadata_.Clear();
}

const char* Interaction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ubii.interactions.Interaction.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ubii.interactions.Interaction.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string processing_callback = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_processing_callback();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ubii.interactions.Interaction.processing_callback"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ubii.interactions.IOFormat input_formats = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_input_formats(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .ubii.interactions.IOFormat output_formats = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_output_formats(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // string on_created = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_on_created();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ubii.interactions.Interaction.on_created"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float process_frequency = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 61)) {
          process_frequency_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // repeated string authors = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_authors();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ubii.interactions.Interaction.authors"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string tags = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_tags();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ubii.interactions.Interaction.tags"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else goto handle_unusual;
        continue;
      // string description = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ubii.interactions.Interaction.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ubii.interactions.InteractionStatus status = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::ubii::interactions::InteractionStatus>(val));
        } else goto handle_unusual;
        continue;
      // bool editable = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          editable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Interaction::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ubii.interactions.Interaction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ubii.interactions.Interaction.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ubii.interactions.Interaction.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string processing_callback = 3;
  if (this->processing_callback().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_processing_callback().data(), static_cast<int>(this->_internal_processing_callback().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ubii.interactions.Interaction.processing_callback");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_processing_callback(), target);
  }

  // repeated .ubii.interactions.IOFormat input_formats = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_input_formats_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_input_formats(i), target, stream);
  }

  // repeated .ubii.interactions.IOFormat output_formats = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_output_formats_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_output_formats(i), target, stream);
  }

  // string on_created = 6;
  if (this->on_created().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_on_created().data(), static_cast<int>(this->_internal_on_created().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ubii.interactions.Interaction.on_created");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_on_created(), target);
  }

  // float process_frequency = 7;
  if (!(this->process_frequency() <= 0 && this->process_frequency() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(7, this->_internal_process_frequency(), target);
  }

  // repeated string authors = 8;
  for (int i = 0, n = this->_internal_authors_size(); i < n; i++) {
    const auto& s = this->_internal_authors(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ubii.interactions.Interaction.authors");
    target = stream->WriteString(8, s, target);
  }

  // repeated string tags = 9;
  for (int i = 0, n = this->_internal_tags_size(); i < n; i++) {
    const auto& s = this->_internal_tags(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ubii.interactions.Interaction.tags");
    target = stream->WriteString(9, s, target);
  }

  // string description = 10;
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ubii.interactions.Interaction.description");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_description(), target);
  }

  // .ubii.interactions.InteractionStatus status = 11;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      11, this->_internal_status(), target);
  }

  // bool editable = 12;
  if (this->editable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(12, this->_internal_editable(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ubii.interactions.Interaction)
  return target;
}

size_t Interaction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ubii.interactions.Interaction)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ubii.interactions.IOFormat input_formats = 4;
  total_size += 1UL * this->_internal_input_formats_size();
  for (const auto& msg : this->input_formats_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ubii.interactions.IOFormat output_formats = 5;
  total_size += 1UL * this->_internal_output_formats_size();
  for (const auto& msg : this->output_formats_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated string authors = 8;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(authors_.size());
  for (int i = 0, n = authors_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      authors_.Get(i));
  }

  // repeated string tags = 9;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(tags_.size());
  for (int i = 0, n = tags_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      tags_.Get(i));
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string processing_callback = 3;
  if (this->processing_callback().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_processing_callback());
  }

  // string on_created = 6;
  if (this->on_created().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_on_created());
  }

  // string description = 10;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // float process_frequency = 7;
  if (!(this->process_frequency() <= 0 && this->process_frequency() >= 0)) {
    total_size += 1 + 4;
  }

  // .ubii.interactions.InteractionStatus status = 11;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  // bool editable = 12;
  if (this->editable() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Interaction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ubii.interactions.Interaction)
  GOOGLE_DCHECK_NE(&from, this);
  const Interaction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Interaction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ubii.interactions.Interaction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ubii.interactions.Interaction)
    MergeFrom(*source);
  }
}

void Interaction::MergeFrom(const Interaction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ubii.interactions.Interaction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  input_formats_.MergeFrom(from.input_formats_);
  output_formats_.MergeFrom(from.output_formats_);
  authors_.MergeFrom(from.authors_);
  tags_.MergeFrom(from.tags_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.processing_callback().size() > 0) {

    processing_callback_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.processing_callback_);
  }
  if (from.on_created().size() > 0) {

    on_created_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.on_created_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (!(from.process_frequency() <= 0 && from.process_frequency() >= 0)) {
    _internal_set_process_frequency(from._internal_process_frequency());
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
  if (from.editable() != 0) {
    _internal_set_editable(from._internal_editable());
  }
}

void Interaction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ubii.interactions.Interaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Interaction::CopyFrom(const Interaction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ubii.interactions.Interaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Interaction::IsInitialized() const {
  return true;
}

void Interaction::InternalSwap(Interaction* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  input_formats_.InternalSwap(&other->input_formats_);
  output_formats_.InternalSwap(&other->output_formats_);
  authors_.InternalSwap(&other->authors_);
  tags_.InternalSwap(&other->tags_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  processing_callback_.Swap(&other->processing_callback_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  on_created_.Swap(&other->on_created_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(process_frequency_, other->process_frequency_);
  swap(status_, other->status_);
  swap(editable_, other->editable_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Interaction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void InteractionList::InitAsDefaultInstance() {
}
class InteractionList::_Internal {
 public:
};

InteractionList::InteractionList()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ubii.interactions.InteractionList)
}
InteractionList::InteractionList(const InteractionList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      elements_(from.elements_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ubii.interactions.InteractionList)
}

void InteractionList::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InteractionList_proto_2finteractions_2finteraction_2eproto.base);
}

InteractionList::~InteractionList() {
  // @@protoc_insertion_point(destructor:ubii.interactions.InteractionList)
  SharedDtor();
}

void InteractionList::SharedDtor() {
}

void InteractionList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InteractionList& InteractionList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InteractionList_proto_2finteractions_2finteraction_2eproto.base);
  return *internal_default_instance();
}


void InteractionList::Clear() {
// @@protoc_insertion_point(message_clear_start:ubii.interactions.InteractionList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  elements_.Clear();
  _internal_metadata_.Clear();
}

const char* InteractionList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .ubii.interactions.Interaction elements = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_elements(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InteractionList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ubii.interactions.InteractionList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ubii.interactions.Interaction elements = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_elements_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_elements(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ubii.interactions.InteractionList)
  return target;
}

size_t InteractionList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ubii.interactions.InteractionList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ubii.interactions.Interaction elements = 1;
  total_size += 1UL * this->_internal_elements_size();
  for (const auto& msg : this->elements_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InteractionList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ubii.interactions.InteractionList)
  GOOGLE_DCHECK_NE(&from, this);
  const InteractionList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InteractionList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ubii.interactions.InteractionList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ubii.interactions.InteractionList)
    MergeFrom(*source);
  }
}

void InteractionList::MergeFrom(const InteractionList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ubii.interactions.InteractionList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  elements_.MergeFrom(from.elements_);
}

void InteractionList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ubii.interactions.InteractionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InteractionList::CopyFrom(const InteractionList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ubii.interactions.InteractionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InteractionList::IsInitialized() const {
  return true;
}

void InteractionList::InternalSwap(InteractionList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  elements_.InternalSwap(&other->elements_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InteractionList::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace interactions
}  // namespace ubii
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ubii::interactions::Interaction* Arena::CreateMaybeMessage< ::ubii::interactions::Interaction >(Arena* arena) {
  return Arena::CreateInternal< ::ubii::interactions::Interaction >(arena);
}
template<> PROTOBUF_NOINLINE ::ubii::interactions::InteractionList* Arena::CreateMaybeMessage< ::ubii::interactions::InteractionList >(Arena* arena) {
  return Arena::CreateInternal< ::ubii::interactions::InteractionList >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
