// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/interactions/interaction.proto

#ifndef PROTOBUF_INCLUDED_proto_2finteractions_2finteraction_2eproto
#define PROTOBUF_INCLUDED_proto_2finteractions_2finteraction_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "proto/interactions/ioFormat.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2finteractions_2finteraction_2eproto 

namespace protobuf_proto_2finteractions_2finteraction_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_proto_2finteractions_2finteraction_2eproto
namespace ubii {
namespace interactions {
class Interaction;
class InteractionDefaultTypeInternal;
extern InteractionDefaultTypeInternal _Interaction_default_instance_;
class InteractionList;
class InteractionListDefaultTypeInternal;
extern InteractionListDefaultTypeInternal _InteractionList_default_instance_;
}  // namespace interactions
}  // namespace ubii
namespace google {
namespace protobuf {
template<> ::ubii::interactions::Interaction* Arena::CreateMaybeMessage<::ubii::interactions::Interaction>(Arena*);
template<> ::ubii::interactions::InteractionList* Arena::CreateMaybeMessage<::ubii::interactions::InteractionList>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace ubii {
namespace interactions {

enum InteractionStatus {
  CREATED = 0,
  INITIALIZED = 1,
  PROCESSING = 2,
  HALTED = 3,
  InteractionStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  InteractionStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool InteractionStatus_IsValid(int value);
const InteractionStatus InteractionStatus_MIN = CREATED;
const InteractionStatus InteractionStatus_MAX = HALTED;
const int InteractionStatus_ARRAYSIZE = InteractionStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* InteractionStatus_descriptor();
inline const ::std::string& InteractionStatus_Name(InteractionStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    InteractionStatus_descriptor(), value);
}
inline bool InteractionStatus_Parse(
    const ::std::string& name, InteractionStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InteractionStatus>(
    InteractionStatus_descriptor(), name, value);
}
// ===================================================================

class Interaction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ubii.interactions.Interaction) */ {
 public:
  Interaction();
  virtual ~Interaction();

  Interaction(const Interaction& from);

  inline Interaction& operator=(const Interaction& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Interaction(Interaction&& from) noexcept
    : Interaction() {
    *this = ::std::move(from);
  }

  inline Interaction& operator=(Interaction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Interaction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Interaction* internal_default_instance() {
    return reinterpret_cast<const Interaction*>(
               &_Interaction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Interaction* other);
  friend void swap(Interaction& a, Interaction& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Interaction* New() const final {
    return CreateMaybeMessage<Interaction>(NULL);
  }

  Interaction* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Interaction>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Interaction& from);
  void MergeFrom(const Interaction& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Interaction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ubii.interactions.IOFormat input_formats = 4;
  int input_formats_size() const;
  void clear_input_formats();
  static const int kInputFormatsFieldNumber = 4;
  ::ubii::interactions::IOFormat* mutable_input_formats(int index);
  ::google::protobuf::RepeatedPtrField< ::ubii::interactions::IOFormat >*
      mutable_input_formats();
  const ::ubii::interactions::IOFormat& input_formats(int index) const;
  ::ubii::interactions::IOFormat* add_input_formats();
  const ::google::protobuf::RepeatedPtrField< ::ubii::interactions::IOFormat >&
      input_formats() const;

  // repeated .ubii.interactions.IOFormat output_formats = 5;
  int output_formats_size() const;
  void clear_output_formats();
  static const int kOutputFormatsFieldNumber = 5;
  ::ubii::interactions::IOFormat* mutable_output_formats(int index);
  ::google::protobuf::RepeatedPtrField< ::ubii::interactions::IOFormat >*
      mutable_output_formats();
  const ::ubii::interactions::IOFormat& output_formats(int index) const;
  ::ubii::interactions::IOFormat* add_output_formats();
  const ::google::protobuf::RepeatedPtrField< ::ubii::interactions::IOFormat >&
      output_formats() const;

  // repeated string authors = 8;
  int authors_size() const;
  void clear_authors();
  static const int kAuthorsFieldNumber = 8;
  const ::std::string& authors(int index) const;
  ::std::string* mutable_authors(int index);
  void set_authors(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_authors(int index, ::std::string&& value);
  #endif
  void set_authors(int index, const char* value);
  void set_authors(int index, const char* value, size_t size);
  ::std::string* add_authors();
  void add_authors(const ::std::string& value);
  #if LANG_CXX11
  void add_authors(::std::string&& value);
  #endif
  void add_authors(const char* value);
  void add_authors(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& authors() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_authors();

  // repeated string tags = 9;
  int tags_size() const;
  void clear_tags();
  static const int kTagsFieldNumber = 9;
  const ::std::string& tags(int index) const;
  ::std::string* mutable_tags(int index);
  void set_tags(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_tags(int index, ::std::string&& value);
  #endif
  void set_tags(int index, const char* value);
  void set_tags(int index, const char* value, size_t size);
  ::std::string* add_tags();
  void add_tags(const ::std::string& value);
  #if LANG_CXX11
  void add_tags(::std::string&& value);
  #endif
  void add_tags(const char* value);
  void add_tags(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& tags() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_tags();

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string processing_callback = 3;
  void clear_processing_callback();
  static const int kProcessingCallbackFieldNumber = 3;
  const ::std::string& processing_callback() const;
  void set_processing_callback(const ::std::string& value);
  #if LANG_CXX11
  void set_processing_callback(::std::string&& value);
  #endif
  void set_processing_callback(const char* value);
  void set_processing_callback(const char* value, size_t size);
  ::std::string* mutable_processing_callback();
  ::std::string* release_processing_callback();
  void set_allocated_processing_callback(::std::string* processing_callback);

  // string on_created = 6;
  void clear_on_created();
  static const int kOnCreatedFieldNumber = 6;
  const ::std::string& on_created() const;
  void set_on_created(const ::std::string& value);
  #if LANG_CXX11
  void set_on_created(::std::string&& value);
  #endif
  void set_on_created(const char* value);
  void set_on_created(const char* value, size_t size);
  ::std::string* mutable_on_created();
  ::std::string* release_on_created();
  void set_allocated_on_created(::std::string* on_created);

  // string description = 10;
  void clear_description();
  static const int kDescriptionFieldNumber = 10;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // float process_frequency = 7;
  void clear_process_frequency();
  static const int kProcessFrequencyFieldNumber = 7;
  float process_frequency() const;
  void set_process_frequency(float value);

  // .ubii.interactions.InteractionStatus status = 11;
  void clear_status();
  static const int kStatusFieldNumber = 11;
  ::ubii::interactions::InteractionStatus status() const;
  void set_status(::ubii::interactions::InteractionStatus value);

  // @@protoc_insertion_point(class_scope:ubii.interactions.Interaction)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ubii::interactions::IOFormat > input_formats_;
  ::google::protobuf::RepeatedPtrField< ::ubii::interactions::IOFormat > output_formats_;
  ::google::protobuf::RepeatedPtrField< ::std::string> authors_;
  ::google::protobuf::RepeatedPtrField< ::std::string> tags_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr processing_callback_;
  ::google::protobuf::internal::ArenaStringPtr on_created_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  float process_frequency_;
  int status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2finteractions_2finteraction_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InteractionList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ubii.interactions.InteractionList) */ {
 public:
  InteractionList();
  virtual ~InteractionList();

  InteractionList(const InteractionList& from);

  inline InteractionList& operator=(const InteractionList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InteractionList(InteractionList&& from) noexcept
    : InteractionList() {
    *this = ::std::move(from);
  }

  inline InteractionList& operator=(InteractionList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InteractionList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InteractionList* internal_default_instance() {
    return reinterpret_cast<const InteractionList*>(
               &_InteractionList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(InteractionList* other);
  friend void swap(InteractionList& a, InteractionList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InteractionList* New() const final {
    return CreateMaybeMessage<InteractionList>(NULL);
  }

  InteractionList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InteractionList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InteractionList& from);
  void MergeFrom(const InteractionList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InteractionList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ubii.interactions.Interaction elements = 1;
  int elements_size() const;
  void clear_elements();
  static const int kElementsFieldNumber = 1;
  ::ubii::interactions::Interaction* mutable_elements(int index);
  ::google::protobuf::RepeatedPtrField< ::ubii::interactions::Interaction >*
      mutable_elements();
  const ::ubii::interactions::Interaction& elements(int index) const;
  ::ubii::interactions::Interaction* add_elements();
  const ::google::protobuf::RepeatedPtrField< ::ubii::interactions::Interaction >&
      elements() const;

  // @@protoc_insertion_point(class_scope:ubii.interactions.InteractionList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ubii::interactions::Interaction > elements_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2finteractions_2finteraction_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Interaction

// string id = 1;
inline void Interaction::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Interaction::id() const {
  // @@protoc_insertion_point(field_get:ubii.interactions.Interaction.id)
  return id_.GetNoArena();
}
inline void Interaction::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ubii.interactions.Interaction.id)
}
#if LANG_CXX11
inline void Interaction::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ubii.interactions.Interaction.id)
}
#endif
inline void Interaction::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ubii.interactions.Interaction.id)
}
inline void Interaction::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ubii.interactions.Interaction.id)
}
inline ::std::string* Interaction::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ubii.interactions.Interaction.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Interaction::release_id() {
  // @@protoc_insertion_point(field_release:ubii.interactions.Interaction.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Interaction::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ubii.interactions.Interaction.id)
}

// string name = 2;
inline void Interaction::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Interaction::name() const {
  // @@protoc_insertion_point(field_get:ubii.interactions.Interaction.name)
  return name_.GetNoArena();
}
inline void Interaction::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ubii.interactions.Interaction.name)
}
#if LANG_CXX11
inline void Interaction::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ubii.interactions.Interaction.name)
}
#endif
inline void Interaction::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ubii.interactions.Interaction.name)
}
inline void Interaction::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ubii.interactions.Interaction.name)
}
inline ::std::string* Interaction::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ubii.interactions.Interaction.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Interaction::release_name() {
  // @@protoc_insertion_point(field_release:ubii.interactions.Interaction.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Interaction::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ubii.interactions.Interaction.name)
}

// string processing_callback = 3;
inline void Interaction::clear_processing_callback() {
  processing_callback_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Interaction::processing_callback() const {
  // @@protoc_insertion_point(field_get:ubii.interactions.Interaction.processing_callback)
  return processing_callback_.GetNoArena();
}
inline void Interaction::set_processing_callback(const ::std::string& value) {
  
  processing_callback_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ubii.interactions.Interaction.processing_callback)
}
#if LANG_CXX11
inline void Interaction::set_processing_callback(::std::string&& value) {
  
  processing_callback_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ubii.interactions.Interaction.processing_callback)
}
#endif
inline void Interaction::set_processing_callback(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  processing_callback_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ubii.interactions.Interaction.processing_callback)
}
inline void Interaction::set_processing_callback(const char* value, size_t size) {
  
  processing_callback_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ubii.interactions.Interaction.processing_callback)
}
inline ::std::string* Interaction::mutable_processing_callback() {
  
  // @@protoc_insertion_point(field_mutable:ubii.interactions.Interaction.processing_callback)
  return processing_callback_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Interaction::release_processing_callback() {
  // @@protoc_insertion_point(field_release:ubii.interactions.Interaction.processing_callback)
  
  return processing_callback_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Interaction::set_allocated_processing_callback(::std::string* processing_callback) {
  if (processing_callback != NULL) {
    
  } else {
    
  }
  processing_callback_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), processing_callback);
  // @@protoc_insertion_point(field_set_allocated:ubii.interactions.Interaction.processing_callback)
}

// repeated .ubii.interactions.IOFormat input_formats = 4;
inline int Interaction::input_formats_size() const {
  return input_formats_.size();
}
inline ::ubii::interactions::IOFormat* Interaction::mutable_input_formats(int index) {
  // @@protoc_insertion_point(field_mutable:ubii.interactions.Interaction.input_formats)
  return input_formats_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ubii::interactions::IOFormat >*
Interaction::mutable_input_formats() {
  // @@protoc_insertion_point(field_mutable_list:ubii.interactions.Interaction.input_formats)
  return &input_formats_;
}
inline const ::ubii::interactions::IOFormat& Interaction::input_formats(int index) const {
  // @@protoc_insertion_point(field_get:ubii.interactions.Interaction.input_formats)
  return input_formats_.Get(index);
}
inline ::ubii::interactions::IOFormat* Interaction::add_input_formats() {
  // @@protoc_insertion_point(field_add:ubii.interactions.Interaction.input_formats)
  return input_formats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ubii::interactions::IOFormat >&
Interaction::input_formats() const {
  // @@protoc_insertion_point(field_list:ubii.interactions.Interaction.input_formats)
  return input_formats_;
}

// repeated .ubii.interactions.IOFormat output_formats = 5;
inline int Interaction::output_formats_size() const {
  return output_formats_.size();
}
inline ::ubii::interactions::IOFormat* Interaction::mutable_output_formats(int index) {
  // @@protoc_insertion_point(field_mutable:ubii.interactions.Interaction.output_formats)
  return output_formats_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ubii::interactions::IOFormat >*
Interaction::mutable_output_formats() {
  // @@protoc_insertion_point(field_mutable_list:ubii.interactions.Interaction.output_formats)
  return &output_formats_;
}
inline const ::ubii::interactions::IOFormat& Interaction::output_formats(int index) const {
  // @@protoc_insertion_point(field_get:ubii.interactions.Interaction.output_formats)
  return output_formats_.Get(index);
}
inline ::ubii::interactions::IOFormat* Interaction::add_output_formats() {
  // @@protoc_insertion_point(field_add:ubii.interactions.Interaction.output_formats)
  return output_formats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ubii::interactions::IOFormat >&
Interaction::output_formats() const {
  // @@protoc_insertion_point(field_list:ubii.interactions.Interaction.output_formats)
  return output_formats_;
}

// string on_created = 6;
inline void Interaction::clear_on_created() {
  on_created_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Interaction::on_created() const {
  // @@protoc_insertion_point(field_get:ubii.interactions.Interaction.on_created)
  return on_created_.GetNoArena();
}
inline void Interaction::set_on_created(const ::std::string& value) {
  
  on_created_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ubii.interactions.Interaction.on_created)
}
#if LANG_CXX11
inline void Interaction::set_on_created(::std::string&& value) {
  
  on_created_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ubii.interactions.Interaction.on_created)
}
#endif
inline void Interaction::set_on_created(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  on_created_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ubii.interactions.Interaction.on_created)
}
inline void Interaction::set_on_created(const char* value, size_t size) {
  
  on_created_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ubii.interactions.Interaction.on_created)
}
inline ::std::string* Interaction::mutable_on_created() {
  
  // @@protoc_insertion_point(field_mutable:ubii.interactions.Interaction.on_created)
  return on_created_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Interaction::release_on_created() {
  // @@protoc_insertion_point(field_release:ubii.interactions.Interaction.on_created)
  
  return on_created_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Interaction::set_allocated_on_created(::std::string* on_created) {
  if (on_created != NULL) {
    
  } else {
    
  }
  on_created_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), on_created);
  // @@protoc_insertion_point(field_set_allocated:ubii.interactions.Interaction.on_created)
}

// float process_frequency = 7;
inline void Interaction::clear_process_frequency() {
  process_frequency_ = 0;
}
inline float Interaction::process_frequency() const {
  // @@protoc_insertion_point(field_get:ubii.interactions.Interaction.process_frequency)
  return process_frequency_;
}
inline void Interaction::set_process_frequency(float value) {
  
  process_frequency_ = value;
  // @@protoc_insertion_point(field_set:ubii.interactions.Interaction.process_frequency)
}

// repeated string authors = 8;
inline int Interaction::authors_size() const {
  return authors_.size();
}
inline void Interaction::clear_authors() {
  authors_.Clear();
}
inline const ::std::string& Interaction::authors(int index) const {
  // @@protoc_insertion_point(field_get:ubii.interactions.Interaction.authors)
  return authors_.Get(index);
}
inline ::std::string* Interaction::mutable_authors(int index) {
  // @@protoc_insertion_point(field_mutable:ubii.interactions.Interaction.authors)
  return authors_.Mutable(index);
}
inline void Interaction::set_authors(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ubii.interactions.Interaction.authors)
  authors_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Interaction::set_authors(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ubii.interactions.Interaction.authors)
  authors_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Interaction::set_authors(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  authors_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ubii.interactions.Interaction.authors)
}
inline void Interaction::set_authors(int index, const char* value, size_t size) {
  authors_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ubii.interactions.Interaction.authors)
}
inline ::std::string* Interaction::add_authors() {
  // @@protoc_insertion_point(field_add_mutable:ubii.interactions.Interaction.authors)
  return authors_.Add();
}
inline void Interaction::add_authors(const ::std::string& value) {
  authors_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ubii.interactions.Interaction.authors)
}
#if LANG_CXX11
inline void Interaction::add_authors(::std::string&& value) {
  authors_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ubii.interactions.Interaction.authors)
}
#endif
inline void Interaction::add_authors(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  authors_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ubii.interactions.Interaction.authors)
}
inline void Interaction::add_authors(const char* value, size_t size) {
  authors_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ubii.interactions.Interaction.authors)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Interaction::authors() const {
  // @@protoc_insertion_point(field_list:ubii.interactions.Interaction.authors)
  return authors_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Interaction::mutable_authors() {
  // @@protoc_insertion_point(field_mutable_list:ubii.interactions.Interaction.authors)
  return &authors_;
}

// repeated string tags = 9;
inline int Interaction::tags_size() const {
  return tags_.size();
}
inline void Interaction::clear_tags() {
  tags_.Clear();
}
inline const ::std::string& Interaction::tags(int index) const {
  // @@protoc_insertion_point(field_get:ubii.interactions.Interaction.tags)
  return tags_.Get(index);
}
inline ::std::string* Interaction::mutable_tags(int index) {
  // @@protoc_insertion_point(field_mutable:ubii.interactions.Interaction.tags)
  return tags_.Mutable(index);
}
inline void Interaction::set_tags(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ubii.interactions.Interaction.tags)
  tags_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Interaction::set_tags(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ubii.interactions.Interaction.tags)
  tags_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Interaction::set_tags(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  tags_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ubii.interactions.Interaction.tags)
}
inline void Interaction::set_tags(int index, const char* value, size_t size) {
  tags_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ubii.interactions.Interaction.tags)
}
inline ::std::string* Interaction::add_tags() {
  // @@protoc_insertion_point(field_add_mutable:ubii.interactions.Interaction.tags)
  return tags_.Add();
}
inline void Interaction::add_tags(const ::std::string& value) {
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ubii.interactions.Interaction.tags)
}
#if LANG_CXX11
inline void Interaction::add_tags(::std::string&& value) {
  tags_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ubii.interactions.Interaction.tags)
}
#endif
inline void Interaction::add_tags(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ubii.interactions.Interaction.tags)
}
inline void Interaction::add_tags(const char* value, size_t size) {
  tags_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ubii.interactions.Interaction.tags)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Interaction::tags() const {
  // @@protoc_insertion_point(field_list:ubii.interactions.Interaction.tags)
  return tags_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Interaction::mutable_tags() {
  // @@protoc_insertion_point(field_mutable_list:ubii.interactions.Interaction.tags)
  return &tags_;
}

// string description = 10;
inline void Interaction::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Interaction::description() const {
  // @@protoc_insertion_point(field_get:ubii.interactions.Interaction.description)
  return description_.GetNoArena();
}
inline void Interaction::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ubii.interactions.Interaction.description)
}
#if LANG_CXX11
inline void Interaction::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ubii.interactions.Interaction.description)
}
#endif
inline void Interaction::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ubii.interactions.Interaction.description)
}
inline void Interaction::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ubii.interactions.Interaction.description)
}
inline ::std::string* Interaction::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:ubii.interactions.Interaction.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Interaction::release_description() {
  // @@protoc_insertion_point(field_release:ubii.interactions.Interaction.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Interaction::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:ubii.interactions.Interaction.description)
}

// .ubii.interactions.InteractionStatus status = 11;
inline void Interaction::clear_status() {
  status_ = 0;
}
inline ::ubii::interactions::InteractionStatus Interaction::status() const {
  // @@protoc_insertion_point(field_get:ubii.interactions.Interaction.status)
  return static_cast< ::ubii::interactions::InteractionStatus >(status_);
}
inline void Interaction::set_status(::ubii::interactions::InteractionStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:ubii.interactions.Interaction.status)
}

// -------------------------------------------------------------------

// InteractionList

// repeated .ubii.interactions.Interaction elements = 1;
inline int InteractionList::elements_size() const {
  return elements_.size();
}
inline void InteractionList::clear_elements() {
  elements_.Clear();
}
inline ::ubii::interactions::Interaction* InteractionList::mutable_elements(int index) {
  // @@protoc_insertion_point(field_mutable:ubii.interactions.InteractionList.elements)
  return elements_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ubii::interactions::Interaction >*
InteractionList::mutable_elements() {
  // @@protoc_insertion_point(field_mutable_list:ubii.interactions.InteractionList.elements)
  return &elements_;
}
inline const ::ubii::interactions::Interaction& InteractionList::elements(int index) const {
  // @@protoc_insertion_point(field_get:ubii.interactions.InteractionList.elements)
  return elements_.Get(index);
}
inline ::ubii::interactions::Interaction* InteractionList::add_elements() {
  // @@protoc_insertion_point(field_add:ubii.interactions.InteractionList.elements)
  return elements_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ubii::interactions::Interaction >&
InteractionList::elements() const {
  // @@protoc_insertion_point(field_list:ubii.interactions.InteractionList.elements)
  return elements_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace interactions
}  // namespace ubii

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ubii::interactions::InteractionStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ubii::interactions::InteractionStatus>() {
  return ::ubii::interactions::InteractionStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_proto_2finteractions_2finteraction_2eproto
