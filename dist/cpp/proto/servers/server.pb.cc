// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/servers/server.proto

#include "proto/servers/server.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace ubii {
namespace servers {
class ServerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Server>
      _instance;
} _Server_default_instance_;
}  // namespace servers
}  // namespace ubii
namespace protobuf_proto_2fservers_2fserver_2eproto {
static void InitDefaultsServer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ubii::servers::_Server_default_instance_;
    new (ptr) ::ubii::servers::Server();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ubii::servers::Server::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Server =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsServer}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Server.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ubii::servers::Server, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ubii::servers::Server, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ubii::servers::Server, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ubii::servers::Server, ip_ethernet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ubii::servers::Server, ip_wlan_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ubii::servers::Server, port_service_zmq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ubii::servers::Server, port_service_rest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ubii::servers::Server, port_topic_data_zmq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ubii::servers::Server, port_topic_data_ws_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ubii::servers::Server, constants_json_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ubii::servers::Server)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ubii::servers::_Server_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "proto/servers/server.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\032proto/servers/server.proto\022\014ubii.serve"
      "rs\"\316\001\n\006Server\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022"
      "\023\n\013ip_ethernet\030\003 \001(\t\022\017\n\007ip_wlan\030\004 \001(\t\022\030\n"
      "\020port_service_zmq\030\005 \001(\t\022\031\n\021port_service_"
      "rest\030\006 \001(\t\022\033\n\023port_topic_data_zmq\030\007 \001(\t\022"
      "\032\n\022port_topic_data_ws\030\010 \001(\t\022\026\n\016constants"
      "_json\030\t \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 259);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proto/servers/server.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_proto_2fservers_2fserver_2eproto
namespace ubii {
namespace servers {

// ===================================================================

void Server::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Server::kIdFieldNumber;
const int Server::kNameFieldNumber;
const int Server::kIpEthernetFieldNumber;
const int Server::kIpWlanFieldNumber;
const int Server::kPortServiceZmqFieldNumber;
const int Server::kPortServiceRestFieldNumber;
const int Server::kPortTopicDataZmqFieldNumber;
const int Server::kPortTopicDataWsFieldNumber;
const int Server::kConstantsJsonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Server::Server()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fservers_2fserver_2eproto::scc_info_Server.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ubii.servers.Server)
}
Server::Server(const Server& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ip_ethernet_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip_ethernet().size() > 0) {
    ip_ethernet_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_ethernet_);
  }
  ip_wlan_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip_wlan().size() > 0) {
    ip_wlan_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_wlan_);
  }
  port_service_zmq_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.port_service_zmq().size() > 0) {
    port_service_zmq_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.port_service_zmq_);
  }
  port_service_rest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.port_service_rest().size() > 0) {
    port_service_rest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.port_service_rest_);
  }
  port_topic_data_zmq_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.port_topic_data_zmq().size() > 0) {
    port_topic_data_zmq_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.port_topic_data_zmq_);
  }
  port_topic_data_ws_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.port_topic_data_ws().size() > 0) {
    port_topic_data_ws_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.port_topic_data_ws_);
  }
  constants_json_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.constants_json().size() > 0) {
    constants_json_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.constants_json_);
  }
  // @@protoc_insertion_point(copy_constructor:ubii.servers.Server)
}

void Server::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_ethernet_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_wlan_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_service_zmq_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_service_rest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_topic_data_zmq_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_topic_data_ws_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  constants_json_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Server::~Server() {
  // @@protoc_insertion_point(destructor:ubii.servers.Server)
  SharedDtor();
}

void Server::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_ethernet_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_wlan_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_service_zmq_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_service_rest_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_topic_data_zmq_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_topic_data_ws_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  constants_json_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Server::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Server::descriptor() {
  ::protobuf_proto_2fservers_2fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fservers_2fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Server& Server::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fservers_2fserver_2eproto::scc_info_Server.base);
  return *internal_default_instance();
}


void Server::Clear() {
// @@protoc_insertion_point(message_clear_start:ubii.servers.Server)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_ethernet_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_wlan_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_service_zmq_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_service_rest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_topic_data_zmq_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_topic_data_ws_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  constants_json_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Server::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ubii.servers.Server)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.servers.Server.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.servers.Server.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ip_ethernet = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_ethernet()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_ethernet().data(), static_cast<int>(this->ip_ethernet().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.servers.Server.ip_ethernet"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ip_wlan = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_wlan()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_wlan().data(), static_cast<int>(this->ip_wlan().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.servers.Server.ip_wlan"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string port_service_zmq = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_port_service_zmq()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->port_service_zmq().data(), static_cast<int>(this->port_service_zmq().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.servers.Server.port_service_zmq"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string port_service_rest = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_port_service_rest()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->port_service_rest().data(), static_cast<int>(this->port_service_rest().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.servers.Server.port_service_rest"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string port_topic_data_zmq = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_port_topic_data_zmq()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->port_topic_data_zmq().data(), static_cast<int>(this->port_topic_data_zmq().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.servers.Server.port_topic_data_zmq"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string port_topic_data_ws = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_port_topic_data_ws()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->port_topic_data_ws().data(), static_cast<int>(this->port_topic_data_ws().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.servers.Server.port_topic_data_ws"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string constants_json = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_constants_json()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->constants_json().data(), static_cast<int>(this->constants_json().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ubii.servers.Server.constants_json"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ubii.servers.Server)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ubii.servers.Server)
  return false;
#undef DO_
}

void Server::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ubii.servers.Server)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.servers.Server.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.servers.Server.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string ip_ethernet = 3;
  if (this->ip_ethernet().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_ethernet().data(), static_cast<int>(this->ip_ethernet().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.servers.Server.ip_ethernet");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->ip_ethernet(), output);
  }

  // string ip_wlan = 4;
  if (this->ip_wlan().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_wlan().data(), static_cast<int>(this->ip_wlan().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.servers.Server.ip_wlan");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->ip_wlan(), output);
  }

  // string port_service_zmq = 5;
  if (this->port_service_zmq().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->port_service_zmq().data(), static_cast<int>(this->port_service_zmq().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.servers.Server.port_service_zmq");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->port_service_zmq(), output);
  }

  // string port_service_rest = 6;
  if (this->port_service_rest().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->port_service_rest().data(), static_cast<int>(this->port_service_rest().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.servers.Server.port_service_rest");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->port_service_rest(), output);
  }

  // string port_topic_data_zmq = 7;
  if (this->port_topic_data_zmq().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->port_topic_data_zmq().data(), static_cast<int>(this->port_topic_data_zmq().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.servers.Server.port_topic_data_zmq");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->port_topic_data_zmq(), output);
  }

  // string port_topic_data_ws = 8;
  if (this->port_topic_data_ws().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->port_topic_data_ws().data(), static_cast<int>(this->port_topic_data_ws().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.servers.Server.port_topic_data_ws");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->port_topic_data_ws(), output);
  }

  // string constants_json = 9;
  if (this->constants_json().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->constants_json().data(), static_cast<int>(this->constants_json().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.servers.Server.constants_json");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->constants_json(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ubii.servers.Server)
}

::google::protobuf::uint8* Server::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ubii.servers.Server)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.servers.Server.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.servers.Server.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string ip_ethernet = 3;
  if (this->ip_ethernet().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_ethernet().data(), static_cast<int>(this->ip_ethernet().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.servers.Server.ip_ethernet");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ip_ethernet(), target);
  }

  // string ip_wlan = 4;
  if (this->ip_wlan().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_wlan().data(), static_cast<int>(this->ip_wlan().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.servers.Server.ip_wlan");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->ip_wlan(), target);
  }

  // string port_service_zmq = 5;
  if (this->port_service_zmq().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->port_service_zmq().data(), static_cast<int>(this->port_service_zmq().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.servers.Server.port_service_zmq");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->port_service_zmq(), target);
  }

  // string port_service_rest = 6;
  if (this->port_service_rest().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->port_service_rest().data(), static_cast<int>(this->port_service_rest().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.servers.Server.port_service_rest");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->port_service_rest(), target);
  }

  // string port_topic_data_zmq = 7;
  if (this->port_topic_data_zmq().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->port_topic_data_zmq().data(), static_cast<int>(this->port_topic_data_zmq().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.servers.Server.port_topic_data_zmq");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->port_topic_data_zmq(), target);
  }

  // string port_topic_data_ws = 8;
  if (this->port_topic_data_ws().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->port_topic_data_ws().data(), static_cast<int>(this->port_topic_data_ws().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.servers.Server.port_topic_data_ws");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->port_topic_data_ws(), target);
  }

  // string constants_json = 9;
  if (this->constants_json().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->constants_json().data(), static_cast<int>(this->constants_json().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ubii.servers.Server.constants_json");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->constants_json(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ubii.servers.Server)
  return target;
}

size_t Server::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ubii.servers.Server)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string ip_ethernet = 3;
  if (this->ip_ethernet().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_ethernet());
  }

  // string ip_wlan = 4;
  if (this->ip_wlan().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_wlan());
  }

  // string port_service_zmq = 5;
  if (this->port_service_zmq().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->port_service_zmq());
  }

  // string port_service_rest = 6;
  if (this->port_service_rest().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->port_service_rest());
  }

  // string port_topic_data_zmq = 7;
  if (this->port_topic_data_zmq().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->port_topic_data_zmq());
  }

  // string port_topic_data_ws = 8;
  if (this->port_topic_data_ws().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->port_topic_data_ws());
  }

  // string constants_json = 9;
  if (this->constants_json().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->constants_json());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Server::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ubii.servers.Server)
  GOOGLE_DCHECK_NE(&from, this);
  const Server* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Server>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ubii.servers.Server)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ubii.servers.Server)
    MergeFrom(*source);
  }
}

void Server::MergeFrom(const Server& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ubii.servers.Server)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.ip_ethernet().size() > 0) {

    ip_ethernet_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_ethernet_);
  }
  if (from.ip_wlan().size() > 0) {

    ip_wlan_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_wlan_);
  }
  if (from.port_service_zmq().size() > 0) {

    port_service_zmq_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.port_service_zmq_);
  }
  if (from.port_service_rest().size() > 0) {

    port_service_rest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.port_service_rest_);
  }
  if (from.port_topic_data_zmq().size() > 0) {

    port_topic_data_zmq_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.port_topic_data_zmq_);
  }
  if (from.port_topic_data_ws().size() > 0) {

    port_topic_data_ws_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.port_topic_data_ws_);
  }
  if (from.constants_json().size() > 0) {

    constants_json_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.constants_json_);
  }
}

void Server::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ubii.servers.Server)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Server::CopyFrom(const Server& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ubii.servers.Server)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Server::IsInitialized() const {
  return true;
}

void Server::Swap(Server* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Server::InternalSwap(Server* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ip_ethernet_.Swap(&other->ip_ethernet_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ip_wlan_.Swap(&other->ip_wlan_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  port_service_zmq_.Swap(&other->port_service_zmq_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  port_service_rest_.Swap(&other->port_service_rest_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  port_topic_data_zmq_.Swap(&other->port_topic_data_zmq_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  port_topic_data_ws_.Swap(&other->port_topic_data_ws_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  constants_json_.Swap(&other->constants_json_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Server::GetMetadata() const {
  protobuf_proto_2fservers_2fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fservers_2fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace servers
}  // namespace ubii
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ubii::servers::Server* Arena::CreateMaybeMessage< ::ubii::servers::Server >(Arena* arena) {
  return Arena::CreateInternal< ::ubii::servers::Server >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
